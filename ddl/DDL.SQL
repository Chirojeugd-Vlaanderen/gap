--   -------------------------------------------------- 
--   Generated by Enterprise Architect Version 7.0.818
--   Created On : maandag, 05 mei, 2008 
--   DBMS       : SQL Server 2000 
--   -------------------------------------------------- 

USE ChiroGroep
GO

--  Drop Foreign Key Constraints 
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('FK_Adres_Woonplaats') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE Adres DROP CONSTRAINT FK_Adres_Woonplaats
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('FK_Adres_Straat') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE Adres DROP CONSTRAINT FK_Adres_Straat
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('FK_Afdelingsjaar_Afdeling') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE Afdelingsjaar DROP CONSTRAINT FK_Afdelingsjaar_Afdeling
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('FK_Afdelingsjaar_GroepsWerkjaar') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE Afdelingsjaar DROP CONSTRAINT FK_Afdelingsjaar_GroepsWerkjaar
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('FK_Afdelingsjaar_OfficieleAfdeling') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE Afdelingsjaar DROP CONSTRAINT FK_Afdelingsjaar_OfficieleAfdeling
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('BivakPlaats') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE Bivak DROP CONSTRAINT BivakPlaats
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('FK_Bivak_GroepsWerkjaar') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE Bivak DROP CONSTRAINT FK_Bivak_GroepsWerkjaar
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('Bivak') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE BivakDeelnemers DROP CONSTRAINT Bivak
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('Lid') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE BivakDeelnemers DROP CONSTRAINT Lid
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('FK_Chirocursus_Cursus') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE Chirocursus DROP CONSTRAINT FK_Chirocursus_Cursus
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('FK_Chirogroep_Groep') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE Chirogroep DROP CONSTRAINT FK_Chirogroep_Groep
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('FK_Chirogroep_StamNummer') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE Chirogroep DROP CONSTRAINT FK_Chirogroep_StamNummer
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('FK_CommunicatieVorm_CommunicatieType') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE CommunicatieVorm DROP CONSTRAINT FK_CommunicatieVorm_CommunicatieType
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('FK_CommunicatieVorm_Persoon') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE CommunicatieVorm DROP CONSTRAINT FK_CommunicatieVorm_Persoon
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('FK_Cursus_CursusSoort') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE Cursus DROP CONSTRAINT FK_Cursus_CursusSoort
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('FK_CursusSoort_Attest') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE CursusSoort DROP CONSTRAINT FK_CursusSoort_Attest
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('FK_Functie_Groep') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE Functie DROP CONSTRAINT FK_Functie_Groep
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('FK_GAV_Persoon') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE GAV DROP CONSTRAINT FK_GAV_Persoon
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('Groep') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE GelieerdePersoon DROP CONSTRAINT Groep
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('Persoon') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE GelieerdePersoon DROP CONSTRAINT Persoon
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('Cursus') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE GevolgdeCursus DROP CONSTRAINT Cursus
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('Persoon') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE GevolgdeCursus DROP CONSTRAINT Persoon
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('FK_Groep_Woonplaats') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE Groep DROP CONSTRAINT FK_Groep_Woonplaats
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('FK_GroepsWerkjaar_Groep') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE GroepsWerkjaar DROP CONSTRAINT FK_GroepsWerkjaar_Groep
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('Persoon') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE JoinAdresToPersoon DROP CONSTRAINT Persoon
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('Adres') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE JoinAdresToPersoon DROP CONSTRAINT Adres
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('Persoon') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE JoinCategorieToPersoon DROP CONSTRAINT Persoon
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('Categorie') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE JoinCategorieToPersoon DROP CONSTRAINT Categorie
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('Lid') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE JoinFunctieToLid DROP CONSTRAINT Lid
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('Functie') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE JoinFunctieToLid DROP CONSTRAINT Functie
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('GAV') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE JoinGroepToGAV DROP CONSTRAINT GAV
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('Groep') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE JoinGroepToGAV DROP CONSTRAINT Groep
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('Afdelingsjaar') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE JoinLeidingToAfdelingsjaar DROP CONSTRAINT Afdelingsjaar
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('Leiding') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE JoinLeidingToAfdelingsjaar DROP CONSTRAINT Leiding
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('Lid') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE JoinLidVrijVeldTypeToLid DROP CONSTRAINT Lid
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('LidVrijVeldType') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE JoinLidVrijVeldTypeToLid DROP CONSTRAINT LidVrijVeldType
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('Persoon') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE JoinPersoonsverzekeringToPersoon DROP CONSTRAINT Persoon
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('Persoonsverzekering') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE JoinPersoonsverzekeringToPersoon DROP CONSTRAINT Persoonsverzekering
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('Attest') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE JoinPersoonToAttest DROP CONSTRAINT Attest
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('Persoon') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE JoinPersoonToAttest DROP CONSTRAINT Persoon
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('Persoon') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE JoinPersoonVrijVeldTypeToPersoon DROP CONSTRAINT Persoon
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('PersoonVrijVeldType') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE JoinPersoonVrijVeldTypeToPersoon DROP CONSTRAINT PersoonVrijVeldType
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('Chirogroep') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE JoinSatellietToChirogroep DROP CONSTRAINT Chirogroep
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('Satelliet') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE JoinSatellietToChirogroep DROP CONSTRAINT Satelliet
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('Taal') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE JoinStraatToTaal DROP CONSTRAINT Taal
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('Straat') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE JoinStraatToTaal DROP CONSTRAINT Straat
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('FK_Kind_Afdelingsjaar') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE Kind DROP CONSTRAINT FK_Kind_Afdelingsjaar
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('FK_Kind_Lid') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE Kind DROP CONSTRAINT FK_Kind_Lid
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('FK_Land_Gemeente') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE Land DROP CONSTRAINT FK_Land_Gemeente
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('FK_Leiding_Lid') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE Leiding DROP CONSTRAINT FK_Leiding_Lid
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('FK_Lid_GroepsWerkjaar') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE Lid DROP CONSTRAINT FK_Lid_GroepsWerkjaar
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('FK_Lid_Persoon') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE Lid DROP CONSTRAINT FK_Lid_Persoon
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('FK_LidVrijVeldType_VrijVeldType') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE LidVrijVeldType DROP CONSTRAINT FK_LidVrijVeldType_VrijVeldType
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('FK_PersoonsAdres_AdresType') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE PersoonsAdres DROP CONSTRAINT FK_PersoonsAdres_AdresType
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('FK_Persoonsverzekering_GroepsWerkjaar') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE Persoonsverzekering DROP CONSTRAINT FK_Persoonsverzekering_GroepsWerkjaar
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('FK_Persoonsverzekering_Verzekeringstype') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE Persoonsverzekering DROP CONSTRAINT FK_Persoonsverzekering_Verzekeringstype
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('FK_PersoonVrijVeldType_Groep') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE PersoonVrijVeldType DROP CONSTRAINT FK_PersoonVrijVeldType_Groep
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('FK_PersoonVrijVeldType_VrijVeldType') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE PersoonVrijVeldType DROP CONSTRAINT FK_PersoonVrijVeldType_VrijVeldType
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('FK_Satelliet_Groep') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE Satelliet DROP CONSTRAINT FK_Satelliet_Groep
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('FK_Straat_Gemeente') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE Straat DROP CONSTRAINT FK_Straat_Gemeente
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('FK_Woonplaats_Gemeente') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE Woonplaats DROP CONSTRAINT FK_Woonplaats_Gemeente
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id('FK_Woonplaats_Land') AND OBJECTPROPERTY(id, 'IsForeignKey') = 1)
ALTER TABLE Woonplaats DROP CONSTRAINT FK_Woonplaats_Land
GO


--  Drop Tables, Stored Procedures and Views 
IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('Adres') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE Adres
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('AdresType') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE AdresType
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('Afdeling') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE Afdeling
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('Afdelingsjaar') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE Afdelingsjaar
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('Attest') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE Attest
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('BehaaldAttest') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE BehaaldAttest
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('Bivak') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE Bivak
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('BivakDeelnemers') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE BivakDeelnemers
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('Categorie') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE Categorie
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('Chirocursus') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE Chirocursus
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('Chirogroep') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE Chirogroep
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('Communicatie') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE Communicatie
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('CommunicatieType') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE CommunicatieType
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('CommunicatieVorm') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE CommunicatieVorm
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('Cursus') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE Cursus
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('CursusSoort') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE CursusSoort
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('Functie') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE Functie
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('GAV') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE GAV
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('GAVSchap') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE GAVSchap
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('GeassocieerdMet') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE GeassocieerdMet
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('GelieerdePersoon') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE GelieerdePersoon
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('Gemeente') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE Gemeente
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('GevolgdeCursus') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE GevolgdeCursus
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('Groep') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE Groep
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('GroepsWerkjaar') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE GroepsWerkjaar
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('JoinAdresToPersoon') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE JoinAdresToPersoon
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('JoinCategorieToPersoon') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE JoinCategorieToPersoon
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('JoinFunctieToLid') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE JoinFunctieToLid
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('JoinGroepToGAV') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE JoinGroepToGAV
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('JoinLeidingToAfdelingsjaar') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE JoinLeidingToAfdelingsjaar
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('JoinLidVrijVeldTypeToLid') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE JoinLidVrijVeldTypeToLid
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('JoinPersoonsverzekeringToPersoon') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE JoinPersoonsverzekeringToPersoon
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('JoinPersoonToAttest') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE JoinPersoonToAttest
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('JoinPersoonVrijVeldTypeToPersoon') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE JoinPersoonVrijVeldTypeToPersoon
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('JoinSatellietToChirogroep') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE JoinSatellietToChirogroep
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('JoinStraatToTaal') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE JoinStraatToTaal
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('Kind') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE Kind
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('Land') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE Land
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('Leiding') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE Leiding
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('Lid') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE Lid
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('LidVrijVeld') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE LidVrijVeld
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('LidVrijVeldType') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE LidVrijVeldType
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('OfficieleAfdeling') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE OfficieleAfdeling
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('Persoon') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE Persoon
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('PersoonsAdres') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE PersoonsAdres
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('Persoonsverzekering') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE Persoonsverzekering
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('PersoonVrijVeld') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE PersoonVrijVeld
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('PersoonVrijVeldType') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE PersoonVrijVeldType
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('Satelliet') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE Satelliet
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('StamNummer') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE StamNummer
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('Straat') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE Straat
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('StraatNaam') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE StraatNaam
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('Taal') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE Taal
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('Verzekeringstype') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE Verzekeringstype
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('VrijVeldType') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE VrijVeldType
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('WerkJaar') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE WerkJaar
GO

IF EXISTS (SELECT * FROM dbo.SYSOBJECTS WHERE id = object_id('Woonplaats') AND  OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE Woonplaats
GO




--  Create Tables 
CREATE TABLE Adres ( 
	Bus char(10) NULL,
	HuisNr int NULL,
	PostCode char(10) NULL,    --  Niet te verwarren met postnummer.  Het postnummer is onlosmakelijk verbonden met de gemeente.  Het veld 'postcode' wordt gebruikt voor adressen in Nederland, waar er nog een niveau tussen adres en gemeente zit. 
	adresID int NOT NULL,
	woonplaatsID int NULL,
	straatID int NULL
)
GO

CREATE TABLE AdresType ( 
	adresTypeID int NOT NULL
)
GO

CREATE TABLE Afdeling ( 
	Afdelingsnaam text NULL,
	Afkorting text NULL,
	afdelingID int NOT NULL
)
GO

CREATE TABLE Afdelingsjaar ( 
	Van int NULL,    --  geboortejaar 'vanaf' 
	Tot int NULL,    --  geboortejaar 'tot en met' 
	afdelingsjaarID int NOT NULL,
	afdelingID int NULL,
	groepsWerkjaarID int NULL,
	officieleAfdelingID int NULL
)
GO

CREATE TABLE Attest ( 
	attestID int NOT NULL
)
GO

CREATE TABLE BehaaldAttest ( 
	Jaar int NULL,
	AttestNummer int NULL,
	behaaldAttestID int NOT NULL
)
GO

CREATE TABLE Bivak ( 
	Van Date NULL,
	Tot Date NULL,
	bivakID int NOT NULL,
	adresID int NULL,
	groepsWerkjaarID int NULL
)
GO

CREATE TABLE BivakDeelnemers ( 
	bivakID int NULL,
	lidID int NULL
)
GO

CREATE TABLE Categorie ( 
	Naam text NULL,
	Code char(10) NULL,
	categorieID int NOT NULL
)
GO

CREATE TABLE Chirocursus ( 
	chirocursusID int NOT NULL
)
GO

CREATE TABLE Chirogroep ( 
	chirogroepID int NOT NULL,
	stamNummerID int NULL
)
GO

CREATE TABLE Communicatie ( 
	Nota text NULL,    --  'in het weekend', 'onder de werkuren', ... Interessant voor bijv. telefoonnummers. 
	communicatieID int NOT NULL
)
GO

CREATE TABLE CommunicatieType ( 
	Omschrijving text NULL,
	Validatie text NULL,    --  Reguliere expressie die aangeeft hoe een geldig nummer/adres/... er uitziet 
	IsGezinsgebonden bit NULL,    --  geeft aan of nummers/... van dit communicatietype gekopieerd moeten worden naar adresgenoten. 
	communicatieTypeID int NOT NULL
)
GO

CREATE TABLE CommunicatieVorm ( 
	Nummer text NULL,    --  'nummer' is een misleidende naam, want het kan even goed gaan over een e-mailadres e.d. 
	communicatieVormID int NOT NULL,
	communicatieTypeID int NULL,
	persoonID int NULL
)
GO

CREATE TABLE Cursus ( 
	StartDatum date NULL,
	Plaats text NULL,
	cursusID int NOT NULL,
	cursusSoortID int NULL
)
GO

CREATE TABLE CursusSoort ( 
	Naam text NULL,
	cursusSoortID int NOT NULL,
	attestID int NULL
)
GO

CREATE TABLE Functie ( 
	IsNationaalBepaald bool NULL,    --  Enerzijds zijn er functies die vanuit de Chiro 'opgelegd' worden.  De gebruikers kunnen ook eigen functies definieren. 
	MaxAantal int NULL,    --  Als het aantal personen in een groep met deze functie een bovengrens heeft, dan is die bovengrens gegeven door 'maxAantal'.  Bijvoorbeeld: Hoogstens 1 contactpersoon per groep. 
	MinAantal int NULL,    --  Als het aantal personen in een groep met deze functie een ondergrens heeft, dan is die ondergrens gegeven door 'maxAantal'.  Bijvoorbeeld: Minstens 1 contactpersoon per groep. 
	MinimumLeeftijd int NULL,    --  Mogelijk is er een minimumleeftijd voor een bepaalde functie. 
	Naam text NULL,    --  Naam van de functie 
	Van WerkJaar NULL,    --  Vanaf wanneer deze functie beschikbaar gemaakt is voor de groep 
	Tot WerkJaar NULL,    --  Tot wanneer deze functie beschikbaar blijft voor de groep. Niet opgegeven = voor altijd. 
	functieID int NOT NULL,
	groepID int NULL
)
GO

CREATE TABLE GAV ( 
	Login text NULL,
	Password text NULL,
	gAVID int NOT NULL
)
GO

CREATE TABLE GAVSchap ( 
	Vervaldatum date NULL,    --  GAV vervalt op 15 oktober van volgend werkjaar.  1 GAV kan zijn termijn verlengen, door het nieuwe werkjaar te initieren. 
	gAVSchapID int NOT NULL
)
GO

CREATE TABLE GeassocieerdMet ( 
	geassocieerdMetID int NOT NULL
)
GO

CREATE TABLE GelieerdePersoon ( 
	groepID int NULL,
	persoonID int NULL
)
GO

CREATE TABLE Gemeente ( 
	gemeenteID int NOT NULL
)
GO

CREATE TABLE GevolgdeCursus ( 
	cursusID int NULL,
	persoonID int NULL
)
GO

CREATE TABLE Groep ( 
	Logo image NULL,
	Naam varchar(35) NOT NULL,
	Oprichtingsjaar int NULL,
	Website varchar(100) NULL,
	Code char(8) NOT NULL,    --  Voor een Chirogroep is de code het huidige stamnummer.  Als er ook gegevens van oud-leidingsploegen bewaard zullen worden op het nationaal secretariaat, zullen voor dit soort 'satellieten' ook codes bepaald moeten worden. 
	groepID int identity(1,1)  NOT NULL,
	woonplaatsID int NULL
)
GO

CREATE TABLE GroepsWerkjaar ( 
	Jaar WerkJaar NULL,    --  Een werkjaar wordt geidentificeerd via het eerste van de twee kalender jaren.  Zo heeft bijv. voor 2007-2008 het veld 'Jaar' de waarde 2007, en voor 2008-2009 de waarde 2008. 
	groepsWerkjaarID int NOT NULL,
	groepID int NULL
)
GO

CREATE TABLE JoinAdresToPersoon ( 
	persoonID int NULL,
	adresID int NULL
)
GO

CREATE TABLE JoinCategorieToPersoon ( 
	persoonID int NULL,
	categorieID int NULL
)
GO

CREATE TABLE JoinFunctieToLid ( 
	lidID int NULL,
	functieID int NULL
)
GO

CREATE TABLE JoinGroepToGAV ( 
	gAVID int NULL,
	groepID int NULL
)
GO

CREATE TABLE JoinLeidingToAfdelingsjaar ( 
	afdelingsjaarID int NULL,
	leidingID int NULL
)
GO

CREATE TABLE JoinLidVrijVeldTypeToLid ( 
	lidID int NULL,
	lidVrijVeldTypeID int NULL
)
GO

CREATE TABLE JoinPersoonsverzekeringToPersoon ( 
	persoonID int NULL,
	persoonsverzekeringID int NULL
)
GO

CREATE TABLE JoinPersoonToAttest ( 
	attestID int NULL,
	persoonID int NULL
)
GO

CREATE TABLE JoinPersoonVrijVeldTypeToPersoon ( 
	persoonID int NULL,
	persoonVrijVeldTypeID int NULL
)
GO

CREATE TABLE JoinSatellietToChirogroep ( 
	chirogroepID int NULL,
	satellietID int NULL
)
GO

CREATE TABLE JoinStraatToTaal ( 
	taalID int NULL,
	straatID int NULL
)
GO

CREATE TABLE Kind ( 
	kindID int NOT NULL,
	afdelingsjaarID int NULL
)
GO

CREATE TABLE Land ( 
	Naam text NULL,
	landID int NOT NULL,
	gemeenteID int NULL
)
GO

CREATE TABLE Leiding ( 
	DubbelpuntAbonnement bool NULL,
	leidingID int NOT NULL
)
GO

CREATE TABLE Lid ( 
	LidgeldBetaald bit NULL,
	VolgendWerkjaar Toekomstperspectief NULL,
	lidID int NOT NULL,
	groepsWerkjaarID int NULL,
	persoonID int NULL
)
GO

CREATE TABLE LidVrijVeld ( 
	Waarde Generiek NULL,
	lidVrijVeldID int NOT NULL
)
GO

CREATE TABLE LidVrijVeldType ( 
	Van GroepsWerkjaar NULL,
	Tot GroepsWerkjaar NULL,
	lidVrijVeldTypeID int NOT NULL
)
GO

CREATE TABLE OfficieleAfdeling ( 
	Naam text NULL,
	officieleAfdelingID int NOT NULL
)
GO

CREATE TABLE Persoon ( 
	AdNummer int NULL,
	Chiroleeftijd short DEFAULT 0 NULL,    --  Dit veld geeft weer of een lid 'op zijn leeftijd' zit voor de automatische berekening van de afdeling.  Standaard heeft het de waarde 0.  Als een lid een jaartje hoger zit dan zijn/haar geboortedatum doet vermoeden (bijv. omdat hij/zij een leerjaar oversloeg) , dan zal dit veld op +1 staan. 
	Geboortedatum date NULL,
	Geslacht Geslachtslijst NULL,
	Naam text NULL,
	Sterfdatum date NULL,
	Voornaam text NULL,
	persoonID int NOT NULL
)
GO

CREATE TABLE PersoonsAdres ( 
	IsStandaard bool NULL,
	Opmerking text NULL,
	persoonsAdresID int NOT NULL,
	adresTypeID int NULL
)
GO

CREATE TABLE Persoonsverzekering ( 
	tot date NULL,
	van date NULL,
	groepsWerkjaarID int NULL,
	persoonsverzekeringID int NOT NULL,
	verzekeringstypeID int NULL
)
GO

CREATE TABLE PersoonVrijVeld ( 
	Waarde generisch NULL,
	persoonVrijVeldID int NOT NULL
)
GO

CREATE TABLE PersoonVrijVeldType ( 
	persoonVrijVeldTypeID int NOT NULL,
	groepID int NULL
)
GO

CREATE TABLE Satelliet ( 
	Naam text NULL,
	TeVerzekeren bit NULL,    --  Worden leden van de satteliet verzekerd via de Chiro? 
	satellietID int NOT NULL
)
GO

CREATE TABLE StamNummer ( 
	Regioprefix text NULL,
	Geslacht char(10) NULL,
	Structuurcode int NULL,    --  de eerste cijfers van een stamnummer duiden soms op verbond, soms op gewest, of soms op allebei 
	Volgnr int NULL,
	Stamnummer text NULL,
	stamNummerID int NOT NULL
)
GO

CREATE TABLE Straat ( 
	Status  NULL,    --  bijv: in aanvraag, 'vrije straat' (buitenland),.. 
	straatID int NOT NULL,
	gemeenteID int NULL
)
GO

CREATE TABLE StraatNaam ( 
	straatNaamID int NOT NULL
)
GO

CREATE TABLE Taal ( 
	taalID int NOT NULL
)
GO

CREATE TABLE Verzekeringstype ( 
	Code text NULL,    --  max. 3 letters; duidelijker op rapporten 
	Naam text NULL,
	Omschrijving text NULL,    --  uitvoerige omschrijving van het type verzekering 
	verzekeringstypeID int NOT NULL
)
GO

CREATE TABLE VrijVeldType ( 
	naam text NULL,
	datatype int NULL,
	vrijVeldTypeID int NOT NULL
)
GO

CREATE TABLE WerkJaar ( 
	werkJaarID int NOT NULL
)
GO

CREATE TABLE Woonplaats ( 
	Plaatsnaam text NULL,
	PostNr int NULL,
	VolgNr int NULL,
	woonplaatsID int NOT NULL,
	gemeenteID int NULL,
	landID int NULL
)
GO


--  Create Primary Key Constraints 
ALTER TABLE Adres ADD CONSTRAINT PK_Adres 
	PRIMARY KEY CLUSTERED (adresID)
GO

ALTER TABLE AdresType ADD CONSTRAINT PK_AdresType 
	PRIMARY KEY CLUSTERED (adresTypeID)
GO

ALTER TABLE Afdeling ADD CONSTRAINT PK_Afdeling 
	PRIMARY KEY CLUSTERED (afdelingID)
GO

ALTER TABLE Afdelingsjaar ADD CONSTRAINT PK_Afdelingsjaar 
	PRIMARY KEY CLUSTERED (afdelingsjaarID)
GO

ALTER TABLE Attest ADD CONSTRAINT PK_Attest 
	PRIMARY KEY CLUSTERED (attestID)
GO

ALTER TABLE BehaaldAttest ADD CONSTRAINT PK_BehaaldAttest 
	PRIMARY KEY CLUSTERED (behaaldAttestID)
GO

ALTER TABLE Bivak ADD CONSTRAINT PK_Bivak 
	PRIMARY KEY CLUSTERED (bivakID)
GO

ALTER TABLE Categorie ADD CONSTRAINT PK_Categorie 
	PRIMARY KEY CLUSTERED (categorieID)
GO

ALTER TABLE Chirocursus ADD CONSTRAINT PK_Chirocursus 
	PRIMARY KEY CLUSTERED (chirocursusID)
GO

ALTER TABLE Chirogroep ADD CONSTRAINT PK_Chirogroep 
	PRIMARY KEY CLUSTERED (chirogroepID)
GO

ALTER TABLE Communicatie ADD CONSTRAINT PK_Communicatie 
	PRIMARY KEY CLUSTERED (communicatieID)
GO

ALTER TABLE CommunicatieType ADD CONSTRAINT PK_CommunicatieType 
	PRIMARY KEY CLUSTERED (communicatieTypeID)
GO

ALTER TABLE CommunicatieVorm ADD CONSTRAINT PK_CommunicatieVorm 
	PRIMARY KEY CLUSTERED (communicatieVormID)
GO

ALTER TABLE Cursus ADD CONSTRAINT PK_Cursus 
	PRIMARY KEY CLUSTERED (cursusID)
GO

ALTER TABLE CursusSoort ADD CONSTRAINT PK_CursusSoort 
	PRIMARY KEY CLUSTERED (cursusSoortID)
GO

ALTER TABLE Functie ADD CONSTRAINT PK_Functie 
	PRIMARY KEY CLUSTERED (functieID)
GO

ALTER TABLE GAV ADD CONSTRAINT PK_GAV 
	PRIMARY KEY CLUSTERED (gAVID)
GO

ALTER TABLE GAVSchap ADD CONSTRAINT PK_GAVSchap 
	PRIMARY KEY CLUSTERED (gAVSchapID)
GO

ALTER TABLE GeassocieerdMet ADD CONSTRAINT PK_GeassocieerdMet 
	PRIMARY KEY CLUSTERED (geassocieerdMetID)
GO

ALTER TABLE Gemeente ADD CONSTRAINT PK_Gemeente 
	PRIMARY KEY CLUSTERED (gemeenteID)
GO

ALTER TABLE Groep ADD CONSTRAINT PK_Groep 
	PRIMARY KEY CLUSTERED (groepID)
GO

ALTER TABLE GroepsWerkjaar ADD CONSTRAINT PK_GroepsWerkjaar 
	PRIMARY KEY CLUSTERED (groepsWerkjaarID)
GO

ALTER TABLE Kind ADD CONSTRAINT PK_Kind 
	PRIMARY KEY CLUSTERED (kindID)
GO

ALTER TABLE Land ADD CONSTRAINT PK_Land 
	PRIMARY KEY CLUSTERED (landID)
GO

ALTER TABLE Leiding ADD CONSTRAINT PK_Leiding 
	PRIMARY KEY CLUSTERED (leidingID)
GO

ALTER TABLE Lid ADD CONSTRAINT PK_Lid 
	PRIMARY KEY CLUSTERED (lidID)
GO

ALTER TABLE LidVrijVeld ADD CONSTRAINT PK_LidVrijVeld 
	PRIMARY KEY CLUSTERED (lidVrijVeldID)
GO

ALTER TABLE LidVrijVeldType ADD CONSTRAINT PK_LidVrijVeldType 
	PRIMARY KEY CLUSTERED (lidVrijVeldTypeID)
GO

ALTER TABLE OfficieleAfdeling ADD CONSTRAINT PK_OfficieleAfdeling 
	PRIMARY KEY CLUSTERED (officieleAfdelingID)
GO

ALTER TABLE Persoon ADD CONSTRAINT PK_Persoon 
	PRIMARY KEY CLUSTERED (persoonID)
GO

ALTER TABLE PersoonsAdres ADD CONSTRAINT PK_PersoonsAdres 
	PRIMARY KEY CLUSTERED (persoonsAdresID)
GO

ALTER TABLE Persoonsverzekering ADD CONSTRAINT PK_Persoonsverzekering 
	PRIMARY KEY CLUSTERED (persoonsverzekeringID)
GO

ALTER TABLE PersoonVrijVeld ADD CONSTRAINT PK_PersoonVrijVeld 
	PRIMARY KEY CLUSTERED (persoonVrijVeldID)
GO

ALTER TABLE PersoonVrijVeldType ADD CONSTRAINT PK_PersoonVrijVeldType 
	PRIMARY KEY CLUSTERED (persoonVrijVeldTypeID)
GO

ALTER TABLE Satelliet ADD CONSTRAINT PK_Satelliet 
	PRIMARY KEY CLUSTERED (satellietID)
GO

ALTER TABLE StamNummer ADD CONSTRAINT PK_StamNummer 
	PRIMARY KEY CLUSTERED (stamNummerID)
GO

ALTER TABLE Straat ADD CONSTRAINT PK_Straat 
	PRIMARY KEY CLUSTERED (straatID)
GO

ALTER TABLE StraatNaam ADD CONSTRAINT PK_StraatNaam 
	PRIMARY KEY CLUSTERED (straatNaamID)
GO

ALTER TABLE Taal ADD CONSTRAINT PK_Taal 
	PRIMARY KEY CLUSTERED (taalID)
GO

ALTER TABLE Verzekeringstype ADD CONSTRAINT PK_Verzekeringstype 
	PRIMARY KEY CLUSTERED (verzekeringstypeID)
GO

ALTER TABLE VrijVeldType ADD CONSTRAINT PK_VrijVeldType 
	PRIMARY KEY CLUSTERED (vrijVeldTypeID)
GO

ALTER TABLE WerkJaar ADD CONSTRAINT PK_WerkJaar 
	PRIMARY KEY CLUSTERED (werkJaarID)
GO

ALTER TABLE Woonplaats ADD CONSTRAINT PK_Woonplaats 
	PRIMARY KEY CLUSTERED (woonplaatsID)
GO


--  Create Indexes 
ALTER TABLE Groep
	ADD CONSTRAINT UQ_Groep_Code UNIQUE (Code)
GO


--  Create Foreign Key Constraints 
ALTER TABLE Adres ADD CONSTRAINT FK_Adres_Woonplaats 
	FOREIGN KEY (woonplaatsID) REFERENCES Woonplaats (woonplaatsID)
GO

ALTER TABLE Adres ADD CONSTRAINT FK_Adres_Straat 
	FOREIGN KEY (straatID) REFERENCES Straat (straatID)
GO

ALTER TABLE Afdelingsjaar ADD CONSTRAINT FK_Afdelingsjaar_Afdeling 
	FOREIGN KEY (afdelingID) REFERENCES Afdeling (afdelingID)
GO

ALTER TABLE Afdelingsjaar ADD CONSTRAINT FK_Afdelingsjaar_GroepsWerkjaar 
	FOREIGN KEY (groepsWerkjaarID) REFERENCES GroepsWerkjaar (groepsWerkjaarID)
GO

ALTER TABLE Afdelingsjaar ADD CONSTRAINT FK_Afdelingsjaar_OfficieleAfdeling 
	FOREIGN KEY (officieleAfdelingID) REFERENCES OfficieleAfdeling (officieleAfdelingID)
GO

ALTER TABLE Bivak ADD CONSTRAINT BivakPlaats 
	FOREIGN KEY (adresID) REFERENCES Adres (adresID)
GO

ALTER TABLE Bivak ADD CONSTRAINT FK_Bivak_GroepsWerkjaar 
	FOREIGN KEY (groepsWerkjaarID) REFERENCES GroepsWerkjaar (groepsWerkjaarID)
GO

ALTER TABLE BivakDeelnemers ADD CONSTRAINT Bivak 
	FOREIGN KEY (bivakID) REFERENCES Bivak (bivakID)
GO

ALTER TABLE BivakDeelnemers ADD CONSTRAINT Lid 
	FOREIGN KEY (lidID) REFERENCES Lid (lidID)
GO

ALTER TABLE Chirocursus ADD CONSTRAINT FK_Chirocursus_Cursus 
	FOREIGN KEY (chirocursusID) REFERENCES Cursus (cursusID)
GO

ALTER TABLE Chirogroep ADD CONSTRAINT FK_Chirogroep_Groep 
	FOREIGN KEY (chirogroepID) REFERENCES Groep (groepID)
GO

ALTER TABLE Chirogroep ADD CONSTRAINT FK_Chirogroep_StamNummer 
	FOREIGN KEY (stamNummerID) REFERENCES StamNummer (stamNummerID)
GO

ALTER TABLE CommunicatieVorm ADD CONSTRAINT FK_CommunicatieVorm_CommunicatieType 
	FOREIGN KEY (communicatieTypeID) REFERENCES CommunicatieType (communicatieTypeID)
GO

ALTER TABLE CommunicatieVorm ADD CONSTRAINT FK_CommunicatieVorm_Persoon 
	FOREIGN KEY (persoonID) REFERENCES Persoon (persoonID)
GO

ALTER TABLE Cursus ADD CONSTRAINT FK_Cursus_CursusSoort 
	FOREIGN KEY (cursusSoortID) REFERENCES CursusSoort (cursusSoortID)
GO

ALTER TABLE CursusSoort ADD CONSTRAINT FK_CursusSoort_Attest 
	FOREIGN KEY (attestID) REFERENCES Attest (attestID)
GO

ALTER TABLE Functie ADD CONSTRAINT FK_Functie_Groep 
	FOREIGN KEY (groepID) REFERENCES Groep (groepID)
GO

ALTER TABLE GAV ADD CONSTRAINT FK_GAV_Persoon 
	FOREIGN KEY (gAVID) REFERENCES Persoon (persoonID)
GO

ALTER TABLE GelieerdePersoon ADD CONSTRAINT Groep 
	FOREIGN KEY (groepID) REFERENCES Groep (groepID)
GO

ALTER TABLE GelieerdePersoon ADD CONSTRAINT Persoon 
	FOREIGN KEY (persoonID) REFERENCES Persoon (persoonID)
GO

ALTER TABLE GevolgdeCursus ADD CONSTRAINT Cursus 
	FOREIGN KEY (cursusID) REFERENCES Cursus (cursusID)
GO

ALTER TABLE GevolgdeCursus ADD CONSTRAINT Persoon 
	FOREIGN KEY (persoonID) REFERENCES Persoon (persoonID)
GO

ALTER TABLE Groep ADD CONSTRAINT FK_Groep_Woonplaats 
	FOREIGN KEY (woonplaatsID) REFERENCES Woonplaats (woonplaatsID)
GO

ALTER TABLE GroepsWerkjaar ADD CONSTRAINT FK_GroepsWerkjaar_Groep 
	FOREIGN KEY (groepID) REFERENCES Groep (groepID)
GO

ALTER TABLE JoinAdresToPersoon ADD CONSTRAINT Persoon 
	FOREIGN KEY (persoonID) REFERENCES Persoon (persoonID)
GO

ALTER TABLE JoinAdresToPersoon ADD CONSTRAINT Adres 
	FOREIGN KEY (adresID) REFERENCES Adres (adresID)
GO

ALTER TABLE JoinCategorieToPersoon ADD CONSTRAINT Persoon 
	FOREIGN KEY (persoonID) REFERENCES Persoon (persoonID)
GO

ALTER TABLE JoinCategorieToPersoon ADD CONSTRAINT Categorie 
	FOREIGN KEY (categorieID) REFERENCES Categorie (categorieID)
GO

ALTER TABLE JoinFunctieToLid ADD CONSTRAINT Lid 
	FOREIGN KEY (lidID) REFERENCES Lid (lidID)
GO

ALTER TABLE JoinFunctieToLid ADD CONSTRAINT Functie 
	FOREIGN KEY (functieID) REFERENCES Functie (functieID)
GO

ALTER TABLE JoinGroepToGAV ADD CONSTRAINT GAV 
	FOREIGN KEY (gAVID) REFERENCES GAV (gAVID)
GO

ALTER TABLE JoinGroepToGAV ADD CONSTRAINT Groep 
	FOREIGN KEY (groepID) REFERENCES Groep (groepID)
GO

ALTER TABLE JoinLeidingToAfdelingsjaar ADD CONSTRAINT Afdelingsjaar 
	FOREIGN KEY (afdelingsjaarID) REFERENCES Afdelingsjaar (afdelingsjaarID)
GO

ALTER TABLE JoinLeidingToAfdelingsjaar ADD CONSTRAINT Leiding 
	FOREIGN KEY (leidingID) REFERENCES Leiding (leidingID)
GO

ALTER TABLE JoinLidVrijVeldTypeToLid ADD CONSTRAINT Lid 
	FOREIGN KEY (lidID) REFERENCES Lid (lidID)
GO

ALTER TABLE JoinLidVrijVeldTypeToLid ADD CONSTRAINT LidVrijVeldType 
	FOREIGN KEY (lidVrijVeldTypeID) REFERENCES LidVrijVeldType (lidVrijVeldTypeID)
GO

ALTER TABLE JoinPersoonsverzekeringToPersoon ADD CONSTRAINT Persoon 
	FOREIGN KEY (persoonID) REFERENCES Persoon (persoonID)
GO

ALTER TABLE JoinPersoonsverzekeringToPersoon ADD CONSTRAINT Persoonsverzekering 
	FOREIGN KEY (persoonsverzekeringID) REFERENCES Persoonsverzekering (persoonsverzekeringID)
GO

ALTER TABLE JoinPersoonToAttest ADD CONSTRAINT Attest 
	FOREIGN KEY (attestID) REFERENCES Attest (attestID)
GO

ALTER TABLE JoinPersoonToAttest ADD CONSTRAINT Persoon 
	FOREIGN KEY (persoonID) REFERENCES Persoon (persoonID)
GO

ALTER TABLE JoinPersoonVrijVeldTypeToPersoon ADD CONSTRAINT Persoon 
	FOREIGN KEY (persoonID) REFERENCES Persoon (persoonID)
GO

ALTER TABLE JoinPersoonVrijVeldTypeToPersoon ADD CONSTRAINT PersoonVrijVeldType 
	FOREIGN KEY (persoonVrijVeldTypeID) REFERENCES PersoonVrijVeldType (persoonVrijVeldTypeID)
GO

ALTER TABLE JoinSatellietToChirogroep ADD CONSTRAINT Chirogroep 
	FOREIGN KEY (chirogroepID) REFERENCES Chirogroep (chirogroepID)
GO

ALTER TABLE JoinSatellietToChirogroep ADD CONSTRAINT Satelliet 
	FOREIGN KEY (satellietID) REFERENCES Satelliet (satellietID)
GO

ALTER TABLE JoinStraatToTaal ADD CONSTRAINT Taal 
	FOREIGN KEY (taalID) REFERENCES Taal (taalID)
GO

ALTER TABLE JoinStraatToTaal ADD CONSTRAINT Straat 
	FOREIGN KEY (straatID) REFERENCES Straat (straatID)
GO

ALTER TABLE Kind ADD CONSTRAINT FK_Kind_Afdelingsjaar 
	FOREIGN KEY (afdelingsjaarID) REFERENCES Afdelingsjaar (afdelingsjaarID)
GO

ALTER TABLE Kind ADD CONSTRAINT FK_Kind_Lid 
	FOREIGN KEY (kindID) REFERENCES Lid (lidID)
GO

ALTER TABLE Land ADD CONSTRAINT FK_Land_Gemeente 
	FOREIGN KEY (gemeenteID) REFERENCES Gemeente (gemeenteID)
GO

ALTER TABLE Leiding ADD CONSTRAINT FK_Leiding_Lid 
	FOREIGN KEY (leidingID) REFERENCES Lid (lidID)
GO

ALTER TABLE Lid ADD CONSTRAINT FK_Lid_GroepsWerkjaar 
	FOREIGN KEY (groepsWerkjaarID) REFERENCES GroepsWerkjaar (groepsWerkjaarID)
GO

ALTER TABLE Lid ADD CONSTRAINT FK_Lid_Persoon 
	FOREIGN KEY (persoonID) REFERENCES Persoon (persoonID)
GO

ALTER TABLE LidVrijVeldType ADD CONSTRAINT FK_LidVrijVeldType_VrijVeldType 
	FOREIGN KEY (lidVrijVeldTypeID) REFERENCES VrijVeldType (vrijVeldTypeID)
GO

ALTER TABLE PersoonsAdres ADD CONSTRAINT FK_PersoonsAdres_AdresType 
	FOREIGN KEY (adresTypeID) REFERENCES AdresType (adresTypeID)
GO

ALTER TABLE Persoonsverzekering ADD CONSTRAINT FK_Persoonsverzekering_GroepsWerkjaar 
	FOREIGN KEY (groepsWerkjaarID) REFERENCES GroepsWerkjaar (groepsWerkjaarID)
GO

ALTER TABLE Persoonsverzekering ADD CONSTRAINT FK_Persoonsverzekering_Verzekeringstype 
	FOREIGN KEY (verzekeringstypeID) REFERENCES Verzekeringstype (verzekeringstypeID)
GO

ALTER TABLE PersoonVrijVeldType ADD CONSTRAINT FK_PersoonVrijVeldType_Groep 
	FOREIGN KEY (groepID) REFERENCES Groep (groepID)
GO

ALTER TABLE PersoonVrijVeldType ADD CONSTRAINT FK_PersoonVrijVeldType_VrijVeldType 
	FOREIGN KEY (persoonVrijVeldTypeID) REFERENCES VrijVeldType (vrijVeldTypeID)
GO

ALTER TABLE Satelliet ADD CONSTRAINT FK_Satelliet_Groep 
	FOREIGN KEY (satellietID) REFERENCES Groep (groepID)
GO

ALTER TABLE Straat ADD CONSTRAINT FK_Straat_Gemeente 
	FOREIGN KEY (gemeenteID) REFERENCES Gemeente (gemeenteID)
GO

ALTER TABLE Woonplaats ADD CONSTRAINT FK_Woonplaats_Gemeente 
	FOREIGN KEY (gemeenteID) REFERENCES Gemeente (gemeenteID)
GO

ALTER TABLE Woonplaats ADD CONSTRAINT FK_Woonplaats_Land 
	FOREIGN KEY (landID) REFERENCES Land (landID)
GO







EXEC sp_addextendedproperty 'MS_Description', 'Een adres is 1 geheel.  Het is mogelijk dat meerdere mensen hetzelfde adres hebben.  Een persoon kan anderzijds ook meer dan 1 adres hebben.', 'User', dbo, 'table', Adres
GO


EXEC sp_addextendedproperty 'MS_Description', 'Niet te verwarren met postnummer.  Het postnummer is onlosmakelijk verbonden met de gemeente.  Het veld ''postcode'' wordt gebruikt voor adressen in Nederland, waar er nog een niveau tussen adres en gemeente zit.', 'User', dbo, 'table', Adres, 'column', PostCode
GO




EXEC sp_addextendedproperty 'MS_Description', 'Kotadres, thuisadres, bivakadres, werkadres,...', 'User', dbo, 'table', AdresType
GO

EXEC sp_addextendedproperty 'MS_Description', 'De gebruiker van het programma kan afdelingen maken zo veel hij/zij wil.  Als een afdeling bestaat in een werkjaar, dan vormt de combinatie afdeling-werkjaar een ''Afdelingsjaar''.', 'User', dbo, 'table', Afdeling
GO



EXEC sp_addextendedproperty 'MS_Description', 'De velden ''van'' en ''tot'' geven aan welke leden er standaard in deze afdeling terecht komen.

Als voor ''ketiranten 2007-2008'' van=1991 en tot=1993, dan zullen leden die geboren zijn van 1991 t/m 1993 automatisch ''ketirant'' worden als ze zich aansluiten voor 2007-2008
', 'User', dbo, 'table', Afdelingsjaar
GO
EXEC sp_addextendedproperty 'MS_Description', 'geboortejaar ''vanaf''', 'User', dbo, 'table', Afdelingsjaar, 'column', Van
GO

EXEC sp_addextendedproperty 'MS_Description', 'geboortejaar ''tot en met''', 'User', dbo, 'table', Afdelingsjaar, 'column', Tot
GO





EXEC sp_addextendedproperty 'MS_Description', 'Animator, Hoofdanimator, Instructeur, Hoofdinstructeur', 'User', dbo, 'table', Attest
GO

EXEC sp_addextendedproperty 'MS_Description', 'Een persoon heeft mogelijk een aantal attesten.', 'User', dbo, 'table', BehaaldAttest
GO










EXEC sp_addextendedproperty 'MS_Description', 'Personen kunnen tot een categorie behoren.  Vergelijk het met het ''taggen'' van e-mailberichten.  Een categorie kan een aantal personen bevatten, en omgekeerd kan een persoon tot verschillende categorieen behoren.

De gebruiker van het programma kan zo veel categorieen maken als hij/zij wil.', 'User', dbo, 'table', Categorie
GO



EXEC sp_addextendedproperty 'MS_Description', 'Chirocursussen zijn cursussen die de Chiro organiseerde.  De tabel met Chirocursussen wordt automatisch bijgewerkt op basis van de cursussen in Kipadmin.', 'User', dbo, 'table', Chirocursus
GO

EXEC sp_addextendedproperty 'MS_Description', 'De klasse Chirogroep is er om het onderscheid te maken tussen ''echte'' Chirogroepen en ''Satellieten'' (oud-leidingsploegen,...)', 'User', dbo, 'table', Chirogroep
GO


EXEC sp_addextendedproperty 'MS_Description', '''in het weekend'', ''onder de werkuren'', ... Interessant voor bijv. telefoonnummers.', 'User', dbo, 'table', Communicatie, 'column', Nota
GO


EXEC sp_addextendedproperty 'MS_Description', 'E-mail, vaste telefoon, gsm, I.M.,...', 'User', dbo, 'table', CommunicatieType
GO

EXEC sp_addextendedproperty 'MS_Description', 'Reguliere expressie die aangeeft hoe een geldig nummer/adres/... er uitziet', 'User', dbo, 'table', CommunicatieType, 'column', Validatie
GO

EXEC sp_addextendedproperty 'MS_Description', 'geeft aan of nummers/... van dit communicatietype gekopieerd moeten worden naar adresgenoten.', 'User', dbo, 'table', CommunicatieType, 'column', IsGezinsgebonden
GO


EXEC sp_addextendedproperty 'MS_Description', 'Een persoon kan een aantal communicatievormen hebben.  Een communicatievorm is bijvoorbeeld een telefoonnummer, faxnummer, gsm-nummer, e-mailadres, een login voor msn messenger of xmpp (jabber, google),...', 'User', dbo, 'table', CommunicatieVorm
GO
EXEC sp_addextendedproperty 'MS_Description', '''nummer'' is een misleidende naam, want het kan even goed gaan over een e-mailadres e.d.', 'User', dbo, 'table', CommunicatieVorm, 'column', Nummer
GO




EXEC sp_addextendedproperty 'MS_Description', 'Het programma kan gebruikt worden om weer te geven welke personen welke cursussen volgden.  Informatie over deelname aan Chirocursussen komt van het nationaal secretariaat.', 'User', dbo, 'table', Cursus
GO




EXEC sp_addextendedproperty 'MS_Description', 'Soort cursus: SB, IK, Krinkel,...', 'User', dbo, 'table', CursusSoort
GO



EXEC sp_addextendedproperty 'MS_Description', 'Mogelijke functie van een leid(st)er binnen de chirogroep.', 'User', dbo, 'table', Functie
GO
EXEC sp_addextendedproperty 'MS_Description', 'Enerzijds zijn er functies die vanuit de Chiro ''opgelegd'' worden.  De gebruikers kunnen ook eigen functies definieren.', 'User', dbo, 'table', Functie, 'column', IsNationaalBepaald
GO

EXEC sp_addextendedproperty 'MS_Description', 'Als het aantal personen in een groep met deze functie een bovengrens heeft, dan is die bovengrens gegeven door ''maxAantal''.  Bijvoorbeeld: Hoogstens 1 contactpersoon per groep.', 'User', dbo, 'table', Functie, 'column', MaxAantal
GO

EXEC sp_addextendedproperty 'MS_Description', 'Als het aantal personen in een groep met deze functie een ondergrens heeft, dan is die ondergrens gegeven door ''maxAantal''.  Bijvoorbeeld: Minstens 1 contactpersoon per groep.', 'User', dbo, 'table', Functie, 'column', MinAantal
GO

EXEC sp_addextendedproperty 'MS_Description', 'Mogelijk is er een minimumleeftijd voor een bepaalde functie.', 'User', dbo, 'table', Functie, 'column', MinimumLeeftijd
GO

EXEC sp_addextendedproperty 'MS_Description', 'Naam van de functie', 'User', dbo, 'table', Functie, 'column', Naam
GO

EXEC sp_addextendedproperty 'MS_Description', 'Vanaf wanneer deze functie beschikbaar gemaakt is voor de groep', 'User', dbo, 'table', Functie, 'column', Van
GO

EXEC sp_addextendedproperty 'MS_Description', 'Tot wanneer deze functie beschikbaar blijft voor de groep. Niet opgegeven = voor altijd.', 'User', dbo, 'table', Functie, 'column', Tot
GO



EXEC sp_addextendedproperty 'MS_Description', 'Een GAV (groepsadministratieverantwoordelijke) is een speciaal geval van een persoon, namelijk een gebruiker van het programma.

Een GAV kan andere personen mee promoveren tot GAV.  Hij kan z''n GAV-schap zelf hoogstens een jaar verlengen.
', 'User', dbo, 'table', GAV
GO



EXEC sp_addextendedproperty 'MS_Description', 'GAV kan meerdere groepen beheren;  je werkt wel maar met 1 groep tegelijkertijd in de applicatie.', 'User', dbo, 'table', GAVSchap
GO
EXEC sp_addextendedproperty 'MS_Description', 'GAV vervalt op 15 oktober van volgend werkjaar.  1 GAV kan zijn termijn verlengen, door het nieuwe werkjaar te initieren.', 'User', dbo, 'table', GAVSchap, 'column', Vervaldatum
GO


EXEC sp_addextendedproperty 'MS_Description', 'Deze klasse geeft aan welke cursussoorten de mogelijkheid geven tot het halen van welke attesten.', 'User', dbo, 'table', GeassocieerdMet
GO



EXEC sp_addextendedproperty 'MS_Description', 'De tabel ''Gemeente'' bevat enkel de fusiegemeentes! De deelgemeentes kunnen teruggevonden worden in ''Woonplaats''.', 'User', dbo, 'table', Gemeente
GO



EXEC sp_addextendedproperty 'MS_Description', 'Het programma wordt gebruikt voor de gegevens van 1 groep.  Meestal gaat het om een Chirogroep (gewesten en verbonden inc.).  Maar in de toekomst moet het programma ook gebruikt kunnen worden voor bijv. oud-leidingsploegen.', 'User', dbo, 'table', Groep
GO




EXEC sp_addextendedproperty 'MS_Description', 'Voor een Chirogroep is de code het huidige stamnummer.  Als er ook gegevens van oud-leidingsploegen bewaard zullen worden op het nationaal secretariaat, zullen voor dit soort ''satellieten'' ook codes bepaald moeten worden.', 'User', dbo, 'table', Groep, 'column', Code
GO



EXEC sp_addextendedproperty 'MS_Description', 'Een werkjaar loopt bvb van september t/m augustus.', 'User', dbo, 'table', GroepsWerkjaar
GO
EXEC sp_addextendedproperty 'MS_Description', 'Een werkjaar wordt geidentificeerd via het eerste van de twee kalender jaren.  Zo heeft bijv. voor 2007-2008 het veld ''Jaar'' de waarde 2007, en voor 2008-2009 de waarde 2008.', 'User', dbo, 'table', GroepsWerkjaar, 'column', Jaar
GO

























EXEC sp_addextendedproperty 'MS_Description', 'Een ''Kind'' is een lid dat geen leiding/kadermedewerker is.  Een kind is altijd gekoppeld aan een ''afdelingsjaar'' voor het werkjaar waarin het lid is.', 'User', dbo, 'table', Kind
GO


EXEC sp_addextendedproperty 'MS_Description', 'Op verzoek van de gebruiker worden landen centraal toegevoegd aan het programma.', 'User', dbo, 'table', Land
GO



EXEC sp_addextendedproperty 'MS_Description', 'Een leid(st)er is een speciaal geval van een lid.  Gedurende een werkjaar kan een leid(st)er aan meerdere afdelingsjaren gekoppeld zijn.', 'User', dbo, 'table', Leiding
GO


EXEC sp_addextendedproperty 'MS_Description', 'Zowel leiding als ''kinderen'' zijn leden.  Van zodra je als lid in de database zit, ben je ''aangesloten'', en kan je in principe een factuur krijgen.

Een lid is standaard verzekerd voor burgerlijke aansprakelijkheid.
', 'User', dbo, 'table', Lid
GO










EXEC sp_addextendedproperty 'MS_Description', 'De groepen kunnen ieder werkjaar naar hartelust zelf afdelingen uitvinden.  Maar elke afdeling moet gekoppeld zijn aan een ''officiele afdeling''.  De lijst van officiele afdelingen wordt nationaal beheerd.', 'User', dbo, 'table', OfficieleAfdeling
GO



EXEC sp_addextendedproperty 'MS_Description', 'Dit veld geeft weer of een lid ''op zijn leeftijd'' zit voor de automatische berekening van de afdeling.  Standaard heeft het de waarde 0.  Als een lid een jaartje hoger zit dan zijn/haar geboortedatum doet vermoeden (bijv. omdat hij/zij een leerjaar oversloeg) , dan zal dit veld op +1 staan.', 'User', dbo, 'table', Persoon, 'column', Chiroleeftijd
GO







EXEC sp_addextendedproperty 'MS_Description', 'Geeft extra informatie over de koppeling persoon-adres.  Is dit het standaardadres? Om wat voor adrestype gaat het? Ook opmerkingen bij het adres (enkel in het weekend,...) kunnen meegegeven worden.', 'User', dbo, 'table', PersoonsAdres
GO




EXEC sp_addextendedproperty 'MS_Description', 'Een persoon kan een bepaalde verzekering afsluiten voor een bepaalde periode.', 'User', dbo, 'table', Persoonsverzekering
GO





EXEC sp_addextendedproperty 'MS_Description', 'Een groep kan verschillende vrije velden definieren voor een persoon.  Bijvoorbeeld ''gaat mee op bivak'', ''bijnaam'',... De klasse ''PersoonVrijVeld'' geeft weer wat de inhoud van een vrij veld voor een bepaalde persoon is.', 'User', dbo, 'table', PersoonVrijVeld
GO


EXEC sp_addextendedproperty 'MS_Description', 'Deze klasse definieert omschrijft een vrij veld voor een persoon: wat is de naam van het veld, wat voor informatie kan het bevatten (getal, ja/nee, tekst,...)', 'User', dbo, 'table', PersoonVrijVeldType
GO


EXEC sp_addextendedproperty 'MS_Description', 'Het programma moet op termijn ook gebruikt kunnen worden voor ''satellieten'' zoals oud-leidingsploegen, vzw''s,...
', 'User', dbo, 'table', Satelliet
GO

EXEC sp_addextendedproperty 'MS_Description', 'Worden leden van de satteliet verzekerd via de Chiro?', 'User', dbo, 'table', Satelliet, 'column', TeVerzekeren
GO




EXEC sp_addextendedproperty 'MS_Description', 'de eerste cijfers van een stamnummer duiden soms op verbond, soms op gewest, of soms op allebei', 'User', dbo, 'table', StamNummer, 'column', Structuurcode
GO




EXEC sp_addextendedproperty 'MS_Description', 'De stratenlijst van Belgie zit standaard in het programma.  Zo nodig worden nieuwe straten via het secretariaat (op aanvraag) toegevoegd.', 'User', dbo, 'table', Straat
GO
EXEC sp_addextendedproperty 'MS_Description', 'bijv: in aanvraag, ''vrije straat'' (buitenland),..', 'User', dbo, 'table', Straat, 'column', Status
GO





EXEC sp_addextendedproperty 'MS_Description', 'Type verzekering dat men kan nemen, bijv. burgerlijke aansprakelijkheid, ongevallen, overlijden/invaliditeit, beperkte periode, auto-omnium,...', 'User', dbo, 'table', Verzekeringstype
GO
EXEC sp_addextendedproperty 'MS_Description', 'max. 3 letters; duidelijker op rapporten', 'User', dbo, 'table', Verzekeringstype, 'column', Code
GO


EXEC sp_addextendedproperty 'MS_Description', 'uitvoerige omschrijving van het type verzekering', 'User', dbo, 'table', Verzekeringstype, 'column', Omschrijving
GO






EXEC sp_addextendedproperty 'MS_Description', 'Een woonplaats is een gemeente of deelgemeente.  De lijst met woonplaatsen zit standaard in het programma; de gebruiker kan hier zelf niets aan veranderen.', 'User', dbo, 'table', Woonplaats
GO
