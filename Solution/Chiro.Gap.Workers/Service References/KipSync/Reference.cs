//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Runtime.Serialization;
using System.ServiceModel;
using System.ServiceModel.Channels;

namespace Chiro.Gap.Workers.KipSync
{
	[DebuggerStepThrough]
	[GeneratedCode("System.Runtime.Serialization", "3.0.0.0")]
	[DataContract(Name = "Persoon", Namespace = "http://schemas.datacontract.org/2004/07/Chiro.Kip.Services.DataContracts")]
	[SerializableAttribute]
	public class Persoon : object, IExtensibleDataObject, INotifyPropertyChanged
	{

		[NonSerializedAttribute]
		private ExtensionDataObject extensionDataField;

		[OptionalField]
		private int? AdNrField;

		[OptionalField]
		private DateTime? GeboortedatumField;

		[OptionalField]
		private GeslachtsEnum GeslachtField;

		[OptionalField]
		private int IdField;

		[OptionalField]
		private string NaamField;

		[OptionalField]
		private DateTime? SterfdatumField;

		[OptionalField]
		private string VoornaamField;

		[Browsable(false)]
		public ExtensionDataObject ExtensionData
		{
			get
			{
				return extensionDataField;
			}
			set
			{
				extensionDataField = value;
			}
		}

		[DataMember]
		public int? AdNr
		{
			get
			{
				return AdNrField;
			}
			set
			{
				if ((AdNrField.Equals(value) != true))
				{
					AdNrField = value;
					RaisePropertyChanged("AdNr");
				}
			}
		}

		[DataMember]
		public DateTime? Geboortedatum
		{
			get
			{
				return GeboortedatumField;
			}
			set
			{
				if ((GeboortedatumField.Equals(value) != true))
				{
					GeboortedatumField = value;
					RaisePropertyChanged("Geboortedatum");
				}
			}
		}

		[DataMember]
		public GeslachtsEnum Geslacht
		{
			get
			{
				return GeslachtField;
			}
			set
			{
				if ((GeslachtField.Equals(value) != true))
				{
					GeslachtField = value;
					RaisePropertyChanged("Geslacht");
				}
			}
		}

		[DataMember]
		public int Id
		{
			get
			{
				return IdField;
			}
			set
			{
				if ((IdField.Equals(value) != true))
				{
					IdField = value;
					RaisePropertyChanged("Id");
				}
			}
		}

		[DataMember]
		public string Naam
		{
			get
			{
				return NaamField;
			}
			set
			{
				if ((ReferenceEquals(NaamField, value) != true))
				{
					NaamField = value;
					RaisePropertyChanged("Naam");
				}
			}
		}

		[DataMember]
		public DateTime? Sterfdatum
		{
			get
			{
				return SterfdatumField;
			}
			set
			{
				if ((SterfdatumField.Equals(value) != true))
				{
					SterfdatumField = value;
					RaisePropertyChanged("Sterfdatum");
				}
			}
		}

		[DataMember]
		public string Voornaam
		{
			get
			{
				return VoornaamField;
			}
			set
			{
				if ((ReferenceEquals(VoornaamField, value) != true))
				{
					VoornaamField = value;
					RaisePropertyChanged("Voornaam");
				}
			}
		}

		public event PropertyChangedEventHandler PropertyChanged;

		protected void RaisePropertyChanged(string propertyName)
		{
			PropertyChangedEventHandler propertyChanged = PropertyChanged;
			if ((propertyChanged != null))
			{
				propertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[GeneratedCode("System.Runtime.Serialization", "3.0.0.0")]
	[DataContract(Name = "GeslachtsEnum", Namespace = "http://schemas.datacontract.org/2004/07/Chiro.Kip.Services.DataContracts")]
	public enum GeslachtsEnum
	{

		[EnumMember]
		Onbekend = 0,

		[EnumMember]
		Man = 1,

		[EnumMember]
		Vrouw = 2,
	}

	[DebuggerStepThrough]
	[GeneratedCode("System.Runtime.Serialization", "3.0.0.0")]
	[DataContract(Name = "Adres", Namespace = "http://schemas.datacontract.org/2004/07/Chiro.Kip.Services.DataContracts")]
	[Serializable]
	public class Adres : object, IExtensibleDataObject, INotifyPropertyChanged
	{

		[NonSerialized]
		private ExtensionDataObject extensionDataField;

		[OptionalField]
		private AdresTypeEnum AdresTypeField;

		[OptionalField]
		private string BusField;

		[OptionalField]
		private int? HuisNrField;

		[OptionalField]
		private string LandField;

		[OptionalField]
		private string PostcodeField;

		[OptionalField]
		private int PostnummerField;

		[OptionalField]
		private string StraatField;

		[OptionalField]
		private string WoonplaatsField;

		[Browsable(false)]
		public ExtensionDataObject ExtensionData
		{
			get
			{
				return extensionDataField;
			}
			set
			{
				extensionDataField = value;
			}
		}

		[DataMember]
		public AdresTypeEnum AdresType
		{
			get
			{
				return AdresTypeField;
			}
			set
			{
				if ((AdresTypeField.Equals(value) != true))
				{
					AdresTypeField = value;
					RaisePropertyChanged("AdresType");
				}
			}
		}

		[DataMember]
		public string Bus
		{
			get
			{
				return BusField;
			}
			set
			{
				if ((ReferenceEquals(BusField, value) != true))
				{
					BusField = value;
					RaisePropertyChanged("Bus");
				}
			}
		}

		[DataMember]
		public int? HuisNr
		{
			get
			{
				return HuisNrField;
			}
			set
			{
				if ((HuisNrField.Equals(value) != true))
				{
					HuisNrField = value;
					RaisePropertyChanged("HuisNr");
				}
			}
		}

		[DataMember]
		public string Land
		{
			get
			{
				return LandField;
			}
			set
			{
				if ((ReferenceEquals(LandField, value) != true))
				{
					LandField = value;
					RaisePropertyChanged("Land");
				}
			}
		}

		[DataMember]
		public string Postcode
		{
			get
			{
				return PostcodeField;
			}
			set
			{
				if ((ReferenceEquals(PostcodeField, value) != true))
				{
					PostcodeField = value;
					RaisePropertyChanged("Postcode");
				}
			}
		}

		[DataMember]
		public int Postnummer
		{
			get
			{
				return PostnummerField;
			}
			set
			{
				if ((PostnummerField.Equals(value) != true))
				{
					PostnummerField = value;
					RaisePropertyChanged("Postnummer");
				}
			}
		}

		[DataMember]
		public string Straat
		{
			get
			{
				return StraatField;
			}
			set
			{
				if ((ReferenceEquals(StraatField, value) != true))
				{
					StraatField = value;
					RaisePropertyChanged("Straat");
				}
			}
		}

		[DataMember]
		public string Woonplaats
		{
			get
			{
				return WoonplaatsField;
			}
			set
			{
				if ((ReferenceEquals(WoonplaatsField, value) != true))
				{
					WoonplaatsField = value;
					RaisePropertyChanged("Woonplaats");
				}
			}
		}

		public event PropertyChangedEventHandler PropertyChanged;

		protected void RaisePropertyChanged(string propertyName)
		{
			PropertyChangedEventHandler propertyChanged = PropertyChanged;
			if ((propertyChanged != null))
			{
				propertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[GeneratedCode("System.Runtime.Serialization", "3.0.0.0")]
	[DataContract(Name = "AdresTypeEnum", Namespace = "http://schemas.datacontract.org/2004/07/Chiro.Kip.Services.DataContracts")]
	public enum AdresTypeEnum
	{

		[EnumMember]
		THUIS = 1,

		[EnumMember]
		KOT = 2,

		[EnumMember]
		WERK = 3,

		[EnumMember]
		ANDER = 4,
	}

	[DebuggerStepThrough]
	[GeneratedCode("System.Runtime.Serialization", "3.0.0.0")]
	[DataContract(Name = "Communicatiemiddel", Namespace = "http://schemas.datacontract.org/2004/07/Chiro.Kip.Services.DataContracts")]
	[Serializable]
	public class Communicatiemiddel : object, IExtensibleDataObject, INotifyPropertyChanged
	{

		[NonSerialized]
		private ExtensionDataObject extensionDataField;

		[OptionalField]
		private bool GeenMailingsField;

		[OptionalField]
		private CommunicatieType TypeField;

		[OptionalField]
		private string WaardeField;

		[Browsable(false)]
		public ExtensionDataObject ExtensionData
		{
			get
			{
				return extensionDataField;
			}
			set
			{
				extensionDataField = value;
			}
		}

		[DataMember]
		public bool GeenMailings
		{
			get
			{
				return GeenMailingsField;
			}
			set
			{
				if ((GeenMailingsField.Equals(value) != true))
				{
					GeenMailingsField = value;
					RaisePropertyChanged("GeenMailings");
				}
			}
		}

		[DataMember]
		public CommunicatieType Type
		{
			get
			{
				return TypeField;
			}
			set
			{
				if ((TypeField.Equals(value) != true))
				{
					TypeField = value;
					RaisePropertyChanged("Type");
				}
			}
		}

		[DataMember]
		public string Waarde
		{
			get
			{
				return WaardeField;
			}
			set
			{
				if ((ReferenceEquals(WaardeField, value) != true))
				{
					WaardeField = value;
					RaisePropertyChanged("Waarde");
				}
			}
		}

		public event PropertyChangedEventHandler PropertyChanged;

		protected void RaisePropertyChanged(string propertyName)
		{
			PropertyChangedEventHandler propertyChanged = PropertyChanged;
			if ((propertyChanged != null))
			{
				propertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[GeneratedCode("System.Runtime.Serialization", "3.0.0.0")]
	[DataContract(Name = "CommunicatieType", Namespace = "http://schemas.datacontract.org/2004/07/Chiro.Kip.Services.DataContracts")]
	public enum CommunicatieType
	{

		[EnumMember]
		Telefoon = 1,

		[EnumMember]
		Fax = 2,

		[EnumMember]
		Email = 3,

		[EnumMember]
		Website = 4,

		[EnumMember]
		Msn = 5,

		[EnumMember]
		Jabber = 6,
	}

	[GeneratedCode("System.ServiceModel", "3.0.0.0")]
	[ServiceContract(ConfigurationName = "KipSync.ISyncPersoonService")]
	public interface ISyncPersoonService
	{

		[OperationContract(IsOneWay = true, Action = "http://tempuri.org/ISyncPersoonService/PersoonUpdated")]
		void PersoonUpdated(Persoon persoon);

		[OperationContract(IsOneWay = true, Action = "http://tempuri.org/ISyncPersoonService/AdresUpdated")]
		void AdresUpdated(Persoon persoon, List<Adres> adressen);

		[OperationContract(IsOneWay = true, Action = "http://tempuri.org/ISyncPersoonService/CommunicatieUpdated")]
		void CommunicatieUpdated(Persoon persoon, List<Communicatiemiddel> communicatiemiddelen);
	}

	[GeneratedCode("System.ServiceModel", "3.0.0.0")]
	public interface ISyncPersoonServiceChannel : ISyncPersoonService, IClientChannel
	{
	}

	[DebuggerStepThrough]
	[GeneratedCode("System.ServiceModel", "3.0.0.0")]
	public partial class SyncPersoonServiceClient : ClientBase<ISyncPersoonService>, ISyncPersoonService
	{

		public SyncPersoonServiceClient()
		{
		}

		public SyncPersoonServiceClient(string endpointConfigurationName) :
			base(endpointConfigurationName)
		{
		}

		public SyncPersoonServiceClient(string endpointConfigurationName, string remoteAddress) :
			base(endpointConfigurationName, remoteAddress)
		{
		}

		public SyncPersoonServiceClient(string endpointConfigurationName, EndpointAddress remoteAddress) :
			base(endpointConfigurationName, remoteAddress)
		{
		}

		public SyncPersoonServiceClient(Binding binding, EndpointAddress remoteAddress) :
			base(binding, remoteAddress)
		{
		}

		public void PersoonUpdated(Persoon persoon)
		{
			Channel.PersoonUpdated(persoon);
		}

		public void AdresUpdated(Persoon persoon, List<Adres> adressen)
		{
			Channel.AdresUpdated(persoon, adressen);
		}

		public void CommunicatieUpdated(Persoon persoon, List<Communicatiemiddel> communicatiemiddelen)
		{
			Channel.CommunicatieUpdated(persoon, communicatiemiddelen);
		}
	}
}
