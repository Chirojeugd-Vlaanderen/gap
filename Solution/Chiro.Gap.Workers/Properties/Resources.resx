<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AdNummerNietWijzigen" xml:space="preserve">
    <value>Enkel het nationaal secretariaat mag AD-nummers wijzigen.</value>
  </data>
  <data name="CommunicatieVormValidatieFeedback" xml:space="preserve">
    <value>'{0}' is geen geldige waarde voor {1}</value>
    <comment>Parameter 0 = input, 1 = property</comment>
  </data>
  <data name="CategorieBestaatAl" xml:space="preserve">
    <value>Er bestaat al een categorie met code '{0}'.</value>
  </data>
  <data name="CategorieNietLeeg" xml:space="preserve">
    <value>Er zijn nog personen gekoppeld aan deze categorie.</value>
  </data>
  <data name="FoutiefGroepsWerkJaar" xml:space="preserve">
    <value>Deze persoon is niet gekoppeld aan de groep waarvan je hem/haar lid wil maken.</value>
  </data>
  <data name="FoutieveGroepCategorie" xml:space="preserve">
    <value>Je probeert een persoon te koppelen aan een categorie uit een andere groep.</value>
  </data>
  <data name="GeenGavAfdeling" xml:space="preserve">
    <value>Deze afdeling is niet gekoppeld aan je groep(en).</value>
  </data>
  <data name="GeenGavCategorie" xml:space="preserve">
    <value>Deze categorie is niet gekoppeld aan je groep(en).</value>
  </data>
  <data name="GeenGavCategoriePersoon" xml:space="preserve">
    <value>De categorie en/of de persoon zijn niet gekoppeld aan je groep(en).</value>
  </data>
  <data name="GeenGavCommVorm" xml:space="preserve">
    <value>Dit is geen communicatievorm van een van jouw personen.</value>
  </data>
  <data name="GeenGavGelieerdePersoon" xml:space="preserve">
    <value>Deze persoon is niet gekoppeld aan je groep(en).</value>
  </data>
  <data name="GeenGavGroep" xml:space="preserve">
    <value>Je bent geen GAV van deze groep.</value>
  </data>
  <data name="GeenGavGroepsWerkJaar" xml:space="preserve">
    <value>Dit werkjaar is niet gekoppeld aan je groep(en).</value>
  </data>
  <data name="GeenGavLid" xml:space="preserve">
    <value>Dit lid is niet gekoppeld aan je groep(en).</value>
  </data>
  <data name="GeenGeschikteAfdeling" xml:space="preserve">
    <value>Er werd geen geschikte afdeling gevonden voor deze persoon.</value>
  </data>
  <data name="GeenSuperGav" xml:space="preserve">
    <value>Deze operatie is enkel beschikbaar voor super-GAV-goden.</value>
  </data>
  <data name="FoutieveGroepFunctie" xml:space="preserve">
    <value>Je probeert een lid te koppelen aan een categorie uit een andere groep.</value>
  </data>
  <data name="GeenGavFunctie" xml:space="preserve">
    <value>Deze functie is niet gekoppeld aan je groep(en).</value>
  </data>
  <data name="GeboorteDatumOntbreekt" xml:space="preserve">
    <value>De geboortedatum moet gekend zijn.</value>
  </data>
  <data name="FunctieVol" xml:space="preserve">
    <value>Slechts {0} leden mogen de functie '{1}' hebben.</value>
  </data>
  <data name="FunctieLeeg" xml:space="preserve">
    <value>Minstens {0} leden moeten de functie '{1}' hebben.</value>
  </data>
  <data name="FoutiefGroepsWerkJaarFunctie" xml:space="preserve">
    <value>Je probeert een lid te koppelen aan een functie die niet geldig is voor het gegeven werkjaar.</value>
  </data>
  <data name="FoutiefLidType" xml:space="preserve">
    <value>Deze functie is niet toegelaten voor dit type lid (kind/leiding).</value>
  </data>
  <data name="AfdelingNietBeschikbaar" xml:space="preserve">
    <value>Minstens 1 gevraagde afdeling is niet beschikbaar in dit werkjaar.</value>
  </data>
</root>