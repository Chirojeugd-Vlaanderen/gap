//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3082
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MvcWebApp2.LedenServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LedenServiceReference.ILedenService")]
    public interface ILedenService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILedenService/LidMakenEnBewaren", ReplyAction="http://tempuri.org/ILedenService/LidMakenEnBewarenResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Cg2.Orm.ChiroGroep))]
        Cg2.Orm.Lid LidMakenEnBewaren(int gelieerdePersoonID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILedenService/PaginaOphalen", ReplyAction="http://tempuri.org/ILedenService/PaginaOphalenResponse")]
        Cg2.Orm.Lid[] PaginaOphalen(out int aantalOpgehaald, int groepsWerkJaarID, int pagina, int paginaGrootte);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILedenService/LedenOphalenMetInfo", ReplyAction="http://tempuri.org/ILedenService/LedenOphalenMetInfoResponse")]
        Cg2.Orm.Lid[] LedenOphalenMetInfo(string name, Cg2.Orm.LidInfo[] gevraagd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILedenService/LidOphalenMetInfo", ReplyAction="http://tempuri.org/ILedenService/LidOphalenMetInfoResponse")]
        Cg2.Orm.Lid[] LidOphalenMetInfo(int lidID, string name, Cg2.Orm.LidInfo[] gevraagd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILedenService/LidBewaren", ReplyAction="http://tempuri.org/ILedenService/LidBewarenResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Cg2.Orm.ChiroGroep))]
        void LidBewaren(Cg2.Orm.Lid lid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILedenService/LidOpNonactiefZetten", ReplyAction="http://tempuri.org/ILedenService/LidOpNonactiefZettenResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Cg2.Orm.ChiroGroep))]
        void LidOpNonactiefZetten(Cg2.Orm.Lid lid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILedenService/LidActiveren", ReplyAction="http://tempuri.org/ILedenService/LidActiverenResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Cg2.Orm.ChiroGroep))]
        void LidActiveren(Cg2.Orm.Lid lid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface ILedenServiceChannel : MvcWebApp2.LedenServiceReference.ILedenService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class LedenServiceClient : System.ServiceModel.ClientBase<MvcWebApp2.LedenServiceReference.ILedenService>, MvcWebApp2.LedenServiceReference.ILedenService {
        
        public LedenServiceClient() {
        }
        
        public LedenServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LedenServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LedenServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LedenServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Cg2.Orm.Lid LidMakenEnBewaren(int gelieerdePersoonID) {
            return base.Channel.LidMakenEnBewaren(gelieerdePersoonID);
        }
        
        public Cg2.Orm.Lid[] PaginaOphalen(out int aantalOpgehaald, int groepsWerkJaarID, int pagina, int paginaGrootte) {
            return base.Channel.PaginaOphalen(out aantalOpgehaald, groepsWerkJaarID, pagina, paginaGrootte);
        }
        
        public Cg2.Orm.Lid[] LedenOphalenMetInfo(string name, Cg2.Orm.LidInfo[] gevraagd) {
            return base.Channel.LedenOphalenMetInfo(name, gevraagd);
        }
        
        public Cg2.Orm.Lid[] LidOphalenMetInfo(int lidID, string name, Cg2.Orm.LidInfo[] gevraagd) {
            return base.Channel.LidOphalenMetInfo(lidID, name, gevraagd);
        }
        
        public void LidBewaren(Cg2.Orm.Lid lid) {
            base.Channel.LidBewaren(lid);
        }
        
        public void LidOpNonactiefZetten(Cg2.Orm.Lid lid) {
            base.Channel.LidOpNonactiefZetten(lid);
        }
        
        public void LidActiveren(Cg2.Orm.Lid lid) {
            base.Channel.LidActiveren(lid);
        }
    }
}
