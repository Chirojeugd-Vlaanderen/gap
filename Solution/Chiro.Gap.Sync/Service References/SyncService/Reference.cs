//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Chiro.Gap.Sync.SyncService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Persoon", Namespace="http://schemas.datacontract.org/2004/07/Chiro.Kip.ServiceContracts.DataContracts")]
    [System.SerializableAttribute()]
    public partial class Persoon : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AdNummerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> GeboorteDatumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Chiro.Gap.Sync.SyncService.GeslachtsEnum GeslachtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NaamField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SterfDatumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VoorNaamField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AdNummer {
            get {
                return this.AdNummerField;
            }
            set {
                if ((this.AdNummerField.Equals(value) != true)) {
                    this.AdNummerField = value;
                    this.RaisePropertyChanged("AdNummer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> GeboorteDatum {
            get {
                return this.GeboorteDatumField;
            }
            set {
                if ((this.GeboorteDatumField.Equals(value) != true)) {
                    this.GeboorteDatumField = value;
                    this.RaisePropertyChanged("GeboorteDatum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chiro.Gap.Sync.SyncService.GeslachtsEnum Geslacht {
            get {
                return this.GeslachtField;
            }
            set {
                if ((this.GeslachtField.Equals(value) != true)) {
                    this.GeslachtField = value;
                    this.RaisePropertyChanged("Geslacht");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Naam {
            get {
                return this.NaamField;
            }
            set {
                if ((object.ReferenceEquals(this.NaamField, value) != true)) {
                    this.NaamField = value;
                    this.RaisePropertyChanged("Naam");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SterfDatum {
            get {
                return this.SterfDatumField;
            }
            set {
                if ((this.SterfDatumField.Equals(value) != true)) {
                    this.SterfDatumField = value;
                    this.RaisePropertyChanged("SterfDatum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VoorNaam {
            get {
                return this.VoorNaamField;
            }
            set {
                if ((object.ReferenceEquals(this.VoorNaamField, value) != true)) {
                    this.VoorNaamField = value;
                    this.RaisePropertyChanged("VoorNaam");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeslachtsEnum", Namespace="http://schemas.datacontract.org/2004/07/Chiro.Kip.ServiceContracts.DataContracts")]
    public enum GeslachtsEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Onbekend = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Man = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Vrouw = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Adres", Namespace="http://schemas.datacontract.org/2004/07/Chiro.Kip.ServiceContracts.DataContracts")]
    [System.SerializableAttribute()]
    public partial class Adres : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> HuisNrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PostNrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StraatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WoonPlaatsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Bus {
            get {
                return this.BusField;
            }
            set {
                if ((object.ReferenceEquals(this.BusField, value) != true)) {
                    this.BusField = value;
                    this.RaisePropertyChanged("Bus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> HuisNr {
            get {
                return this.HuisNrField;
            }
            set {
                if ((this.HuisNrField.Equals(value) != true)) {
                    this.HuisNrField = value;
                    this.RaisePropertyChanged("HuisNr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Land {
            get {
                return this.LandField;
            }
            set {
                if ((object.ReferenceEquals(this.LandField, value) != true)) {
                    this.LandField = value;
                    this.RaisePropertyChanged("Land");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostCode {
            get {
                return this.PostCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostCodeField, value) != true)) {
                    this.PostCodeField = value;
                    this.RaisePropertyChanged("PostCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PostNr {
            get {
                return this.PostNrField;
            }
            set {
                if ((this.PostNrField.Equals(value) != true)) {
                    this.PostNrField = value;
                    this.RaisePropertyChanged("PostNr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Straat {
            get {
                return this.StraatField;
            }
            set {
                if ((object.ReferenceEquals(this.StraatField, value) != true)) {
                    this.StraatField = value;
                    this.RaisePropertyChanged("Straat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WoonPlaats {
            get {
                return this.WoonPlaatsField;
            }
            set {
                if ((object.ReferenceEquals(this.WoonPlaatsField, value) != true)) {
                    this.WoonPlaatsField = value;
                    this.RaisePropertyChanged("WoonPlaats");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Bewoner", Namespace="http://schemas.datacontract.org/2004/07/Chiro.Kip.ServiceContracts.DataContracts")]
    [System.SerializableAttribute()]
    public partial class Bewoner : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Chiro.Gap.Sync.SyncService.AdresTypeEnum AdresTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Chiro.Gap.Sync.SyncService.Persoon PersoonField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chiro.Gap.Sync.SyncService.AdresTypeEnum AdresType {
            get {
                return this.AdresTypeField;
            }
            set {
                if ((this.AdresTypeField.Equals(value) != true)) {
                    this.AdresTypeField = value;
                    this.RaisePropertyChanged("AdresType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chiro.Gap.Sync.SyncService.Persoon Persoon {
            get {
                return this.PersoonField;
            }
            set {
                if ((object.ReferenceEquals(this.PersoonField, value) != true)) {
                    this.PersoonField = value;
                    this.RaisePropertyChanged("Persoon");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdresTypeEnum", Namespace="http://schemas.datacontract.org/2004/07/Chiro.Kip.ServiceContracts.DataContracts")]
    public enum AdresTypeEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        THUIS = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KOT = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WERK = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ANDER = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommunicatieMiddel", Namespace="http://schemas.datacontract.org/2004/07/Chiro.Kip.ServiceContracts.DataContracts")]
    [System.SerializableAttribute()]
    public partial class CommunicatieMiddel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GeenMailingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Chiro.Gap.Sync.SyncService.CommunicatieType TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WaardeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GeenMailings {
            get {
                return this.GeenMailingsField;
            }
            set {
                if ((this.GeenMailingsField.Equals(value) != true)) {
                    this.GeenMailingsField = value;
                    this.RaisePropertyChanged("GeenMailings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chiro.Gap.Sync.SyncService.CommunicatieType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Waarde {
            get {
                return this.WaardeField;
            }
            set {
                if ((object.ReferenceEquals(this.WaardeField, value) != true)) {
                    this.WaardeField = value;
                    this.RaisePropertyChanged("Waarde");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommunicatieType", Namespace="http://schemas.datacontract.org/2004/07/Chiro.Kip.ServiceContracts.DataContracts")]
    public enum CommunicatieType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TelefoonNummer = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fax = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Email = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WebSite = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Msn = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Xmpp = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Twitter = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StatusNet = 8,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LidGedoe", Namespace="http://schemas.datacontract.org/2004/07/Chiro.Kip.ServiceContracts.DataContracts")]
    [System.SerializableAttribute()]
    public partial class LidGedoe : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Chiro.Gap.Sync.SyncService.LidTypeEnum LidTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Chiro.Gap.Sync.SyncService.FunctieEnum> NationaleFunctiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Chiro.Gap.Sync.SyncService.AfdelingEnum> OfficieleAfdelingenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StamNummerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WerkJaarField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chiro.Gap.Sync.SyncService.LidTypeEnum LidType {
            get {
                return this.LidTypeField;
            }
            set {
                if ((this.LidTypeField.Equals(value) != true)) {
                    this.LidTypeField = value;
                    this.RaisePropertyChanged("LidType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Chiro.Gap.Sync.SyncService.FunctieEnum> NationaleFuncties {
            get {
                return this.NationaleFunctiesField;
            }
            set {
                if ((object.ReferenceEquals(this.NationaleFunctiesField, value) != true)) {
                    this.NationaleFunctiesField = value;
                    this.RaisePropertyChanged("NationaleFuncties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Chiro.Gap.Sync.SyncService.AfdelingEnum> OfficieleAfdelingen {
            get {
                return this.OfficieleAfdelingenField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficieleAfdelingenField, value) != true)) {
                    this.OfficieleAfdelingenField = value;
                    this.RaisePropertyChanged("OfficieleAfdelingen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StamNummer {
            get {
                return this.StamNummerField;
            }
            set {
                if ((object.ReferenceEquals(this.StamNummerField, value) != true)) {
                    this.StamNummerField = value;
                    this.RaisePropertyChanged("StamNummer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WerkJaar {
            get {
                return this.WerkJaarField;
            }
            set {
                if ((this.WerkJaarField.Equals(value) != true)) {
                    this.WerkJaarField = value;
                    this.RaisePropertyChanged("WerkJaar");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LidTypeEnum", Namespace="http://schemas.datacontract.org/2004/07/Chiro.Kip.ServiceContracts.DataContracts")]
    public enum LidTypeEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Kind = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Leiding = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Kader = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FunctieEnum", Namespace="http://schemas.datacontract.org/2004/07/Chiro.Kip.ServiceContracts.DataContracts")]
    public enum FunctieEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContactPersoon = 168,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GroepsLeiding = 169,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Vb = 170,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FinancieelVerantwoordelijke = 153,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JeugdRaad = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KookPloeg = 185,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Proost = 172,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AfdelingEnum", Namespace="http://schemas.datacontract.org/2004/07/Chiro.Kip.ServiceContracts.DataContracts")]
    public enum AfdelingEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ribbels = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Speelclub = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rakwis = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Titos = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ketis = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Aspis = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Speciaal = 7,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PersoonDetails", Namespace="http://schemas.datacontract.org/2004/07/Chiro.Kip.ServiceContracts.DataContracts")]
    [System.SerializableAttribute()]
    public partial class PersoonDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Chiro.Gap.Sync.SyncService.Adres AdresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Chiro.Gap.Sync.SyncService.AdresTypeEnum AdresTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Chiro.Gap.Sync.SyncService.CommunicatieMiddel> CommunicatieField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Chiro.Gap.Sync.SyncService.Persoon PersoonField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chiro.Gap.Sync.SyncService.Adres Adres {
            get {
                return this.AdresField;
            }
            set {
                if ((object.ReferenceEquals(this.AdresField, value) != true)) {
                    this.AdresField = value;
                    this.RaisePropertyChanged("Adres");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chiro.Gap.Sync.SyncService.AdresTypeEnum AdresType {
            get {
                return this.AdresTypeField;
            }
            set {
                if ((this.AdresTypeField.Equals(value) != true)) {
                    this.AdresTypeField = value;
                    this.RaisePropertyChanged("AdresType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Chiro.Gap.Sync.SyncService.CommunicatieMiddel> Communicatie {
            get {
                return this.CommunicatieField;
            }
            set {
                if ((object.ReferenceEquals(this.CommunicatieField, value) != true)) {
                    this.CommunicatieField = value;
                    this.RaisePropertyChanged("Communicatie");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chiro.Gap.Sync.SyncService.Persoon Persoon {
            get {
                return this.PersoonField;
            }
            set {
                if ((object.ReferenceEquals(this.PersoonField, value) != true)) {
                    this.PersoonField = value;
                    this.RaisePropertyChanged("Persoon");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SyncService.ISyncPersoonService")]
    public interface ISyncPersoonService {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISyncPersoonService/PersoonUpdaten")]
        void PersoonUpdaten(Chiro.Gap.Sync.SyncService.Persoon persoon);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISyncPersoonService/StandaardAdresBewaren")]
        void StandaardAdresBewaren(Chiro.Gap.Sync.SyncService.Adres adres, System.Collections.Generic.List<Chiro.Gap.Sync.SyncService.Bewoner> bewoners);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISyncPersoonService/CommunicatieToevoegen")]
        void CommunicatieToevoegen(Chiro.Gap.Sync.SyncService.Persoon persoon, Chiro.Gap.Sync.SyncService.CommunicatieMiddel communicatieMiddel);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISyncPersoonService/AlleCommunicatieBewaren")]
        void AlleCommunicatieBewaren(Chiro.Gap.Sync.SyncService.Persoon persoon, System.Collections.Generic.List<Chiro.Gap.Sync.SyncService.CommunicatieMiddel> communicatieMiddelen);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISyncPersoonService/CommunicatieVerwijderen")]
        void CommunicatieVerwijderen(Chiro.Gap.Sync.SyncService.Persoon pers, Chiro.Gap.Sync.SyncService.CommunicatieMiddel communicatie);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISyncPersoonService/LidBewaren")]
        void LidBewaren(int adNummer, Chiro.Gap.Sync.SyncService.LidGedoe gedoe);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISyncPersoonService/NieuwLidBewaren")]
        void NieuwLidBewaren(Chiro.Gap.Sync.SyncService.PersoonDetails details, Chiro.Gap.Sync.SyncService.LidGedoe lidGedoe);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISyncPersoonService/FunctiesUpdaten")]
        void FunctiesUpdaten(Chiro.Gap.Sync.SyncService.Persoon persoon, string stamNummer, int werkJaar, System.Collections.Generic.List<Chiro.Gap.Sync.SyncService.FunctieEnum> functies);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISyncPersoonService/AfdelingenUpdaten")]
        void AfdelingenUpdaten(Chiro.Gap.Sync.SyncService.Persoon persoon, string stamNummer, int werkJaar, System.Collections.Generic.List<Chiro.Gap.Sync.SyncService.AfdelingEnum> afdelingen);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISyncPersoonService/DubbelpuntBestellen")]
        void DubbelpuntBestellen(int adNummer, string stamNummer, int werkJaar);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISyncPersoonService/DubbelpuntBestellenNieuwePersoon")]
        void DubbelpuntBestellenNieuwePersoon(Chiro.Gap.Sync.SyncService.PersoonDetails details, string stamNummer, int werkJaar);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface ISyncPersoonServiceChannel : Chiro.Gap.Sync.SyncService.ISyncPersoonService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class SyncPersoonServiceClient : System.ServiceModel.ClientBase<Chiro.Gap.Sync.SyncService.ISyncPersoonService>, Chiro.Gap.Sync.SyncService.ISyncPersoonService {
        
        public SyncPersoonServiceClient() {
        }
        
        public SyncPersoonServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SyncPersoonServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SyncPersoonServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SyncPersoonServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void PersoonUpdaten(Chiro.Gap.Sync.SyncService.Persoon persoon) {
            base.Channel.PersoonUpdaten(persoon);
        }
        
        public void StandaardAdresBewaren(Chiro.Gap.Sync.SyncService.Adres adres, System.Collections.Generic.List<Chiro.Gap.Sync.SyncService.Bewoner> bewoners) {
            base.Channel.StandaardAdresBewaren(adres, bewoners);
        }
        
        public void CommunicatieToevoegen(Chiro.Gap.Sync.SyncService.Persoon persoon, Chiro.Gap.Sync.SyncService.CommunicatieMiddel communicatieMiddel) {
            base.Channel.CommunicatieToevoegen(persoon, communicatieMiddel);
        }
        
        public void AlleCommunicatieBewaren(Chiro.Gap.Sync.SyncService.Persoon persoon, System.Collections.Generic.List<Chiro.Gap.Sync.SyncService.CommunicatieMiddel> communicatieMiddelen) {
            base.Channel.AlleCommunicatieBewaren(persoon, communicatieMiddelen);
        }
        
        public void CommunicatieVerwijderen(Chiro.Gap.Sync.SyncService.Persoon pers, Chiro.Gap.Sync.SyncService.CommunicatieMiddel communicatie) {
            base.Channel.CommunicatieVerwijderen(pers, communicatie);
        }
        
        public void LidBewaren(int adNummer, Chiro.Gap.Sync.SyncService.LidGedoe gedoe) {
            base.Channel.LidBewaren(adNummer, gedoe);
        }
        
        public void NieuwLidBewaren(Chiro.Gap.Sync.SyncService.PersoonDetails details, Chiro.Gap.Sync.SyncService.LidGedoe lidGedoe) {
            base.Channel.NieuwLidBewaren(details, lidGedoe);
        }
        
        public void FunctiesUpdaten(Chiro.Gap.Sync.SyncService.Persoon persoon, string stamNummer, int werkJaar, System.Collections.Generic.List<Chiro.Gap.Sync.SyncService.FunctieEnum> functies) {
            base.Channel.FunctiesUpdaten(persoon, stamNummer, werkJaar, functies);
        }
        
        public void AfdelingenUpdaten(Chiro.Gap.Sync.SyncService.Persoon persoon, string stamNummer, int werkJaar, System.Collections.Generic.List<Chiro.Gap.Sync.SyncService.AfdelingEnum> afdelingen) {
            base.Channel.AfdelingenUpdaten(persoon, stamNummer, werkJaar, afdelingen);
        }
        
        public void DubbelpuntBestellen(int adNummer, string stamNummer, int werkJaar) {
            base.Channel.DubbelpuntBestellen(adNummer, stamNummer, werkJaar);
        }
        
        public void DubbelpuntBestellenNieuwePersoon(Chiro.Gap.Sync.SyncService.PersoonDetails details, string stamNummer, int werkJaar) {
            base.Channel.DubbelpuntBestellenNieuwePersoon(details, stamNummer, werkJaar);
        }
    }
}
