//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ChiroGroepModel", "FK_GelieerdePersoon_Groep", "Groep", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Chiro.Gap.Orm.Groep), "GelieerdePersoon", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Chiro.Gap.Orm.GelieerdePersoon))]
[assembly: EdmRelationshipAttribute("ChiroGroepModel", "FK_CommunicatieVorm_GelieerdePersoon", "GelieerdePersoon", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Chiro.Gap.Orm.GelieerdePersoon), "CommunicatieVorm", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Chiro.Gap.Orm.CommunicatieVorm))]
[assembly: EdmRelationshipAttribute("ChiroGroepModel", "FK_GelieerdePersoon_Persoon", "Persoon", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Chiro.Gap.Orm.Persoon), "GelieerdePersoon", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Chiro.Gap.Orm.GelieerdePersoon))]
[assembly: EdmRelationshipAttribute("ChiroGroepModel", "FK_PersoonsAdres_Adres", "Adres", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Chiro.Gap.Orm.Adres), "PersoonsAdres", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Chiro.Gap.Orm.PersoonsAdres))]
[assembly: EdmRelationshipAttribute("ChiroGroepModel", "FK_PersoonsAdres_Persoon", "Persoon", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Chiro.Gap.Orm.Persoon), "PersoonsAdres", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Chiro.Gap.Orm.PersoonsAdres))]
[assembly: EdmRelationshipAttribute("ChiroGroepModel", "FK_GroepsWerkjaar_Groep", "Groep", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Chiro.Gap.Orm.Groep), "GroepsWerkJaar", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Chiro.Gap.Orm.GroepsWerkJaar))]
[assembly: EdmRelationshipAttribute("ChiroGroepModel", "FK_Lid_GroepsWerkjaar", "GroepsWerkJaar", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Chiro.Gap.Orm.GroepsWerkJaar), "Lid", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Chiro.Gap.Orm.Lid))]
[assembly: EdmRelationshipAttribute("ChiroGroepModel", "FK_Lid_GelieerdePersoon", "GelieerdePersoon", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Chiro.Gap.Orm.GelieerdePersoon), "Lid", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Chiro.Gap.Orm.Lid))]
[assembly: EdmRelationshipAttribute("ChiroGroepModel", "FK_GebruikersRecht_Gav", "Gav", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Chiro.Gap.Orm.Gav), "GebruikersRecht", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Chiro.Gap.Orm.GebruikersRecht))]
[assembly: EdmRelationshipAttribute("ChiroGroepModel", "FK_GebruikersRecht_Groep", "Groep", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Chiro.Gap.Orm.Groep), "GebruikersRecht", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Chiro.Gap.Orm.GebruikersRecht))]
[assembly: EdmRelationshipAttribute("ChiroGroepModel", "FK_AfdelingsJaar_GroepsWerkjaar", "GroepsWerkJaar", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Chiro.Gap.Orm.GroepsWerkJaar), "AfdelingsJaar", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Chiro.Gap.Orm.AfdelingsJaar))]
[assembly: EdmRelationshipAttribute("ChiroGroepModel", "FK_AfdelingsJaar_Afdeling", "Afdeling", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Chiro.Gap.Orm.Afdeling), "AfdelingsJaar", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Chiro.Gap.Orm.AfdelingsJaar))]
[assembly: EdmRelationshipAttribute("ChiroGroepModel", "FK_AfdelingsJaar_OfficieleAfdeling", "OfficieleAfdeling", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Chiro.Gap.Orm.OfficieleAfdeling), "AfdelingsJaar", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Chiro.Gap.Orm.AfdelingsJaar))]
[assembly: EdmRelationshipAttribute("ChiroGroepModel", "LeidingInAfdelingsJaar", "AfdelingsJaar", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Chiro.Gap.Orm.AfdelingsJaar), "Leiding", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Chiro.Gap.Orm.Leiding))]
[assembly: EdmRelationshipAttribute("ChiroGroepModel", "FK_Kind_AfdelingsJaar", "AfdelingsJaar", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Chiro.Gap.Orm.AfdelingsJaar), "Kind", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Chiro.Gap.Orm.Kind))]
[assembly: EdmRelationshipAttribute("ChiroGroepModel", "FK_Categorie_Groep", "Groep", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Chiro.Gap.Orm.Groep), "Categorie", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Chiro.Gap.Orm.Categorie))]
[assembly: EdmRelationshipAttribute("ChiroGroepModel", "PersoonsCategorie", "Categorie", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Chiro.Gap.Orm.Categorie), "GelieerdePersoon", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Chiro.Gap.Orm.GelieerdePersoon))]
[assembly: EdmRelationshipAttribute("ChiroGroepModel", "FK_CommunicatieVorm_CommunicatieType", "CommunicatieType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Chiro.Gap.Orm.CommunicatieType), "CommunicatieVorm", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Chiro.Gap.Orm.CommunicatieVorm))]
[assembly: EdmRelationshipAttribute("ChiroGroepModel", "FK_Functie_Groep", "Groep", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Chiro.Gap.Orm.Groep), "Functie", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Chiro.Gap.Orm.Functie))]
[assembly: EdmRelationshipAttribute("ChiroGroepModel", "LidFunctie", "Functie", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Chiro.Gap.Orm.Functie), "Lid", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Chiro.Gap.Orm.Lid))]
[assembly: EdmRelationshipAttribute("ChiroGroepModel", "FK_GelieerdePersoon_PersoonsAdres", "PersoonsAdres", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Chiro.Gap.Orm.PersoonsAdres), "GelieerdePersoon", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Chiro.Gap.Orm.GelieerdePersoon))]
[assembly: EdmRelationshipAttribute("ChiroGroepModel", "FK_PersoonsVerzekering_Persoon", "Persoon", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Chiro.Gap.Orm.Persoon), "PersoonsVerzekering", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Chiro.Gap.Orm.PersoonsVerzekering))]
[assembly: EdmRelationshipAttribute("ChiroGroepModel", "FK_PersoonsVerzekering_VerzekeringsType", "VerzekeringsType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Chiro.Gap.Orm.VerzekeringsType), "PersoonsVerzekering", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Chiro.Gap.Orm.PersoonsVerzekering))]
[assembly: EdmRelationshipAttribute("ChiroGroepModel", "FK_ChiroGroep_KaderGroep", "KaderGroep", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Chiro.Gap.Orm.KaderGroep), "ChiroGroep", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Chiro.Gap.Orm.ChiroGroep))]
[assembly: EdmRelationshipAttribute("ChiroGroepModel", "FK_KaderGroep_KaderGroep", "KaderGroep", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Chiro.Gap.Orm.KaderGroep), "KaderGroep1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Chiro.Gap.Orm.KaderGroep))]
[assembly: EdmRelationshipAttribute("ChiroGroepModel", "FK_Afdeling_ChiroGroep", "ChiroGroep", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Chiro.Gap.Orm.ChiroGroep), "Afdeling", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Chiro.Gap.Orm.Afdeling))]
[assembly: EdmRelationshipAttribute("ChiroGroepModel", "FK_BelgischAdres_StraatNaam", "StraatNaam", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Chiro.Gap.Orm.StraatNaam), "BelgischAdres", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Chiro.Gap.Orm.BelgischAdres))]
[assembly: EdmRelationshipAttribute("ChiroGroepModel", "FK_BelgischAdres_WoonPlaats", "WoonPlaats", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Chiro.Gap.Orm.WoonPlaats), "BelgischAdres", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Chiro.Gap.Orm.BelgischAdres))]
[assembly: EdmRelationshipAttribute("ChiroGroepModel", "FK_BuitenlandsAdres_Land", "Land", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Chiro.Gap.Orm.Land), "BuitenLandsAdres", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Chiro.Gap.Orm.BuitenLandsAdres))]

#endregion

namespace Chiro.Gap.Orm
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ChiroGroepEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ChiroGroepEntities object using the connection string found in the 'ChiroGroepEntities' section of the application configuration file.
        /// </summary>
        public ChiroGroepEntities() : base("name=ChiroGroepEntities", "ChiroGroepEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ChiroGroepEntities object.
        /// </summary>
        public ChiroGroepEntities(string connectionString) : base(connectionString, "ChiroGroepEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ChiroGroepEntities object.
        /// </summary>
        public ChiroGroepEntities(EntityConnection connection) : base(connection, "ChiroGroepEntities")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Groep> Groep
        {
            get
            {
                if ((_Groep == null))
                {
                    _Groep = base.CreateObjectSet<Groep>("Groep");
                }
                return _Groep;
            }
        }
        private ObjectSet<Groep> _Groep;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Persoon> Persoon
        {
            get
            {
                if ((_Persoon == null))
                {
                    _Persoon = base.CreateObjectSet<Persoon>("Persoon");
                }
                return _Persoon;
            }
        }
        private ObjectSet<Persoon> _Persoon;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CommunicatieVorm> CommunicatieVorm
        {
            get
            {
                if ((_CommunicatieVorm == null))
                {
                    _CommunicatieVorm = base.CreateObjectSet<CommunicatieVorm>("CommunicatieVorm");
                }
                return _CommunicatieVorm;
            }
        }
        private ObjectSet<CommunicatieVorm> _CommunicatieVorm;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GelieerdePersoon> GelieerdePersoon
        {
            get
            {
                if ((_GelieerdePersoon == null))
                {
                    _GelieerdePersoon = base.CreateObjectSet<GelieerdePersoon>("GelieerdePersoon");
                }
                return _GelieerdePersoon;
            }
        }
        private ObjectSet<GelieerdePersoon> _GelieerdePersoon;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Adres> Adres
        {
            get
            {
                if ((_Adres == null))
                {
                    _Adres = base.CreateObjectSet<Adres>("Adres");
                }
                return _Adres;
            }
        }
        private ObjectSet<Adres> _Adres;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PersoonsAdres> PersoonsAdres
        {
            get
            {
                if ((_PersoonsAdres == null))
                {
                    _PersoonsAdres = base.CreateObjectSet<PersoonsAdres>("PersoonsAdres");
                }
                return _PersoonsAdres;
            }
        }
        private ObjectSet<PersoonsAdres> _PersoonsAdres;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GroepsWerkJaar> GroepsWerkJaar
        {
            get
            {
                if ((_GroepsWerkJaar == null))
                {
                    _GroepsWerkJaar = base.CreateObjectSet<GroepsWerkJaar>("GroepsWerkJaar");
                }
                return _GroepsWerkJaar;
            }
        }
        private ObjectSet<GroepsWerkJaar> _GroepsWerkJaar;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Lid> Lid
        {
            get
            {
                if ((_Lid == null))
                {
                    _Lid = base.CreateObjectSet<Lid>("Lid");
                }
                return _Lid;
            }
        }
        private ObjectSet<Lid> _Lid;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Gav> Gav
        {
            get
            {
                if ((_Gav == null))
                {
                    _Gav = base.CreateObjectSet<Gav>("Gav");
                }
                return _Gav;
            }
        }
        private ObjectSet<Gav> _Gav;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GebruikersRecht> GebruikersRecht
        {
            get
            {
                if ((_GebruikersRecht == null))
                {
                    _GebruikersRecht = base.CreateObjectSet<GebruikersRecht>("GebruikersRecht");
                }
                return _GebruikersRecht;
            }
        }
        private ObjectSet<GebruikersRecht> _GebruikersRecht;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Afdeling> Afdeling
        {
            get
            {
                if ((_Afdeling == null))
                {
                    _Afdeling = base.CreateObjectSet<Afdeling>("Afdeling");
                }
                return _Afdeling;
            }
        }
        private ObjectSet<Afdeling> _Afdeling;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AfdelingsJaar> AfdelingsJaar
        {
            get
            {
                if ((_AfdelingsJaar == null))
                {
                    _AfdelingsJaar = base.CreateObjectSet<AfdelingsJaar>("AfdelingsJaar");
                }
                return _AfdelingsJaar;
            }
        }
        private ObjectSet<AfdelingsJaar> _AfdelingsJaar;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OfficieleAfdeling> OfficieleAfdeling
        {
            get
            {
                if ((_OfficieleAfdeling == null))
                {
                    _OfficieleAfdeling = base.CreateObjectSet<OfficieleAfdeling>("OfficieleAfdeling");
                }
                return _OfficieleAfdeling;
            }
        }
        private ObjectSet<OfficieleAfdeling> _OfficieleAfdeling;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Categorie> Categorie
        {
            get
            {
                if ((_Categorie == null))
                {
                    _Categorie = base.CreateObjectSet<Categorie>("Categorie");
                }
                return _Categorie;
            }
        }
        private ObjectSet<Categorie> _Categorie;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CommunicatieType> CommunicatieType
        {
            get
            {
                if ((_CommunicatieType == null))
                {
                    _CommunicatieType = base.CreateObjectSet<CommunicatieType>("CommunicatieType");
                }
                return _CommunicatieType;
            }
        }
        private ObjectSet<CommunicatieType> _CommunicatieType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Functie> Functie
        {
            get
            {
                if ((_Functie == null))
                {
                    _Functie = base.CreateObjectSet<Functie>("Functie");
                }
                return _Functie;
            }
        }
        private ObjectSet<Functie> _Functie;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StraatNaam> StraatNaam
        {
            get
            {
                if ((_StraatNaam == null))
                {
                    _StraatNaam = base.CreateObjectSet<StraatNaam>("StraatNaam");
                }
                return _StraatNaam;
            }
        }
        private ObjectSet<StraatNaam> _StraatNaam;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WoonPlaats> WoonPlaats
        {
            get
            {
                if ((_WoonPlaats == null))
                {
                    _WoonPlaats = base.CreateObjectSet<WoonPlaats>("WoonPlaats");
                }
                return _WoonPlaats;
            }
        }
        private ObjectSet<WoonPlaats> _WoonPlaats;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PersoonsVerzekering> PersoonsVerzekering
        {
            get
            {
                if ((_PersoonsVerzekering == null))
                {
                    _PersoonsVerzekering = base.CreateObjectSet<PersoonsVerzekering>("PersoonsVerzekering");
                }
                return _PersoonsVerzekering;
            }
        }
        private ObjectSet<PersoonsVerzekering> _PersoonsVerzekering;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VerzekeringsType> VerzekeringsType
        {
            get
            {
                if ((_VerzekeringsType == null))
                {
                    _VerzekeringsType = base.CreateObjectSet<VerzekeringsType>("VerzekeringsType");
                }
                return _VerzekeringsType;
            }
        }
        private ObjectSet<VerzekeringsType> _VerzekeringsType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Land> Land
        {
            get
            {
                if ((_Land == null))
                {
                    _Land = base.CreateObjectSet<Land>("Land");
                }
                return _Land;
            }
        }
        private ObjectSet<Land> _Land;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Groep EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGroep(Groep groep)
        {
            base.AddObject("Groep", groep);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Persoon EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPersoon(Persoon persoon)
        {
            base.AddObject("Persoon", persoon);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CommunicatieVorm EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCommunicatieVorm(CommunicatieVorm communicatieVorm)
        {
            base.AddObject("CommunicatieVorm", communicatieVorm);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GelieerdePersoon EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGelieerdePersoon(GelieerdePersoon gelieerdePersoon)
        {
            base.AddObject("GelieerdePersoon", gelieerdePersoon);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Adres EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdres(Adres adres)
        {
            base.AddObject("Adres", adres);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PersoonsAdres EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPersoonsAdres(PersoonsAdres persoonsAdres)
        {
            base.AddObject("PersoonsAdres", persoonsAdres);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GroepsWerkJaar EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGroepsWerkJaar(GroepsWerkJaar groepsWerkJaar)
        {
            base.AddObject("GroepsWerkJaar", groepsWerkJaar);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Lid EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLid(Lid lid)
        {
            base.AddObject("Lid", lid);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Gav EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGav(Gav gav)
        {
            base.AddObject("Gav", gav);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GebruikersRecht EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGebruikersRecht(GebruikersRecht gebruikersRecht)
        {
            base.AddObject("GebruikersRecht", gebruikersRecht);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Afdeling EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAfdeling(Afdeling afdeling)
        {
            base.AddObject("Afdeling", afdeling);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AfdelingsJaar EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAfdelingsJaar(AfdelingsJaar afdelingsJaar)
        {
            base.AddObject("AfdelingsJaar", afdelingsJaar);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OfficieleAfdeling EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOfficieleAfdeling(OfficieleAfdeling officieleAfdeling)
        {
            base.AddObject("OfficieleAfdeling", officieleAfdeling);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Categorie EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategorie(Categorie categorie)
        {
            base.AddObject("Categorie", categorie);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CommunicatieType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCommunicatieType(CommunicatieType communicatieType)
        {
            base.AddObject("CommunicatieType", communicatieType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Functie EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFunctie(Functie functie)
        {
            base.AddObject("Functie", functie);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StraatNaam EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStraatNaam(StraatNaam straatNaam)
        {
            base.AddObject("StraatNaam", straatNaam);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WoonPlaats EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWoonPlaats(WoonPlaats woonPlaats)
        {
            base.AddObject("WoonPlaats", woonPlaats);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PersoonsVerzekering EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPersoonsVerzekering(PersoonsVerzekering persoonsVerzekering)
        {
            base.AddObject("PersoonsVerzekering", persoonsVerzekering);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VerzekeringsType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVerzekeringsType(VerzekeringsType verzekeringsType)
        {
            base.AddObject("VerzekeringsType", verzekeringsType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Land EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLand(Land land)
        {
            base.AddObject("Land", land);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChiroGroepModel", Name="Adres")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(BelgischAdres))]
    [KnownTypeAttribute(typeof(BuitenLandsAdres))]
    public abstract partial class Adres : EntityObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Bus
        {
            get
            {
                return _Bus;
            }
            set
            {
                OnBusChanging(value);
                ReportPropertyChanging("Bus");
                _Bus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Bus");
                OnBusChanged();
            }
        }
        private global::System.String _Bus;
        partial void OnBusChanging(global::System.String value);
        partial void OnBusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> HuisNr
        {
            get
            {
                return _HuisNr;
            }
            set
            {
                OnHuisNrChanging(value);
                ReportPropertyChanging("HuisNr");
                _HuisNr = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HuisNr");
                OnHuisNrChanged();
            }
        }
        private Nullable<global::System.Int32> _HuisNr;
        partial void OnHuisNrChanging(Nullable<global::System.Int32> value);
        partial void OnHuisNrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Versie
        {
            get
            {
                return StructuralObject.GetValidValue(_Versie);
            }
            set
            {
                OnVersieChanging(value);
                ReportPropertyChanging("Versie");
                _Versie = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Versie");
                OnVersieChanged();
            }
        }
        private global::System.Byte[] _Versie;
        partial void OnVersieChanging(global::System.Byte[] value);
        partial void OnVersieChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_PersoonsAdres_Adres", "PersoonsAdres")]
        public EntityCollection<PersoonsAdres> PersoonsAdres
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersoonsAdres>("ChiroGroepModel.FK_PersoonsAdres_Adres", "PersoonsAdres");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersoonsAdres>("ChiroGroepModel.FK_PersoonsAdres_Adres", "PersoonsAdres", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChiroGroepModel", Name="Afdeling")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Afdeling : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Afdeling object.
        /// </summary>
        /// <param name="naam">Initial value of the Naam property.</param>
        /// <param name="afkorting">Initial value of the Afkorting property.</param>
        /// <param name="id">Initial value of the ID property.</param>
        public static Afdeling CreateAfdeling(global::System.String naam, global::System.String afkorting, global::System.Int32 id)
        {
            Afdeling afdeling = new Afdeling();
            afdeling.Naam = naam;
            afdeling.Afkorting = afkorting;
            afdeling.ID = id;
            return afdeling;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Naam
        {
            get
            {
                return _Naam;
            }
            set
            {
                OnNaamChanging(value);
                ReportPropertyChanging("Naam");
                _Naam = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Naam");
                OnNaamChanged();
            }
        }
        private global::System.String _Naam;
        partial void OnNaamChanging(global::System.String value);
        partial void OnNaamChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Afkorting
        {
            get
            {
                return _Afkorting;
            }
            set
            {
                OnAfkortingChanging(value);
                ReportPropertyChanging("Afkorting");
                _Afkorting = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Afkorting");
                OnAfkortingChanged();
            }
        }
        private global::System.String _Afkorting;
        partial void OnAfkortingChanging(global::System.String value);
        partial void OnAfkortingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Versie
        {
            get
            {
                return StructuralObject.GetValidValue(_Versie);
            }
            set
            {
                OnVersieChanging(value);
                ReportPropertyChanging("Versie");
                _Versie = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Versie");
                OnVersieChanged();
            }
        }
        private global::System.Byte[] _Versie;
        partial void OnVersieChanging(global::System.Byte[] value);
        partial void OnVersieChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_AfdelingsJaar_Afdeling", "AfdelingsJaar")]
        public EntityCollection<AfdelingsJaar> AfdelingsJaar
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AfdelingsJaar>("ChiroGroepModel.FK_AfdelingsJaar_Afdeling", "AfdelingsJaar");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AfdelingsJaar>("ChiroGroepModel.FK_AfdelingsJaar_Afdeling", "AfdelingsJaar", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_Afdeling_ChiroGroep", "ChiroGroep")]
        public ChiroGroep ChiroGroep
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChiroGroep>("ChiroGroepModel.FK_Afdeling_ChiroGroep", "ChiroGroep").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChiroGroep>("ChiroGroepModel.FK_Afdeling_ChiroGroep", "ChiroGroep").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ChiroGroep> ChiroGroepReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChiroGroep>("ChiroGroepModel.FK_Afdeling_ChiroGroep", "ChiroGroep");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ChiroGroep>("ChiroGroepModel.FK_Afdeling_ChiroGroep", "ChiroGroep", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChiroGroepModel", Name="AfdelingsJaar")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AfdelingsJaar : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AfdelingsJaar object.
        /// </summary>
        /// <param name="geboorteJaarTot">Initial value of the GeboorteJaarTot property.</param>
        /// <param name="geboorteJaarVan">Initial value of the GeboorteJaarVan property.</param>
        /// <param name="id">Initial value of the ID property.</param>
        public static AfdelingsJaar CreateAfdelingsJaar(global::System.Int32 geboorteJaarTot, global::System.Int32 geboorteJaarVan, global::System.Int32 id)
        {
            AfdelingsJaar afdelingsJaar = new AfdelingsJaar();
            afdelingsJaar.GeboorteJaarTot = geboorteJaarTot;
            afdelingsJaar.GeboorteJaarVan = geboorteJaarVan;
            afdelingsJaar.ID = id;
            return afdelingsJaar;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GeboorteJaarTot
        {
            get
            {
                return _GeboorteJaarTot;
            }
            set
            {
                OnGeboorteJaarTotChanging(value);
                ReportPropertyChanging("GeboorteJaarTot");
                _GeboorteJaarTot = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GeboorteJaarTot");
                OnGeboorteJaarTotChanged();
            }
        }
        private global::System.Int32 _GeboorteJaarTot;
        partial void OnGeboorteJaarTotChanging(global::System.Int32 value);
        partial void OnGeboorteJaarTotChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GeboorteJaarVan
        {
            get
            {
                return _GeboorteJaarVan;
            }
            set
            {
                OnGeboorteJaarVanChanging(value);
                ReportPropertyChanging("GeboorteJaarVan");
                _GeboorteJaarVan = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GeboorteJaarVan");
                OnGeboorteJaarVanChanged();
            }
        }
        private global::System.Int32 _GeboorteJaarVan;
        partial void OnGeboorteJaarVanChanging(global::System.Int32 value);
        partial void OnGeboorteJaarVanChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Versie
        {
            get
            {
                return StructuralObject.GetValidValue(_Versie);
            }
            set
            {
                OnVersieChanging(value);
                ReportPropertyChanging("Versie");
                _Versie = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Versie");
                OnVersieChanged();
            }
        }
        private global::System.Byte[] _Versie;
        partial void OnVersieChanging(global::System.Byte[] value);
        partial void OnVersieChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        private global::System.Int32 GeslachtsInt
        {
            get
            {
                return _GeslachtsInt;
            }
            set
            {
                OnGeslachtsIntChanging(value);
                ReportPropertyChanging("GeslachtsInt");
                _GeslachtsInt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GeslachtsInt");
                OnGeslachtsIntChanged();
            }
        }
        private global::System.Int32 _GeslachtsInt;
        partial void OnGeslachtsIntChanging(global::System.Int32 value);
        partial void OnGeslachtsIntChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_AfdelingsJaar_GroepsWerkjaar", "GroepsWerkJaar")]
        public GroepsWerkJaar GroepsWerkJaar
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroepsWerkJaar>("ChiroGroepModel.FK_AfdelingsJaar_GroepsWerkjaar", "GroepsWerkJaar").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroepsWerkJaar>("ChiroGroepModel.FK_AfdelingsJaar_GroepsWerkjaar", "GroepsWerkJaar").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GroepsWerkJaar> GroepsWerkJaarReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroepsWerkJaar>("ChiroGroepModel.FK_AfdelingsJaar_GroepsWerkjaar", "GroepsWerkJaar");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GroepsWerkJaar>("ChiroGroepModel.FK_AfdelingsJaar_GroepsWerkjaar", "GroepsWerkJaar", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_AfdelingsJaar_Afdeling", "Afdeling")]
        public Afdeling Afdeling
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Afdeling>("ChiroGroepModel.FK_AfdelingsJaar_Afdeling", "Afdeling").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Afdeling>("ChiroGroepModel.FK_AfdelingsJaar_Afdeling", "Afdeling").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Afdeling> AfdelingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Afdeling>("ChiroGroepModel.FK_AfdelingsJaar_Afdeling", "Afdeling");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Afdeling>("ChiroGroepModel.FK_AfdelingsJaar_Afdeling", "Afdeling", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_AfdelingsJaar_OfficieleAfdeling", "OfficieleAfdeling")]
        public OfficieleAfdeling OfficieleAfdeling
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OfficieleAfdeling>("ChiroGroepModel.FK_AfdelingsJaar_OfficieleAfdeling", "OfficieleAfdeling").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OfficieleAfdeling>("ChiroGroepModel.FK_AfdelingsJaar_OfficieleAfdeling", "OfficieleAfdeling").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OfficieleAfdeling> OfficieleAfdelingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OfficieleAfdeling>("ChiroGroepModel.FK_AfdelingsJaar_OfficieleAfdeling", "OfficieleAfdeling");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OfficieleAfdeling>("ChiroGroepModel.FK_AfdelingsJaar_OfficieleAfdeling", "OfficieleAfdeling", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "LeidingInAfdelingsJaar", "Leiding")]
        public EntityCollection<Leiding> Leiding
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Leiding>("ChiroGroepModel.LeidingInAfdelingsJaar", "Leiding");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Leiding>("ChiroGroepModel.LeidingInAfdelingsJaar", "Leiding", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_Kind_AfdelingsJaar", "Kind")]
        public EntityCollection<Kind> Kind
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Kind>("ChiroGroepModel.FK_Kind_AfdelingsJaar", "Kind");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Kind>("ChiroGroepModel.FK_Kind_AfdelingsJaar", "Kind", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChiroGroepModel", Name="BelgischAdres")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BelgischAdres : Adres
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BelgischAdres object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static BelgischAdres CreateBelgischAdres(global::System.Int32 id)
        {
            BelgischAdres belgischAdres = new BelgischAdres();
            belgischAdres.ID = id;
            return belgischAdres;
        }

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_BelgischAdres_StraatNaam", "StraatNaam")]
        public StraatNaam StraatNaam
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StraatNaam>("ChiroGroepModel.FK_BelgischAdres_StraatNaam", "StraatNaam").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StraatNaam>("ChiroGroepModel.FK_BelgischAdres_StraatNaam", "StraatNaam").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StraatNaam> StraatNaamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StraatNaam>("ChiroGroepModel.FK_BelgischAdres_StraatNaam", "StraatNaam");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StraatNaam>("ChiroGroepModel.FK_BelgischAdres_StraatNaam", "StraatNaam", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_BelgischAdres_WoonPlaats", "WoonPlaats")]
        public WoonPlaats WoonPlaats
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WoonPlaats>("ChiroGroepModel.FK_BelgischAdres_WoonPlaats", "WoonPlaats").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WoonPlaats>("ChiroGroepModel.FK_BelgischAdres_WoonPlaats", "WoonPlaats").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WoonPlaats> WoonPlaatsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WoonPlaats>("ChiroGroepModel.FK_BelgischAdres_WoonPlaats", "WoonPlaats");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WoonPlaats>("ChiroGroepModel.FK_BelgischAdres_WoonPlaats", "WoonPlaats", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChiroGroepModel", Name="BuitenLandsAdres")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BuitenLandsAdres : Adres
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BuitenLandsAdres object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="straat">Initial value of the Straat property.</param>
        /// <param name="woonPlaats">Initial value of the WoonPlaats property.</param>
        public static BuitenLandsAdres CreateBuitenLandsAdres(global::System.Int32 id, global::System.String straat, global::System.String woonPlaats)
        {
            BuitenLandsAdres buitenLandsAdres = new BuitenLandsAdres();
            buitenLandsAdres.ID = id;
            buitenLandsAdres.Straat = straat;
            buitenLandsAdres.WoonPlaats = woonPlaats;
            return buitenLandsAdres;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostCode
        {
            get
            {
                return _PostCode;
            }
            set
            {
                OnPostCodeChanging(value);
                ReportPropertyChanging("PostCode");
                _PostCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostCode");
                OnPostCodeChanged();
            }
        }
        private global::System.String _PostCode;
        partial void OnPostCodeChanging(global::System.String value);
        partial void OnPostCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Straat
        {
            get
            {
                return _Straat;
            }
            set
            {
                OnStraatChanging(value);
                ReportPropertyChanging("Straat");
                _Straat = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Straat");
                OnStraatChanged();
            }
        }
        private global::System.String _Straat;
        partial void OnStraatChanging(global::System.String value);
        partial void OnStraatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WoonPlaats
        {
            get
            {
                return _WoonPlaats;
            }
            set
            {
                OnWoonPlaatsChanging(value);
                ReportPropertyChanging("WoonPlaats");
                _WoonPlaats = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("WoonPlaats");
                OnWoonPlaatsChanged();
            }
        }
        private global::System.String _WoonPlaats;
        partial void OnWoonPlaatsChanging(global::System.String value);
        partial void OnWoonPlaatsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PostNummer
        {
            get
            {
                return _PostNummer;
            }
            set
            {
                OnPostNummerChanging(value);
                ReportPropertyChanging("PostNummer");
                _PostNummer = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostNummer");
                OnPostNummerChanged();
            }
        }
        private Nullable<global::System.Int32> _PostNummer;
        partial void OnPostNummerChanging(Nullable<global::System.Int32> value);
        partial void OnPostNummerChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_BuitenlandsAdres_Land", "Land")]
        public Land Land
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Land>("ChiroGroepModel.FK_BuitenlandsAdres_Land", "Land").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Land>("ChiroGroepModel.FK_BuitenlandsAdres_Land", "Land").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Land> LandReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Land>("ChiroGroepModel.FK_BuitenlandsAdres_Land", "Land");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Land>("ChiroGroepModel.FK_BuitenlandsAdres_Land", "Land", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChiroGroepModel", Name="Categorie")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Categorie : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Categorie object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="naam">Initial value of the Naam property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        public static Categorie CreateCategorie(global::System.Int32 id, global::System.String naam, global::System.String code)
        {
            Categorie categorie = new Categorie();
            categorie.ID = id;
            categorie.Naam = naam;
            categorie.Code = code;
            return categorie;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Naam
        {
            get
            {
                return _Naam;
            }
            set
            {
                OnNaamChanging(value);
                ReportPropertyChanging("Naam");
                _Naam = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Naam");
                OnNaamChanged();
            }
        }
        private global::System.String _Naam;
        partial void OnNaamChanging(global::System.String value);
        partial void OnNaamChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Versie
        {
            get
            {
                return StructuralObject.GetValidValue(_Versie);
            }
            set
            {
                OnVersieChanging(value);
                ReportPropertyChanging("Versie");
                _Versie = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Versie");
                OnVersieChanged();
            }
        }
        private global::System.Byte[] _Versie;
        partial void OnVersieChanging(global::System.Byte[] value);
        partial void OnVersieChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_Categorie_Groep", "Groep")]
        public Groep Groep
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Groep>("ChiroGroepModel.FK_Categorie_Groep", "Groep").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Groep>("ChiroGroepModel.FK_Categorie_Groep", "Groep").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Groep> GroepReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Groep>("ChiroGroepModel.FK_Categorie_Groep", "Groep");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Groep>("ChiroGroepModel.FK_Categorie_Groep", "Groep", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "PersoonsCategorie", "GelieerdePersoon")]
        public EntityCollection<GelieerdePersoon> GelieerdePersoon
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GelieerdePersoon>("ChiroGroepModel.PersoonsCategorie", "GelieerdePersoon");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GelieerdePersoon>("ChiroGroepModel.PersoonsCategorie", "GelieerdePersoon", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChiroGroepModel", Name="ChiroGroep")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChiroGroep : Groep
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChiroGroep object.
        /// </summary>
        /// <param name="naam">Initial value of the Naam property.</param>
        /// <param name="id">Initial value of the ID property.</param>
        public static ChiroGroep CreateChiroGroep(global::System.String naam, global::System.Int32 id)
        {
            ChiroGroep chiroGroep = new ChiroGroep();
            chiroGroep.Naam = naam;
            chiroGroep.ID = id;
            return chiroGroep;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Plaats
        {
            get
            {
                return _Plaats;
            }
            set
            {
                OnPlaatsChanging(value);
                ReportPropertyChanging("Plaats");
                _Plaats = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Plaats");
                OnPlaatsChanged();
            }
        }
        private global::System.String _Plaats;
        partial void OnPlaatsChanging(global::System.String value);
        partial void OnPlaatsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_ChiroGroep_KaderGroep", "KaderGroep")]
        public KaderGroep KaderGroep
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<KaderGroep>("ChiroGroepModel.FK_ChiroGroep_KaderGroep", "KaderGroep").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<KaderGroep>("ChiroGroepModel.FK_ChiroGroep_KaderGroep", "KaderGroep").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<KaderGroep> KaderGroepReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<KaderGroep>("ChiroGroepModel.FK_ChiroGroep_KaderGroep", "KaderGroep");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<KaderGroep>("ChiroGroepModel.FK_ChiroGroep_KaderGroep", "KaderGroep", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_Afdeling_ChiroGroep", "Afdeling")]
        public EntityCollection<Afdeling> Afdeling
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Afdeling>("ChiroGroepModel.FK_Afdeling_ChiroGroep", "Afdeling");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Afdeling>("ChiroGroepModel.FK_Afdeling_ChiroGroep", "Afdeling", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChiroGroepModel", Name="CommunicatieType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CommunicatieType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CommunicatieType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="isOptIn">Initial value of the IsOptIn property.</param>
        public static CommunicatieType CreateCommunicatieType(global::System.Int32 id, global::System.Boolean isOptIn)
        {
            CommunicatieType communicatieType = new CommunicatieType();
            communicatieType.ID = id;
            communicatieType.IsOptIn = isOptIn;
            return communicatieType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Omschrijving
        {
            get
            {
                return _Omschrijving;
            }
            set
            {
                OnOmschrijvingChanging(value);
                ReportPropertyChanging("Omschrijving");
                _Omschrijving = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Omschrijving");
                OnOmschrijvingChanged();
            }
        }
        private global::System.String _Omschrijving;
        partial void OnOmschrijvingChanging(global::System.String value);
        partial void OnOmschrijvingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Validatie
        {
            get
            {
                return _Validatie;
            }
            set
            {
                OnValidatieChanging(value);
                ReportPropertyChanging("Validatie");
                _Validatie = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Validatie");
                OnValidatieChanged();
            }
        }
        private global::System.String _Validatie;
        partial void OnValidatieChanging(global::System.String value);
        partial void OnValidatieChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Versie
        {
            get
            {
                return StructuralObject.GetValidValue(_Versie);
            }
            set
            {
                OnVersieChanging(value);
                ReportPropertyChanging("Versie");
                _Versie = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Versie");
                OnVersieChanged();
            }
        }
        private global::System.Byte[] _Versie;
        partial void OnVersieChanging(global::System.Byte[] value);
        partial void OnVersieChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Voorbeeld
        {
            get
            {
                return _Voorbeeld;
            }
            set
            {
                OnVoorbeeldChanging(value);
                ReportPropertyChanging("Voorbeeld");
                _Voorbeeld = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Voorbeeld");
                OnVoorbeeldChanged();
            }
        }
        private global::System.String _Voorbeeld;
        partial void OnVoorbeeldChanging(global::System.String value);
        partial void OnVoorbeeldChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsOptIn
        {
            get
            {
                return _IsOptIn;
            }
            set
            {
                OnIsOptInChanging(value);
                ReportPropertyChanging("IsOptIn");
                _IsOptIn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsOptIn");
                OnIsOptInChanged();
            }
        }
        private global::System.Boolean _IsOptIn;
        partial void OnIsOptInChanging(global::System.Boolean value);
        partial void OnIsOptInChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_CommunicatieVorm_CommunicatieType", "CommunicatieVorm")]
        public EntityCollection<CommunicatieVorm> CommunicatieVorm
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CommunicatieVorm>("ChiroGroepModel.FK_CommunicatieVorm_CommunicatieType", "CommunicatieVorm");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CommunicatieVorm>("ChiroGroepModel.FK_CommunicatieVorm_CommunicatieType", "CommunicatieVorm", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChiroGroepModel", Name="CommunicatieVorm")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CommunicatieVorm : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CommunicatieVorm object.
        /// </summary>
        /// <param name="nummer">Initial value of the Nummer property.</param>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="isGezinsgebonden">Initial value of the IsGezinsgebonden property.</param>
        /// <param name="voorkeur">Initial value of the Voorkeur property.</param>
        /// <param name="isVoorOptIn">Initial value of the IsVoorOptIn property.</param>
        public static CommunicatieVorm CreateCommunicatieVorm(global::System.String nummer, global::System.Int32 id, global::System.Boolean isGezinsgebonden, global::System.Boolean voorkeur, global::System.Boolean isVoorOptIn)
        {
            CommunicatieVorm communicatieVorm = new CommunicatieVorm();
            communicatieVorm.Nummer = nummer;
            communicatieVorm.ID = id;
            communicatieVorm.IsGezinsgebonden = isGezinsgebonden;
            communicatieVorm.Voorkeur = voorkeur;
            communicatieVorm.IsVoorOptIn = isVoorOptIn;
            return communicatieVorm;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Nota
        {
            get
            {
                return _Nota;
            }
            set
            {
                OnNotaChanging(value);
                ReportPropertyChanging("Nota");
                _Nota = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Nota");
                OnNotaChanged();
            }
        }
        private global::System.String _Nota;
        partial void OnNotaChanging(global::System.String value);
        partial void OnNotaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nummer
        {
            get
            {
                return _Nummer;
            }
            set
            {
                OnNummerChanging(value);
                ReportPropertyChanging("Nummer");
                _Nummer = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nummer");
                OnNummerChanged();
            }
        }
        private global::System.String _Nummer;
        partial void OnNummerChanging(global::System.String value);
        partial void OnNummerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsGezinsgebonden
        {
            get
            {
                return _IsGezinsgebonden;
            }
            set
            {
                OnIsGezinsgebondenChanging(value);
                ReportPropertyChanging("IsGezinsgebonden");
                _IsGezinsgebonden = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsGezinsgebonden");
                OnIsGezinsgebondenChanged();
            }
        }
        private global::System.Boolean _IsGezinsgebonden;
        partial void OnIsGezinsgebondenChanging(global::System.Boolean value);
        partial void OnIsGezinsgebondenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Voorkeur
        {
            get
            {
                return _Voorkeur;
            }
            set
            {
                OnVoorkeurChanging(value);
                ReportPropertyChanging("Voorkeur");
                _Voorkeur = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Voorkeur");
                OnVoorkeurChanged();
            }
        }
        private global::System.Boolean _Voorkeur;
        partial void OnVoorkeurChanging(global::System.Boolean value);
        partial void OnVoorkeurChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Versie
        {
            get
            {
                return StructuralObject.GetValidValue(_Versie);
            }
            set
            {
                OnVersieChanging(value);
                ReportPropertyChanging("Versie");
                _Versie = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Versie");
                OnVersieChanged();
            }
        }
        private global::System.Byte[] _Versie;
        partial void OnVersieChanging(global::System.Byte[] value);
        partial void OnVersieChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsVoorOptIn
        {
            get
            {
                return _IsVoorOptIn;
            }
            set
            {
                OnIsVoorOptInChanging(value);
                ReportPropertyChanging("IsVoorOptIn");
                _IsVoorOptIn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsVoorOptIn");
                OnIsVoorOptInChanged();
            }
        }
        private global::System.Boolean _IsVoorOptIn;
        partial void OnIsVoorOptInChanging(global::System.Boolean value);
        partial void OnIsVoorOptInChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_CommunicatieVorm_GelieerdePersoon", "GelieerdePersoon")]
        public GelieerdePersoon GelieerdePersoon
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GelieerdePersoon>("ChiroGroepModel.FK_CommunicatieVorm_GelieerdePersoon", "GelieerdePersoon").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GelieerdePersoon>("ChiroGroepModel.FK_CommunicatieVorm_GelieerdePersoon", "GelieerdePersoon").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GelieerdePersoon> GelieerdePersoonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GelieerdePersoon>("ChiroGroepModel.FK_CommunicatieVorm_GelieerdePersoon", "GelieerdePersoon");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GelieerdePersoon>("ChiroGroepModel.FK_CommunicatieVorm_GelieerdePersoon", "GelieerdePersoon", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_CommunicatieVorm_CommunicatieType", "CommunicatieType")]
        public CommunicatieType CommunicatieType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CommunicatieType>("ChiroGroepModel.FK_CommunicatieVorm_CommunicatieType", "CommunicatieType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CommunicatieType>("ChiroGroepModel.FK_CommunicatieVorm_CommunicatieType", "CommunicatieType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CommunicatieType> CommunicatieTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CommunicatieType>("ChiroGroepModel.FK_CommunicatieVorm_CommunicatieType", "CommunicatieType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CommunicatieType>("ChiroGroepModel.FK_CommunicatieVorm_CommunicatieType", "CommunicatieType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChiroGroepModel", Name="Functie")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Functie : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Functie object.
        /// </summary>
        /// <param name="naam">Initial value of the Naam property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="minAantal">Initial value of the MinAantal property.</param>
        /// <param name="isNationaal">Initial value of the IsNationaal property.</param>
        /// <param name="lidTypeInt">Initial value of the LidTypeInt property.</param>
        /// <param name="niveauInt">Initial value of the NiveauInt property.</param>
        public static Functie CreateFunctie(global::System.String naam, global::System.String code, global::System.Int32 id, global::System.Int32 minAantal, global::System.Boolean isNationaal, global::System.Int32 lidTypeInt, global::System.Int32 niveauInt)
        {
            Functie functie = new Functie();
            functie.Naam = naam;
            functie.Code = code;
            functie.ID = id;
            functie.MinAantal = minAantal;
            functie.IsNationaal = isNationaal;
            functie.LidTypeInt = lidTypeInt;
            functie.NiveauInt = niveauInt;
            return functie;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Naam
        {
            get
            {
                return _Naam;
            }
            set
            {
                OnNaamChanging(value);
                ReportPropertyChanging("Naam");
                _Naam = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Naam");
                OnNaamChanged();
            }
        }
        private global::System.String _Naam;
        partial void OnNaamChanging(global::System.String value);
        partial void OnNaamChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Versie
        {
            get
            {
                return StructuralObject.GetValidValue(_Versie);
            }
            set
            {
                OnVersieChanging(value);
                ReportPropertyChanging("Versie");
                _Versie = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Versie");
                OnVersieChanged();
            }
        }
        private global::System.Byte[] _Versie;
        partial void OnVersieChanging(global::System.Byte[] value);
        partial void OnVersieChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MaxAantal
        {
            get
            {
                return _MaxAantal;
            }
            set
            {
                OnMaxAantalChanging(value);
                ReportPropertyChanging("MaxAantal");
                _MaxAantal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxAantal");
                OnMaxAantalChanged();
            }
        }
        private Nullable<global::System.Int32> _MaxAantal;
        partial void OnMaxAantalChanging(Nullable<global::System.Int32> value);
        partial void OnMaxAantalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MinAantal
        {
            get
            {
                return _MinAantal;
            }
            set
            {
                OnMinAantalChanging(value);
                ReportPropertyChanging("MinAantal");
                _MinAantal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MinAantal");
                OnMinAantalChanged();
            }
        }
        private global::System.Int32 _MinAantal;
        partial void OnMinAantalChanging(global::System.Int32 value);
        partial void OnMinAantalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WerkJaarVan
        {
            get
            {
                return _WerkJaarVan;
            }
            set
            {
                OnWerkJaarVanChanging(value);
                ReportPropertyChanging("WerkJaarVan");
                _WerkJaarVan = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WerkJaarVan");
                OnWerkJaarVanChanged();
            }
        }
        private Nullable<global::System.Int32> _WerkJaarVan;
        partial void OnWerkJaarVanChanging(Nullable<global::System.Int32> value);
        partial void OnWerkJaarVanChanged();
    
        /// <summary>
        /// Laatste werkjaar waarin deze functie geldig was
        /// </summary>
        /// <LongDescription>
        /// &apos;Werkjaar tot en met&apos; zou een betere naam zijn
        /// </LongDescription>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WerkJaarTot
        {
            get
            {
                return _WerkJaarTot;
            }
            set
            {
                OnWerkJaarTotChanging(value);
                ReportPropertyChanging("WerkJaarTot");
                _WerkJaarTot = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WerkJaarTot");
                OnWerkJaarTotChanged();
            }
        }
        private Nullable<global::System.Int32> _WerkJaarTot;
        partial void OnWerkJaarTotChanging(Nullable<global::System.Int32> value);
        partial void OnWerkJaarTotChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsNationaal
        {
            get
            {
                return _IsNationaal;
            }
            set
            {
                OnIsNationaalChanging(value);
                ReportPropertyChanging("IsNationaal");
                _IsNationaal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsNationaal");
                OnIsNationaalChanged();
            }
        }
        private global::System.Boolean _IsNationaal;
        partial void OnIsNationaalChanging(global::System.Boolean value);
        partial void OnIsNationaalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LidTypeInt
        {
            internal get
            {
                return _LidTypeInt;
            }
            set
            {
                OnLidTypeIntChanging(value);
                ReportPropertyChanging("LidTypeInt");
                _LidTypeInt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LidTypeInt");
                OnLidTypeIntChanged();
            }
        }
        private global::System.Int32 _LidTypeInt;
        partial void OnLidTypeIntChanging(global::System.Int32 value);
        partial void OnLidTypeIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NiveauInt
        {
            get
            {
                return _NiveauInt;
            }
            set
            {
                OnNiveauIntChanging(value);
                ReportPropertyChanging("NiveauInt");
                _NiveauInt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NiveauInt");
                OnNiveauIntChanged();
            }
        }
        private global::System.Int32 _NiveauInt;
        partial void OnNiveauIntChanging(global::System.Int32 value);
        partial void OnNiveauIntChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_Functie_Groep", "Groep")]
        public Groep Groep
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Groep>("ChiroGroepModel.FK_Functie_Groep", "Groep").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Groep>("ChiroGroepModel.FK_Functie_Groep", "Groep").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Groep> GroepReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Groep>("ChiroGroepModel.FK_Functie_Groep", "Groep");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Groep>("ChiroGroepModel.FK_Functie_Groep", "Groep", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "LidFunctie", "Lid")]
        public EntityCollection<Lid> Lid
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Lid>("ChiroGroepModel.LidFunctie", "Lid");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Lid>("ChiroGroepModel.LidFunctie", "Lid", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChiroGroepModel", Name="Gav")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Gav : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Gav object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="login">Initial value of the Login property.</param>
        public static Gav CreateGav(global::System.Int32 id, global::System.String login)
        {
            Gav gav = new Gav();
            gav.ID = id;
            gav.Login = login;
            return gav;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Login
        {
            get
            {
                return _Login;
            }
            set
            {
                OnLoginChanging(value);
                ReportPropertyChanging("Login");
                _Login = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Login");
                OnLoginChanged();
            }
        }
        private global::System.String _Login;
        partial void OnLoginChanging(global::System.String value);
        partial void OnLoginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Versie
        {
            get
            {
                return StructuralObject.GetValidValue(_Versie);
            }
            set
            {
                OnVersieChanging(value);
                ReportPropertyChanging("Versie");
                _Versie = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Versie");
                OnVersieChanged();
            }
        }
        private global::System.Byte[] _Versie;
        partial void OnVersieChanging(global::System.Byte[] value);
        partial void OnVersieChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_GebruikersRecht_Gav", "GebruikersRecht")]
        public EntityCollection<GebruikersRecht> GebruikersRecht
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GebruikersRecht>("ChiroGroepModel.FK_GebruikersRecht_Gav", "GebruikersRecht");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GebruikersRecht>("ChiroGroepModel.FK_GebruikersRecht_Gav", "GebruikersRecht", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChiroGroepModel", Name="GebruikersRecht")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GebruikersRecht : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GebruikersRecht object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static GebruikersRecht CreateGebruikersRecht(global::System.Int32 id)
        {
            GebruikersRecht gebruikersRecht = new GebruikersRecht();
            gebruikersRecht.ID = id;
            return gebruikersRecht;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> VervalDatum
        {
            get
            {
                return _VervalDatum;
            }
            set
            {
                OnVervalDatumChanging(value);
                ReportPropertyChanging("VervalDatum");
                _VervalDatum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VervalDatum");
                OnVervalDatumChanged();
            }
        }
        private Nullable<global::System.DateTime> _VervalDatum;
        partial void OnVervalDatumChanging(Nullable<global::System.DateTime> value);
        partial void OnVervalDatumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Versie
        {
            get
            {
                return StructuralObject.GetValidValue(_Versie);
            }
            set
            {
                OnVersieChanging(value);
                ReportPropertyChanging("Versie");
                _Versie = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Versie");
                OnVersieChanged();
            }
        }
        private global::System.Byte[] _Versie;
        partial void OnVersieChanging(global::System.Byte[] value);
        partial void OnVersieChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_GebruikersRecht_Gav", "Gav")]
        public Gav Gav
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gav>("ChiroGroepModel.FK_GebruikersRecht_Gav", "Gav").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gav>("ChiroGroepModel.FK_GebruikersRecht_Gav", "Gav").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Gav> GavReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gav>("ChiroGroepModel.FK_GebruikersRecht_Gav", "Gav");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Gav>("ChiroGroepModel.FK_GebruikersRecht_Gav", "Gav", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_GebruikersRecht_Groep", "Groep")]
        public Groep Groep
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Groep>("ChiroGroepModel.FK_GebruikersRecht_Groep", "Groep").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Groep>("ChiroGroepModel.FK_GebruikersRecht_Groep", "Groep").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Groep> GroepReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Groep>("ChiroGroepModel.FK_GebruikersRecht_Groep", "Groep");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Groep>("ChiroGroepModel.FK_GebruikersRecht_Groep", "Groep", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChiroGroepModel", Name="GelieerdePersoon")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GelieerdePersoon : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GelieerdePersoon object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="chiroLeefTijd">Initial value of the ChiroLeefTijd property.</param>
        public static GelieerdePersoon CreateGelieerdePersoon(global::System.Int32 id, global::System.Int32 chiroLeefTijd)
        {
            GelieerdePersoon gelieerdePersoon = new GelieerdePersoon();
            gelieerdePersoon.ID = id;
            gelieerdePersoon.ChiroLeefTijd = chiroLeefTijd;
            return gelieerdePersoon;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChiroLeefTijd
        {
            get
            {
                return _ChiroLeefTijd;
            }
            set
            {
                OnChiroLeefTijdChanging(value);
                ReportPropertyChanging("ChiroLeefTijd");
                _ChiroLeefTijd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChiroLeefTijd");
                OnChiroLeefTijdChanged();
            }
        }
        private global::System.Int32 _ChiroLeefTijd;
        partial void OnChiroLeefTijdChanging(global::System.Int32 value);
        partial void OnChiroLeefTijdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Versie
        {
            get
            {
                return StructuralObject.GetValidValue(_Versie);
            }
            set
            {
                OnVersieChanging(value);
                ReportPropertyChanging("Versie");
                _Versie = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Versie");
                OnVersieChanged();
            }
        }
        private global::System.Byte[] _Versie;
        partial void OnVersieChanging(global::System.Byte[] value);
        partial void OnVersieChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_GelieerdePersoon_Groep", "Groep")]
        public Groep Groep
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Groep>("ChiroGroepModel.FK_GelieerdePersoon_Groep", "Groep").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Groep>("ChiroGroepModel.FK_GelieerdePersoon_Groep", "Groep").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Groep> GroepReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Groep>("ChiroGroepModel.FK_GelieerdePersoon_Groep", "Groep");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Groep>("ChiroGroepModel.FK_GelieerdePersoon_Groep", "Groep", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_CommunicatieVorm_GelieerdePersoon", "CommunicatieVorm")]
        public EntityCollection<CommunicatieVorm> Communicatie
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CommunicatieVorm>("ChiroGroepModel.FK_CommunicatieVorm_GelieerdePersoon", "CommunicatieVorm");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CommunicatieVorm>("ChiroGroepModel.FK_CommunicatieVorm_GelieerdePersoon", "CommunicatieVorm", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_GelieerdePersoon_Persoon", "Persoon")]
        public Persoon Persoon
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Persoon>("ChiroGroepModel.FK_GelieerdePersoon_Persoon", "Persoon").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Persoon>("ChiroGroepModel.FK_GelieerdePersoon_Persoon", "Persoon").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Persoon> PersoonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Persoon>("ChiroGroepModel.FK_GelieerdePersoon_Persoon", "Persoon");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Persoon>("ChiroGroepModel.FK_GelieerdePersoon_Persoon", "Persoon", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_Lid_GelieerdePersoon", "Lid")]
        public EntityCollection<Lid> Lid
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Lid>("ChiroGroepModel.FK_Lid_GelieerdePersoon", "Lid");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Lid>("ChiroGroepModel.FK_Lid_GelieerdePersoon", "Lid", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "PersoonsCategorie", "Categorie")]
        public EntityCollection<Categorie> Categorie
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Categorie>("ChiroGroepModel.PersoonsCategorie", "Categorie");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Categorie>("ChiroGroepModel.PersoonsCategorie", "Categorie", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_GelieerdePersoon_PersoonsAdres", "PersoonsAdres")]
        public PersoonsAdres PersoonsAdres
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersoonsAdres>("ChiroGroepModel.FK_GelieerdePersoon_PersoonsAdres", "PersoonsAdres").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersoonsAdres>("ChiroGroepModel.FK_GelieerdePersoon_PersoonsAdres", "PersoonsAdres").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PersoonsAdres> PersoonsAdresReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersoonsAdres>("ChiroGroepModel.FK_GelieerdePersoon_PersoonsAdres", "PersoonsAdres");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PersoonsAdres>("ChiroGroepModel.FK_GelieerdePersoon_PersoonsAdres", "PersoonsAdres", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChiroGroepModel", Name="Groep")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(KaderGroep))]
    [KnownTypeAttribute(typeof(ChiroGroep))]
    public abstract partial class Groep : EntityObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Naam
        {
            get
            {
                return _Naam;
            }
            set
            {
                OnNaamChanging(value);
                ReportPropertyChanging("Naam");
                _Naam = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Naam");
                OnNaamChanged();
            }
        }
        private global::System.String _Naam;
        partial void OnNaamChanging(global::System.String value);
        partial void OnNaamChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OprichtingsJaar
        {
            get
            {
                return _OprichtingsJaar;
            }
            set
            {
                OnOprichtingsJaarChanging(value);
                ReportPropertyChanging("OprichtingsJaar");
                _OprichtingsJaar = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OprichtingsJaar");
                OnOprichtingsJaarChanged();
            }
        }
        private Nullable<global::System.Int32> _OprichtingsJaar;
        partial void OnOprichtingsJaarChanging(Nullable<global::System.Int32> value);
        partial void OnOprichtingsJaarChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WebSite
        {
            get
            {
                return _WebSite;
            }
            set
            {
                OnWebSiteChanging(value);
                ReportPropertyChanging("WebSite");
                _WebSite = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WebSite");
                OnWebSiteChanged();
            }
        }
        private global::System.String _WebSite;
        partial void OnWebSiteChanging(global::System.String value);
        partial void OnWebSiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Logo
        {
            get
            {
                return StructuralObject.GetValidValue(_Logo);
            }
            set
            {
                OnLogoChanging(value);
                ReportPropertyChanging("Logo");
                _Logo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Logo");
                OnLogoChanged();
            }
        }
        private global::System.Byte[] _Logo;
        partial void OnLogoChanging(global::System.Byte[] value);
        partial void OnLogoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Versie
        {
            get
            {
                return StructuralObject.GetValidValue(_Versie);
            }
            set
            {
                OnVersieChanging(value);
                ReportPropertyChanging("Versie");
                _Versie = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Versie");
                OnVersieChanged();
            }
        }
        private global::System.Byte[] _Versie;
        partial void OnVersieChanging(global::System.Byte[] value);
        partial void OnVersieChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_GelieerdePersoon_Groep", "GelieerdePersoon")]
        public EntityCollection<GelieerdePersoon> GelieerdePersoon
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GelieerdePersoon>("ChiroGroepModel.FK_GelieerdePersoon_Groep", "GelieerdePersoon");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GelieerdePersoon>("ChiroGroepModel.FK_GelieerdePersoon_Groep", "GelieerdePersoon", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_GroepsWerkjaar_Groep", "GroepsWerkJaar")]
        public EntityCollection<GroepsWerkJaar> GroepsWerkJaar
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroepsWerkJaar>("ChiroGroepModel.FK_GroepsWerkjaar_Groep", "GroepsWerkJaar");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroepsWerkJaar>("ChiroGroepModel.FK_GroepsWerkjaar_Groep", "GroepsWerkJaar", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_GebruikersRecht_Groep", "GebruikersRecht")]
        public EntityCollection<GebruikersRecht> GebruikersRecht
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GebruikersRecht>("ChiroGroepModel.FK_GebruikersRecht_Groep", "GebruikersRecht");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GebruikersRecht>("ChiroGroepModel.FK_GebruikersRecht_Groep", "GebruikersRecht", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_Categorie_Groep", "Categorie")]
        public EntityCollection<Categorie> Categorie
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Categorie>("ChiroGroepModel.FK_Categorie_Groep", "Categorie");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Categorie>("ChiroGroepModel.FK_Categorie_Groep", "Categorie", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_Functie_Groep", "Functie")]
        public EntityCollection<Functie> Functie
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Functie>("ChiroGroepModel.FK_Functie_Groep", "Functie");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Functie>("ChiroGroepModel.FK_Functie_Groep", "Functie", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChiroGroepModel", Name="GroepsWerkJaar")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GroepsWerkJaar : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GroepsWerkJaar object.
        /// </summary>
        /// <param name="werkJaar">Initial value of the WerkJaar property.</param>
        /// <param name="id">Initial value of the ID property.</param>
        public static GroepsWerkJaar CreateGroepsWerkJaar(global::System.Int32 werkJaar, global::System.Int32 id)
        {
            GroepsWerkJaar groepsWerkJaar = new GroepsWerkJaar();
            groepsWerkJaar.WerkJaar = werkJaar;
            groepsWerkJaar.ID = id;
            return groepsWerkJaar;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WerkJaar
        {
            get
            {
                return _WerkJaar;
            }
            set
            {
                OnWerkJaarChanging(value);
                ReportPropertyChanging("WerkJaar");
                _WerkJaar = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WerkJaar");
                OnWerkJaarChanged();
            }
        }
        private global::System.Int32 _WerkJaar;
        partial void OnWerkJaarChanging(global::System.Int32 value);
        partial void OnWerkJaarChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Versie
        {
            get
            {
                return StructuralObject.GetValidValue(_Versie);
            }
            set
            {
                OnVersieChanging(value);
                ReportPropertyChanging("Versie");
                _Versie = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Versie");
                OnVersieChanged();
            }
        }
        private global::System.Byte[] _Versie;
        partial void OnVersieChanging(global::System.Byte[] value);
        partial void OnVersieChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_GroepsWerkjaar_Groep", "Groep")]
        public Groep Groep
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Groep>("ChiroGroepModel.FK_GroepsWerkjaar_Groep", "Groep").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Groep>("ChiroGroepModel.FK_GroepsWerkjaar_Groep", "Groep").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Groep> GroepReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Groep>("ChiroGroepModel.FK_GroepsWerkjaar_Groep", "Groep");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Groep>("ChiroGroepModel.FK_GroepsWerkjaar_Groep", "Groep", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_Lid_GroepsWerkjaar", "Lid")]
        public EntityCollection<Lid> Lid
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Lid>("ChiroGroepModel.FK_Lid_GroepsWerkjaar", "Lid");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Lid>("ChiroGroepModel.FK_Lid_GroepsWerkjaar", "Lid", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_AfdelingsJaar_GroepsWerkjaar", "AfdelingsJaar")]
        public EntityCollection<AfdelingsJaar> AfdelingsJaar
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AfdelingsJaar>("ChiroGroepModel.FK_AfdelingsJaar_GroepsWerkjaar", "AfdelingsJaar");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AfdelingsJaar>("ChiroGroepModel.FK_AfdelingsJaar_GroepsWerkjaar", "AfdelingsJaar", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChiroGroepModel", Name="KaderGroep")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class KaderGroep : Groep
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new KaderGroep object.
        /// </summary>
        /// <param name="naam">Initial value of the Naam property.</param>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="niveauInt">Initial value of the NiveauInt property.</param>
        public static KaderGroep CreateKaderGroep(global::System.String naam, global::System.Int32 id, global::System.Int32 niveauInt)
        {
            KaderGroep kaderGroep = new KaderGroep();
            kaderGroep.Naam = naam;
            kaderGroep.ID = id;
            kaderGroep.NiveauInt = niveauInt;
            return kaderGroep;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NiveauInt
        {
            get
            {
                return _NiveauInt;
            }
            set
            {
                OnNiveauIntChanging(value);
                ReportPropertyChanging("NiveauInt");
                _NiveauInt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NiveauInt");
                OnNiveauIntChanged();
            }
        }
        private global::System.Int32 _NiveauInt;
        partial void OnNiveauIntChanging(global::System.Int32 value);
        partial void OnNiveauIntChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_ChiroGroep_KaderGroep", "ChiroGroep")]
        public EntityCollection<ChiroGroep> ChiroGroep
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChiroGroep>("ChiroGroepModel.FK_ChiroGroep_KaderGroep", "ChiroGroep");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChiroGroep>("ChiroGroepModel.FK_ChiroGroep_KaderGroep", "ChiroGroep", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_KaderGroep_KaderGroep", "KaderGroep1")]
        public EntityCollection<KaderGroep> Children
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<KaderGroep>("ChiroGroepModel.FK_KaderGroep_KaderGroep", "KaderGroep1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<KaderGroep>("ChiroGroepModel.FK_KaderGroep_KaderGroep", "KaderGroep1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_KaderGroep_KaderGroep", "KaderGroep")]
        public KaderGroep Parent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<KaderGroep>("ChiroGroepModel.FK_KaderGroep_KaderGroep", "KaderGroep").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<KaderGroep>("ChiroGroepModel.FK_KaderGroep_KaderGroep", "KaderGroep").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<KaderGroep> ParentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<KaderGroep>("ChiroGroepModel.FK_KaderGroep_KaderGroep", "KaderGroep");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<KaderGroep>("ChiroGroepModel.FK_KaderGroep_KaderGroep", "KaderGroep", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChiroGroepModel", Name="Kind")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Kind : Lid
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Kind object.
        /// </summary>
        /// <param name="nonActief">Initial value of the NonActief property.</param>
        /// <param name="verwijderd">Initial value of the Verwijderd property.</param>
        /// <param name="volgendWerkjaarInt">Initial value of the VolgendWerkjaarInt property.</param>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="isOvergezet">Initial value of the IsOvergezet property.</param>
        public static Kind CreateKind(global::System.Boolean nonActief, global::System.Boolean verwijderd, global::System.Int16 volgendWerkjaarInt, global::System.Int32 id, global::System.Boolean isOvergezet)
        {
            Kind kind = new Kind();
            kind.NonActief = nonActief;
            kind.Verwijderd = verwijderd;
            kind.VolgendWerkjaarInt = volgendWerkjaarInt;
            kind.ID = id;
            kind.IsOvergezet = isOvergezet;
            return kind;
        }

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_Kind_AfdelingsJaar", "AfdelingsJaar")]
        public AfdelingsJaar AfdelingsJaar
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AfdelingsJaar>("ChiroGroepModel.FK_Kind_AfdelingsJaar", "AfdelingsJaar").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AfdelingsJaar>("ChiroGroepModel.FK_Kind_AfdelingsJaar", "AfdelingsJaar").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AfdelingsJaar> AfdelingsJaarReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AfdelingsJaar>("ChiroGroepModel.FK_Kind_AfdelingsJaar", "AfdelingsJaar");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AfdelingsJaar>("ChiroGroepModel.FK_Kind_AfdelingsJaar", "AfdelingsJaar", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChiroGroepModel", Name="Land")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Land : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Land object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="naam">Initial value of the Naam property.</param>
        public static Land CreateLand(global::System.Int32 id, global::System.String naam)
        {
            Land land = new Land();
            land.ID = id;
            land.Naam = naam;
            return land;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Naam
        {
            get
            {
                return _Naam;
            }
            set
            {
                OnNaamChanging(value);
                ReportPropertyChanging("Naam");
                _Naam = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Naam");
                OnNaamChanged();
            }
        }
        private global::System.String _Naam;
        partial void OnNaamChanging(global::System.String value);
        partial void OnNaamChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_BuitenlandsAdres_Land", "BuitenLandsAdres")]
        public EntityCollection<BuitenLandsAdres> BuitenLandsAdres
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BuitenLandsAdres>("ChiroGroepModel.FK_BuitenlandsAdres_Land", "BuitenLandsAdres");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BuitenLandsAdres>("ChiroGroepModel.FK_BuitenlandsAdres_Land", "BuitenLandsAdres", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChiroGroepModel", Name="Leiding")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Leiding : Lid
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Leiding object.
        /// </summary>
        /// <param name="nonActief">Initial value of the NonActief property.</param>
        /// <param name="verwijderd">Initial value of the Verwijderd property.</param>
        /// <param name="volgendWerkjaarInt">Initial value of the VolgendWerkjaarInt property.</param>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="isOvergezet">Initial value of the IsOvergezet property.</param>
        public static Leiding CreateLeiding(global::System.Boolean nonActief, global::System.Boolean verwijderd, global::System.Int16 volgendWerkjaarInt, global::System.Int32 id, global::System.Boolean isOvergezet)
        {
            Leiding leiding = new Leiding();
            leiding.NonActief = nonActief;
            leiding.Verwijderd = verwijderd;
            leiding.VolgendWerkjaarInt = volgendWerkjaarInt;
            leiding.ID = id;
            leiding.IsOvergezet = isOvergezet;
            return leiding;
        }

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "LeidingInAfdelingsJaar", "AfdelingsJaar")]
        public EntityCollection<AfdelingsJaar> AfdelingsJaar
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AfdelingsJaar>("ChiroGroepModel.LeidingInAfdelingsJaar", "AfdelingsJaar");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AfdelingsJaar>("ChiroGroepModel.LeidingInAfdelingsJaar", "AfdelingsJaar", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChiroGroepModel", Name="Lid")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(Leiding))]
    [KnownTypeAttribute(typeof(Kind))]
    public partial class Lid : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Lid object.
        /// </summary>
        /// <param name="nonActief">Initial value of the NonActief property.</param>
        /// <param name="verwijderd">Initial value of the Verwijderd property.</param>
        /// <param name="volgendWerkjaarInt">Initial value of the VolgendWerkjaarInt property.</param>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="isOvergezet">Initial value of the IsOvergezet property.</param>
        public static Lid CreateLid(global::System.Boolean nonActief, global::System.Boolean verwijderd, global::System.Int16 volgendWerkjaarInt, global::System.Int32 id, global::System.Boolean isOvergezet)
        {
            Lid lid = new Lid();
            lid.NonActief = nonActief;
            lid.Verwijderd = verwijderd;
            lid.VolgendWerkjaarInt = volgendWerkjaarInt;
            lid.ID = id;
            lid.IsOvergezet = isOvergezet;
            return lid;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> LidgeldBetaald
        {
            get
            {
                return _LidgeldBetaald;
            }
            set
            {
                OnLidgeldBetaaldChanging(value);
                ReportPropertyChanging("LidgeldBetaald");
                _LidgeldBetaald = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LidgeldBetaald");
                OnLidgeldBetaaldChanged();
            }
        }
        private Nullable<global::System.Boolean> _LidgeldBetaald;
        partial void OnLidgeldBetaaldChanging(Nullable<global::System.Boolean> value);
        partial void OnLidgeldBetaaldChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean NonActief
        {
            get
            {
                return _NonActief;
            }
            set
            {
                OnNonActiefChanging(value);
                ReportPropertyChanging("NonActief");
                _NonActief = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NonActief");
                OnNonActiefChanged();
            }
        }
        private global::System.Boolean _NonActief;
        partial void OnNonActiefChanging(global::System.Boolean value);
        partial void OnNonActiefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Verwijderd
        {
            get
            {
                return _Verwijderd;
            }
            set
            {
                OnVerwijderdChanging(value);
                ReportPropertyChanging("Verwijderd");
                _Verwijderd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Verwijderd");
                OnVerwijderdChanged();
            }
        }
        private global::System.Boolean _Verwijderd;
        partial void OnVerwijderdChanging(global::System.Boolean value);
        partial void OnVerwijderdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 VolgendWerkjaarInt
        {
            get
            {
                return _VolgendWerkjaarInt;
            }
            set
            {
                OnVolgendWerkjaarIntChanging(value);
                ReportPropertyChanging("VolgendWerkjaarInt");
                _VolgendWerkjaarInt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VolgendWerkjaarInt");
                OnVolgendWerkjaarIntChanged();
            }
        }
        private global::System.Int16 _VolgendWerkjaarInt;
        partial void OnVolgendWerkjaarIntChanging(global::System.Int16 value);
        partial void OnVolgendWerkjaarIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Versie
        {
            get
            {
                return StructuralObject.GetValidValue(_Versie);
            }
            set
            {
                OnVersieChanging(value);
                ReportPropertyChanging("Versie");
                _Versie = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Versie");
                OnVersieChanged();
            }
        }
        private global::System.Byte[] _Versie;
        partial void OnVersieChanging(global::System.Byte[] value);
        partial void OnVersieChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EindeInstapPeriode
        {
            get
            {
                return _EindeInstapPeriode;
            }
            set
            {
                OnEindeInstapPeriodeChanging(value);
                ReportPropertyChanging("EindeInstapPeriode");
                _EindeInstapPeriode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EindeInstapPeriode");
                OnEindeInstapPeriodeChanged();
            }
        }
        private Nullable<global::System.DateTime> _EindeInstapPeriode;
        partial void OnEindeInstapPeriodeChanging(Nullable<global::System.DateTime> value);
        partial void OnEindeInstapPeriodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsOvergezet
        {
            get
            {
                return _IsOvergezet;
            }
            set
            {
                OnIsOvergezetChanging(value);
                ReportPropertyChanging("IsOvergezet");
                _IsOvergezet = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsOvergezet");
                OnIsOvergezetChanged();
            }
        }
        private global::System.Boolean _IsOvergezet;
        partial void OnIsOvergezetChanging(global::System.Boolean value);
        partial void OnIsOvergezetChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_Lid_GroepsWerkjaar", "GroepsWerkJaar")]
        public GroepsWerkJaar GroepsWerkJaar
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroepsWerkJaar>("ChiroGroepModel.FK_Lid_GroepsWerkjaar", "GroepsWerkJaar").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroepsWerkJaar>("ChiroGroepModel.FK_Lid_GroepsWerkjaar", "GroepsWerkJaar").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GroepsWerkJaar> GroepsWerkJaarReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroepsWerkJaar>("ChiroGroepModel.FK_Lid_GroepsWerkjaar", "GroepsWerkJaar");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GroepsWerkJaar>("ChiroGroepModel.FK_Lid_GroepsWerkjaar", "GroepsWerkJaar", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_Lid_GelieerdePersoon", "GelieerdePersoon")]
        public GelieerdePersoon GelieerdePersoon
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GelieerdePersoon>("ChiroGroepModel.FK_Lid_GelieerdePersoon", "GelieerdePersoon").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GelieerdePersoon>("ChiroGroepModel.FK_Lid_GelieerdePersoon", "GelieerdePersoon").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GelieerdePersoon> GelieerdePersoonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GelieerdePersoon>("ChiroGroepModel.FK_Lid_GelieerdePersoon", "GelieerdePersoon");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GelieerdePersoon>("ChiroGroepModel.FK_Lid_GelieerdePersoon", "GelieerdePersoon", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "LidFunctie", "Functie")]
        public EntityCollection<Functie> Functie
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Functie>("ChiroGroepModel.LidFunctie", "Functie");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Functie>("ChiroGroepModel.LidFunctie", "Functie", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChiroGroepModel", Name="OfficieleAfdeling")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OfficieleAfdeling : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OfficieleAfdeling object.
        /// </summary>
        /// <param name="naam">Initial value of the Naam property.</param>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="leefTijdVan">Initial value of the LeefTijdVan property.</param>
        /// <param name="leefTijdTot">Initial value of the LeefTijdTot property.</param>
        public static OfficieleAfdeling CreateOfficieleAfdeling(global::System.String naam, global::System.Int32 id, global::System.Int32 leefTijdVan, global::System.Int32 leefTijdTot)
        {
            OfficieleAfdeling officieleAfdeling = new OfficieleAfdeling();
            officieleAfdeling.Naam = naam;
            officieleAfdeling.ID = id;
            officieleAfdeling.LeefTijdVan = leefTijdVan;
            officieleAfdeling.LeefTijdTot = leefTijdTot;
            return officieleAfdeling;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Naam
        {
            get
            {
                return _Naam;
            }
            set
            {
                OnNaamChanging(value);
                ReportPropertyChanging("Naam");
                _Naam = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Naam");
                OnNaamChanged();
            }
        }
        private global::System.String _Naam;
        partial void OnNaamChanging(global::System.String value);
        partial void OnNaamChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Versie
        {
            get
            {
                return StructuralObject.GetValidValue(_Versie);
            }
            set
            {
                OnVersieChanging(value);
                ReportPropertyChanging("Versie");
                _Versie = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Versie");
                OnVersieChanged();
            }
        }
        private global::System.Byte[] _Versie;
        partial void OnVersieChanging(global::System.Byte[] value);
        partial void OnVersieChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeefTijdVan
        {
            get
            {
                return _LeefTijdVan;
            }
            set
            {
                OnLeefTijdVanChanging(value);
                ReportPropertyChanging("LeefTijdVan");
                _LeefTijdVan = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LeefTijdVan");
                OnLeefTijdVanChanged();
            }
        }
        private global::System.Int32 _LeefTijdVan;
        partial void OnLeefTijdVanChanging(global::System.Int32 value);
        partial void OnLeefTijdVanChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeefTijdTot
        {
            get
            {
                return _LeefTijdTot;
            }
            set
            {
                OnLeefTijdTotChanging(value);
                ReportPropertyChanging("LeefTijdTot");
                _LeefTijdTot = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LeefTijdTot");
                OnLeefTijdTotChanged();
            }
        }
        private global::System.Int32 _LeefTijdTot;
        partial void OnLeefTijdTotChanging(global::System.Int32 value);
        partial void OnLeefTijdTotChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_AfdelingsJaar_OfficieleAfdeling", "AfdelingsJaar")]
        public EntityCollection<AfdelingsJaar> AfdelingsJaar
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AfdelingsJaar>("ChiroGroepModel.FK_AfdelingsJaar_OfficieleAfdeling", "AfdelingsJaar");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AfdelingsJaar>("ChiroGroepModel.FK_AfdelingsJaar_OfficieleAfdeling", "AfdelingsJaar", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChiroGroepModel", Name="Persoon")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Persoon : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Persoon object.
        /// </summary>
        /// <param name="naam">Initial value of the Naam property.</param>
        /// <param name="voorNaam">Initial value of the VoorNaam property.</param>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="dubbelPuntAbonnement">Initial value of the DubbelPuntAbonnement property.</param>
        /// <param name="adInAanvraag">Initial value of the AdInAanvraag property.</param>
        public static Persoon CreatePersoon(global::System.String naam, global::System.String voorNaam, global::System.Int32 id, global::System.Boolean dubbelPuntAbonnement, global::System.Boolean adInAanvraag)
        {
            Persoon persoon = new Persoon();
            persoon.Naam = naam;
            persoon.VoorNaam = voorNaam;
            persoon.ID = id;
            persoon.DubbelPuntAbonnement = dubbelPuntAbonnement;
            persoon.AdInAanvraag = adInAanvraag;
            return persoon;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AdNummer
        {
            get
            {
                return _AdNummer;
            }
            set
            {
                OnAdNummerChanging(value);
                ReportPropertyChanging("AdNummer");
                _AdNummer = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdNummer");
                OnAdNummerChanged();
            }
        }
        private Nullable<global::System.Int32> _AdNummer;
        partial void OnAdNummerChanging(Nullable<global::System.Int32> value);
        partial void OnAdNummerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Naam
        {
            get
            {
                return _Naam;
            }
            set
            {
                OnNaamChanging(value);
                ReportPropertyChanging("Naam");
                _Naam = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Naam");
                OnNaamChanged();
            }
        }
        private global::System.String _Naam;
        partial void OnNaamChanging(global::System.String value);
        partial void OnNaamChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VoorNaam
        {
            get
            {
                return _VoorNaam;
            }
            set
            {
                OnVoorNaamChanging(value);
                ReportPropertyChanging("VoorNaam");
                _VoorNaam = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("VoorNaam");
                OnVoorNaamChanged();
            }
        }
        private global::System.String _VoorNaam;
        partial void OnVoorNaamChanging(global::System.String value);
        partial void OnVoorNaamChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> GeboorteDatum
        {
            get
            {
                return _GeboorteDatum;
            }
            set
            {
                OnGeboorteDatumChanging(value);
                ReportPropertyChanging("GeboorteDatum");
                _GeboorteDatum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GeboorteDatum");
                OnGeboorteDatumChanged();
            }
        }
        private Nullable<global::System.DateTime> _GeboorteDatum;
        partial void OnGeboorteDatumChanging(Nullable<global::System.DateTime> value);
        partial void OnGeboorteDatumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        internal global::System.Int32 GeslachtsInt
        {
            get
            {
                return _GeslachtsInt;
            }
            set
            {
                OnGeslachtsIntChanging(value);
                ReportPropertyChanging("GeslachtsInt");
                _GeslachtsInt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GeslachtsInt");
                OnGeslachtsIntChanged();
            }
        }
        private global::System.Int32 _GeslachtsInt;
        partial void OnGeslachtsIntChanging(global::System.Int32 value);
        partial void OnGeslachtsIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> SterfDatum
        {
            get
            {
                return _SterfDatum;
            }
            set
            {
                OnSterfDatumChanging(value);
                ReportPropertyChanging("SterfDatum");
                _SterfDatum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SterfDatum");
                OnSterfDatumChanged();
            }
        }
        private Nullable<global::System.DateTime> _SterfDatum;
        partial void OnSterfDatumChanging(Nullable<global::System.DateTime> value);
        partial void OnSterfDatumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Versie
        {
            get
            {
                return StructuralObject.GetValidValue(_Versie);
            }
            set
            {
                OnVersieChanging(value);
                ReportPropertyChanging("Versie");
                _Versie = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Versie");
                OnVersieChanged();
            }
        }
        private global::System.Byte[] _Versie;
        partial void OnVersieChanging(global::System.Byte[] value);
        partial void OnVersieChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean DubbelPuntAbonnement
        {
            get
            {
                return _DubbelPuntAbonnement;
            }
            set
            {
                OnDubbelPuntAbonnementChanging(value);
                ReportPropertyChanging("DubbelPuntAbonnement");
                _DubbelPuntAbonnement = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DubbelPuntAbonnement");
                OnDubbelPuntAbonnementChanged();
            }
        }
        private global::System.Boolean _DubbelPuntAbonnement;
        partial void OnDubbelPuntAbonnementChanging(global::System.Boolean value);
        partial void OnDubbelPuntAbonnementChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AdInAanvraag
        {
            get
            {
                return _AdInAanvraag;
            }
            set
            {
                OnAdInAanvraagChanging(value);
                ReportPropertyChanging("AdInAanvraag");
                _AdInAanvraag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdInAanvraag");
                OnAdInAanvraagChanged();
            }
        }
        private global::System.Boolean _AdInAanvraag;
        partial void OnAdInAanvraagChanging(global::System.Boolean value);
        partial void OnAdInAanvraagChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_GelieerdePersoon_Persoon", "GelieerdePersoon")]
        public EntityCollection<GelieerdePersoon> GelieerdePersoon
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GelieerdePersoon>("ChiroGroepModel.FK_GelieerdePersoon_Persoon", "GelieerdePersoon");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GelieerdePersoon>("ChiroGroepModel.FK_GelieerdePersoon_Persoon", "GelieerdePersoon", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_PersoonsAdres_Persoon", "PersoonsAdres")]
        public EntityCollection<PersoonsAdres> PersoonsAdres
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersoonsAdres>("ChiroGroepModel.FK_PersoonsAdres_Persoon", "PersoonsAdres");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersoonsAdres>("ChiroGroepModel.FK_PersoonsAdres_Persoon", "PersoonsAdres", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_PersoonsVerzekering_Persoon", "PersoonsVerzekering")]
        public EntityCollection<PersoonsVerzekering> PersoonsVerzekering
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersoonsVerzekering>("ChiroGroepModel.FK_PersoonsVerzekering_Persoon", "PersoonsVerzekering");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersoonsVerzekering>("ChiroGroepModel.FK_PersoonsVerzekering_Persoon", "PersoonsVerzekering", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChiroGroepModel", Name="PersoonsAdres")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PersoonsAdres : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PersoonsAdres object.
        /// </summary>
        /// <param name="adresTypeInt">Initial value of the AdresTypeInt property.</param>
        /// <param name="id">Initial value of the ID property.</param>
        public static PersoonsAdres CreatePersoonsAdres(global::System.Int32 adresTypeInt, global::System.Int32 id)
        {
            PersoonsAdres persoonsAdres = new PersoonsAdres();
            persoonsAdres.AdresTypeInt = adresTypeInt;
            persoonsAdres.ID = id;
            return persoonsAdres;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Opmerking
        {
            get
            {
                return _Opmerking;
            }
            set
            {
                OnOpmerkingChanging(value);
                ReportPropertyChanging("Opmerking");
                _Opmerking = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Opmerking");
                OnOpmerkingChanged();
            }
        }
        private global::System.String _Opmerking;
        partial void OnOpmerkingChanging(global::System.String value);
        partial void OnOpmerkingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AdresTypeInt
        {
            get
            {
                return _AdresTypeInt;
            }
            set
            {
                OnAdresTypeIntChanging(value);
                ReportPropertyChanging("AdresTypeInt");
                _AdresTypeInt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdresTypeInt");
                OnAdresTypeIntChanged();
            }
        }
        private global::System.Int32 _AdresTypeInt;
        partial void OnAdresTypeIntChanging(global::System.Int32 value);
        partial void OnAdresTypeIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Versie
        {
            get
            {
                return StructuralObject.GetValidValue(_Versie);
            }
            set
            {
                OnVersieChanging(value);
                ReportPropertyChanging("Versie");
                _Versie = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Versie");
                OnVersieChanged();
            }
        }
        private global::System.Byte[] _Versie;
        partial void OnVersieChanging(global::System.Byte[] value);
        partial void OnVersieChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_PersoonsAdres_Adres", "Adres")]
        public Adres Adres
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Adres>("ChiroGroepModel.FK_PersoonsAdres_Adres", "Adres").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Adres>("ChiroGroepModel.FK_PersoonsAdres_Adres", "Adres").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Adres> AdresReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Adres>("ChiroGroepModel.FK_PersoonsAdres_Adres", "Adres");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Adres>("ChiroGroepModel.FK_PersoonsAdres_Adres", "Adres", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_PersoonsAdres_Persoon", "Persoon")]
        public Persoon Persoon
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Persoon>("ChiroGroepModel.FK_PersoonsAdres_Persoon", "Persoon").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Persoon>("ChiroGroepModel.FK_PersoonsAdres_Persoon", "Persoon").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Persoon> PersoonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Persoon>("ChiroGroepModel.FK_PersoonsAdres_Persoon", "Persoon");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Persoon>("ChiroGroepModel.FK_PersoonsAdres_Persoon", "Persoon", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_GelieerdePersoon_PersoonsAdres", "GelieerdePersoon")]
        public EntityCollection<GelieerdePersoon> GelieerdePersoon
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GelieerdePersoon>("ChiroGroepModel.FK_GelieerdePersoon_PersoonsAdres", "GelieerdePersoon");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GelieerdePersoon>("ChiroGroepModel.FK_GelieerdePersoon_PersoonsAdres", "GelieerdePersoon", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChiroGroepModel", Name="PersoonsVerzekering")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PersoonsVerzekering : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PersoonsVerzekering object.
        /// </summary>
        /// <param name="van">Initial value of the Van property.</param>
        /// <param name="tot">Initial value of the Tot property.</param>
        /// <param name="id">Initial value of the ID property.</param>
        public static PersoonsVerzekering CreatePersoonsVerzekering(global::System.DateTime van, global::System.DateTime tot, global::System.Int32 id)
        {
            PersoonsVerzekering persoonsVerzekering = new PersoonsVerzekering();
            persoonsVerzekering.Van = van;
            persoonsVerzekering.Tot = tot;
            persoonsVerzekering.ID = id;
            return persoonsVerzekering;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Van
        {
            get
            {
                return _Van;
            }
            set
            {
                OnVanChanging(value);
                ReportPropertyChanging("Van");
                _Van = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Van");
                OnVanChanged();
            }
        }
        private global::System.DateTime _Van;
        partial void OnVanChanging(global::System.DateTime value);
        partial void OnVanChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Tot
        {
            get
            {
                return _Tot;
            }
            set
            {
                OnTotChanging(value);
                ReportPropertyChanging("Tot");
                _Tot = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Tot");
                OnTotChanged();
            }
        }
        private global::System.DateTime _Tot;
        partial void OnTotChanging(global::System.DateTime value);
        partial void OnTotChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Versie
        {
            get
            {
                return StructuralObject.GetValidValue(_Versie);
            }
            set
            {
                OnVersieChanging(value);
                ReportPropertyChanging("Versie");
                _Versie = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Versie");
                OnVersieChanged();
            }
        }
        private global::System.Byte[] _Versie;
        partial void OnVersieChanging(global::System.Byte[] value);
        partial void OnVersieChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_PersoonsVerzekering_Persoon", "Persoon")]
        public Persoon Persoon
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Persoon>("ChiroGroepModel.FK_PersoonsVerzekering_Persoon", "Persoon").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Persoon>("ChiroGroepModel.FK_PersoonsVerzekering_Persoon", "Persoon").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Persoon> PersoonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Persoon>("ChiroGroepModel.FK_PersoonsVerzekering_Persoon", "Persoon");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Persoon>("ChiroGroepModel.FK_PersoonsVerzekering_Persoon", "Persoon", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_PersoonsVerzekering_VerzekeringsType", "VerzekeringsType")]
        public VerzekeringsType VerzekeringsType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VerzekeringsType>("ChiroGroepModel.FK_PersoonsVerzekering_VerzekeringsType", "VerzekeringsType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VerzekeringsType>("ChiroGroepModel.FK_PersoonsVerzekering_VerzekeringsType", "VerzekeringsType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VerzekeringsType> VerzekeringsTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VerzekeringsType>("ChiroGroepModel.FK_PersoonsVerzekering_VerzekeringsType", "VerzekeringsType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<VerzekeringsType>("ChiroGroepModel.FK_PersoonsVerzekering_VerzekeringsType", "VerzekeringsType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChiroGroepModel", Name="StraatNaam")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StraatNaam : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StraatNaam object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="postNummer">Initial value of the PostNummer property.</param>
        /// <param name="naam">Initial value of the Naam property.</param>
        /// <param name="taalID">Initial value of the TaalID property.</param>
        /// <param name="versie">Initial value of the Versie property.</param>
        public static StraatNaam CreateStraatNaam(global::System.Int32 id, global::System.Int32 postNummer, global::System.String naam, global::System.Int32 taalID, global::System.Byte[] versie)
        {
            StraatNaam straatNaam = new StraatNaam();
            straatNaam.ID = id;
            straatNaam.PostNummer = postNummer;
            straatNaam.Naam = naam;
            straatNaam.TaalID = taalID;
            straatNaam.Versie = versie;
            return straatNaam;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PostNummer
        {
            get
            {
                return _PostNummer;
            }
            set
            {
                OnPostNummerChanging(value);
                ReportPropertyChanging("PostNummer");
                _PostNummer = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostNummer");
                OnPostNummerChanged();
            }
        }
        private global::System.Int32 _PostNummer;
        partial void OnPostNummerChanging(global::System.Int32 value);
        partial void OnPostNummerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Naam
        {
            get
            {
                return _Naam;
            }
            set
            {
                OnNaamChanging(value);
                ReportPropertyChanging("Naam");
                _Naam = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Naam");
                OnNaamChanged();
            }
        }
        private global::System.String _Naam;
        partial void OnNaamChanging(global::System.String value);
        partial void OnNaamChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaalID
        {
            get
            {
                return _TaalID;
            }
            set
            {
                OnTaalIDChanging(value);
                ReportPropertyChanging("TaalID");
                _TaalID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaalID");
                OnTaalIDChanged();
            }
        }
        private global::System.Int32 _TaalID;
        partial void OnTaalIDChanging(global::System.Int32 value);
        partial void OnTaalIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CrabSubstraatID
        {
            get
            {
                return _CrabSubstraatID;
            }
            set
            {
                OnCrabSubstraatIDChanging(value);
                ReportPropertyChanging("CrabSubstraatID");
                _CrabSubstraatID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CrabSubstraatID");
                OnCrabSubstraatIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CrabSubstraatID;
        partial void OnCrabSubstraatIDChanging(Nullable<global::System.Int32> value);
        partial void OnCrabSubstraatIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Versie
        {
            get
            {
                return StructuralObject.GetValidValue(_Versie);
            }
            set
            {
                OnVersieChanging(value);
                ReportPropertyChanging("Versie");
                _Versie = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Versie");
                OnVersieChanged();
            }
        }
        private global::System.Byte[] _Versie;
        partial void OnVersieChanging(global::System.Byte[] value);
        partial void OnVersieChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_BelgischAdres_StraatNaam", "BelgischAdres")]
        public EntityCollection<BelgischAdres> BelgischAdres
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BelgischAdres>("ChiroGroepModel.FK_BelgischAdres_StraatNaam", "BelgischAdres");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BelgischAdres>("ChiroGroepModel.FK_BelgischAdres_StraatNaam", "BelgischAdres", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChiroGroepModel", Name="VerzekeringsType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VerzekeringsType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VerzekeringsType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="naam">Initial value of the Naam property.</param>
        /// <param name="enkelLeden">Initial value of the EnkelLeden property.</param>
        /// <param name="totEindeWerkJaar">Initial value of the TotEindeWerkJaar property.</param>
        public static VerzekeringsType CreateVerzekeringsType(global::System.Int32 id, global::System.String code, global::System.String naam, global::System.Boolean enkelLeden, global::System.Boolean totEindeWerkJaar)
        {
            VerzekeringsType verzekeringsType = new VerzekeringsType();
            verzekeringsType.ID = id;
            verzekeringsType.Code = code;
            verzekeringsType.Naam = naam;
            verzekeringsType.EnkelLeden = enkelLeden;
            verzekeringsType.TotEindeWerkJaar = totEindeWerkJaar;
            return verzekeringsType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Naam
        {
            get
            {
                return _Naam;
            }
            set
            {
                OnNaamChanging(value);
                ReportPropertyChanging("Naam");
                _Naam = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Naam");
                OnNaamChanged();
            }
        }
        private global::System.String _Naam;
        partial void OnNaamChanging(global::System.String value);
        partial void OnNaamChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Omschrijving
        {
            get
            {
                return _Omschrijving;
            }
            set
            {
                OnOmschrijvingChanging(value);
                ReportPropertyChanging("Omschrijving");
                _Omschrijving = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Omschrijving");
                OnOmschrijvingChanged();
            }
        }
        private global::System.String _Omschrijving;
        partial void OnOmschrijvingChanging(global::System.String value);
        partial void OnOmschrijvingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean EnkelLeden
        {
            get
            {
                return _EnkelLeden;
            }
            set
            {
                OnEnkelLedenChanging(value);
                ReportPropertyChanging("EnkelLeden");
                _EnkelLeden = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EnkelLeden");
                OnEnkelLedenChanged();
            }
        }
        private global::System.Boolean _EnkelLeden;
        partial void OnEnkelLedenChanging(global::System.Boolean value);
        partial void OnEnkelLedenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean TotEindeWerkJaar
        {
            get
            {
                return _TotEindeWerkJaar;
            }
            set
            {
                OnTotEindeWerkJaarChanging(value);
                ReportPropertyChanging("TotEindeWerkJaar");
                _TotEindeWerkJaar = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotEindeWerkJaar");
                OnTotEindeWerkJaarChanged();
            }
        }
        private global::System.Boolean _TotEindeWerkJaar;
        partial void OnTotEindeWerkJaarChanging(global::System.Boolean value);
        partial void OnTotEindeWerkJaarChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_PersoonsVerzekering_VerzekeringsType", "PersoonsVerzekering")]
        public EntityCollection<PersoonsVerzekering> PersoonsVerzekering
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersoonsVerzekering>("ChiroGroepModel.FK_PersoonsVerzekering_VerzekeringsType", "PersoonsVerzekering");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersoonsVerzekering>("ChiroGroepModel.FK_PersoonsVerzekering_VerzekeringsType", "PersoonsVerzekering", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ChiroGroepModel", Name="WoonPlaats")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WoonPlaats : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WoonPlaats object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="postNummer">Initial value of the PostNummer property.</param>
        /// <param name="naam">Initial value of the Naam property.</param>
        /// <param name="taalID">Initial value of the TaalID property.</param>
        /// <param name="versie">Initial value of the Versie property.</param>
        public static WoonPlaats CreateWoonPlaats(global::System.Int32 id, global::System.Int32 postNummer, global::System.String naam, global::System.Int32 taalID, global::System.Byte[] versie)
        {
            WoonPlaats woonPlaats = new WoonPlaats();
            woonPlaats.ID = id;
            woonPlaats.PostNummer = postNummer;
            woonPlaats.Naam = naam;
            woonPlaats.TaalID = taalID;
            woonPlaats.Versie = versie;
            return woonPlaats;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PostNummer
        {
            get
            {
                return _PostNummer;
            }
            set
            {
                OnPostNummerChanging(value);
                ReportPropertyChanging("PostNummer");
                _PostNummer = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostNummer");
                OnPostNummerChanged();
            }
        }
        private global::System.Int32 _PostNummer;
        partial void OnPostNummerChanging(global::System.Int32 value);
        partial void OnPostNummerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Naam
        {
            get
            {
                return _Naam;
            }
            set
            {
                OnNaamChanging(value);
                ReportPropertyChanging("Naam");
                _Naam = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Naam");
                OnNaamChanged();
            }
        }
        private global::System.String _Naam;
        partial void OnNaamChanging(global::System.String value);
        partial void OnNaamChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaalID
        {
            get
            {
                return _TaalID;
            }
            set
            {
                OnTaalIDChanging(value);
                ReportPropertyChanging("TaalID");
                _TaalID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaalID");
                OnTaalIDChanged();
            }
        }
        private global::System.Int32 _TaalID;
        partial void OnTaalIDChanging(global::System.Int32 value);
        partial void OnTaalIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CrabPostKantonID
        {
            get
            {
                return _CrabPostKantonID;
            }
            set
            {
                OnCrabPostKantonIDChanging(value);
                ReportPropertyChanging("CrabPostKantonID");
                _CrabPostKantonID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CrabPostKantonID");
                OnCrabPostKantonIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CrabPostKantonID;
        partial void OnCrabPostKantonIDChanging(Nullable<global::System.Int32> value);
        partial void OnCrabPostKantonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Versie
        {
            get
            {
                return StructuralObject.GetValidValue(_Versie);
            }
            set
            {
                OnVersieChanging(value);
                ReportPropertyChanging("Versie");
                _Versie = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Versie");
                OnVersieChanged();
            }
        }
        private global::System.Byte[] _Versie;
        partial void OnVersieChanging(global::System.Byte[] value);
        partial void OnVersieChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ChiroGroepModel", "FK_BelgischAdres_WoonPlaats", "BelgischAdres")]
        public EntityCollection<BelgischAdres> BelgischAdres
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BelgischAdres>("ChiroGroepModel.FK_BelgischAdres_WoonPlaats", "BelgischAdres");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BelgischAdres>("ChiroGroepModel.FK_BelgischAdres_WoonPlaats", "BelgischAdres", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
