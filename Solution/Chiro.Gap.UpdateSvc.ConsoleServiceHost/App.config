<?xml version="1.0"?>
<configuration>
  
  <configSections>
    <section name="serviceHelper" type="Chiro.Adf.Configuration.AdfConfigurationSection, Chiro.Adf"/>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration"/>
  </configSections>

  <serviceHelper>
    <serviceProviders>
      <!-- gebruik onderstaande om de service interfaces te resolven als WCF-service -->
      <!--<add name="wcf" type="Chiro.Adf.ChannelFactoryServiceProvider, Chiro.Adf"/>-->
      <!-- of onderstaande om IOC te gebruiken -->
      <add name="ioc" type="Chiro.Adf.IocServiceProvider, Chiro.Adf" />

      <!-- TODO: Kijken of het niet mogelijk is om bijv. kipsync wel via een service call
           te doen, en het aanvragen van logins niet -->
    </serviceProviders>
  </serviceHelper>  
  
  <connectionStrings>
    <add name="ChiroGroepEntities" connectionString="metadata=res://*/ChiroGroepModel.csdl|res://*/ChiroGroepModel.ssdl|res://*/ChiroGroepModel.msl;provider=System.Data.SqlClient;provider connection string=&quot;Data Source=devsrv1.chiro.lokaal\sql2k5;Initial Catalog=gap;User ID=CgApp;Password=doemaariets;MultipleActiveResultSets=True;Application Name=gap&quot;" providerName="System.Data.EntityClient"/>
  </connectionStrings>
  
  <system.serviceModel>
    
    <extensions>
      <behaviorExtensions>
        <add name="DIServiceBehaviorExtension" type="Chiro.Cdf.DependencyInjection.DIServiceBehaviorSection, Chiro.Cdf.DependencyInjectionBehavior, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
      </behaviorExtensions>
    </extensions>
    
    <bindings>
      <netMsmqBinding>       
        <!-- binding zonder security voor gapupdate -->
        <binding name="NoMsmqSecurity" receiveTimeout="2.00:00:00" receiveErrorHandling="Fault" timeToLive="14.00:00:00">
          <security mode="None"/>
        </binding>
        
        <!-- binding met security (denk ik) voor kipsync -->
        <binding name="WindowsSecurity" closeTimeout="00:01:00"
           openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00"
           deadLetterQueue="System" durable="true" exactlyOnce="true" maxReceivedMessageSize="65536"
           maxRetryCycles="2" receiveErrorHandling="Reject" receiveRetryCount="5"
           retryCycleDelay="00:30:00" timeToLive="1.00:00:00" useSourceJournal="false"
           useMsmqTracing="false" queueTransferProtocol="Native" maxBufferPoolSize="524288"
           useActiveDirectory="false">
          <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384"
           maxBytesPerRead="4096" maxNameTableCharCount="16384" />
          <security mode="None">
            <transport msmqAuthenticationMode="WindowsDomain" msmqEncryptionAlgorithm="RC4Stream"
             msmqProtectionLevel="Sign" msmqSecureHashAlgorithm="Sha1" />
            <message clientCredentialType="Windows" />
          </security>
        </binding>

      </netMsmqBinding>
    </bindings>
    
    <!-- definitie van deze service (eigen msmq) -->
    <services>
      <service behaviorConfiguration="Chiro.Gap.UpdateSvc.Service.UpdateServiceBehavior" name="Chiro.Gap.UpdateSvc.Service.UpdateService">
        <endpoint address="net.msmq://localhost/private/gapupdate" binding="netMsmqBinding" bindingConfiguration="NoMsmqSecurity" contract="Chiro.Gap.UpdateSvc.Contracts.IUpdateService">
          <!-- Let op dat je in het contract hierboven geen tikfouten maakt, want er is hiervoor geen autocomplete,
          en je ziet heel gemakkelijk over de fouten over. -->
          <identity>
            <dns value="localhost"/>
          </identity>
        </endpoint>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
        <host>
          <baseAddresses>
            <!-- Base address voor msmq.  Zelfde als gedefinieerd in endpoint.  Misschien mag dit dan wel weg. -->
            <add baseAddress="net.msmq://localhost/gapupdate"/>
            <!-- Base address voor metadata exchange -->
            <add baseAddress="http://localhost:8001/GapUpdateSvc" />
          </baseAddresses>
        </host>
      </service>
    </services>

    <!-- Definitie van de client (msmq voor kipsync) -->
    <client>
      <endpoint address="net.msmq://localhost/private/kipsyncpersoonservicequeue"
       binding="netMsmqBinding" bindingConfiguration="WindowsSecurity"
       contract="SyncService.ISyncPersoonService" name="NetMsmqBinding_ISyncPersoonService" />
    </client>


    <behaviors>
      <serviceBehaviors>
        <behavior name="Chiro.Gap.UpdateSvc.Service.UpdateServiceBehavior">
          <DIServiceBehaviorExtension />
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="false" />
          <serviceThrottling maxConcurrentCalls="1" />  <!-- anders heb ik precies altijd deadlocks... -->
        </behavior>
      </serviceBehaviors>
    </behaviors>
  </system.serviceModel>

  <unity>
    <containers>
      <container>
        <types>
          <!-- Deze mappings zijn zo goed als altijd nodig -->
          <type type="Chiro.Gap.Orm.DataInterfaces.IPersonenDao, Chiro.Gap.Orm" mapTo="Chiro.Gap.Data.Ef.PersonenDao, Chiro.Gap.Data"/>
          <type type="Chiro.Gap.Orm.DataInterfaces.IAutorisatieDao, Chiro.Gap.Orm" mapTo="Chiro.Gap.Data.Ef.AutorisatieDao, Chiro.Gap.Data"/>
          <type type="Chiro.Gap.Orm.DataInterfaces.IGavDao, Chiro.Gap.Orm" mapTo="Chiro.Gap.Data.Ef.GavDao, Chiro.Gap.Data"/>
          <type type="Chiro.Gap.Orm.DataInterfaces.IGroepenDao, Chiro.Gap.Orm" mapTo="Chiro.Gap.Data.Ef.GroepenDao, Chiro.Gap.Data"/>
          <type type="Chiro.Gap.Orm.DataInterfaces.IFunctiesDao, Chiro.Gap.Orm" mapTo="Chiro.Gap.Data.Ef.FunctiesDao, Chiro.Gap.Data"/>
          <type type="Chiro.Cdf.Data.IDao`1, Chiro.Cdf.Data" mapTo="Chiro.Gap.Data.Ef.AbstractChiroGroepDao`1, Chiro.Gap.Data"/>

          <!-- Let op: we bepalen dat dit proces superGAV is in onderstaande lijn. -->
          <type type="Chiro.Gap.Workers.IAutorisatieManager, Chiro.Gap.Workers" mapTo="Chiro.Gap.UpdateSvc.Service.SuperGavAutorisatieManager, Chiro.Gap.UpdateSvc.Service"/>
          <type type="Chiro.Gap.Workers.IAuthenticatieManager, Chiro.Gap.Workers" mapTo="Chiro.Gap.Workers.AuthenticatieManager, Chiro.Gap.Workers"/>
          <!-- Einde van de zo goed als altijd nodige mappings -->
          
          <!-- Toegevoegd voor groepen & leden -->
          <type type="Chiro.Gap.Orm.DataInterfaces.IGelieerdePersonenDao, Chiro.Gap.Orm" mapTo="Chiro.Gap.Data.Ef.GelieerdePersonenDao, Chiro.Gap.Data"/>
          <type type="Chiro.Gap.Workers.IVeelGebruikt, Chiro.Gap.Workers" mapTo="Chiro.Gap.Workers.VeelGebruikt, Chiro.Gap.Workers"/>
          <type type="Chiro.Gap.Orm.DataInterfaces.IGroepsWerkJaarDao, Chiro.Gap.Orm" mapTo="Chiro.Gap.Data.Ef.GroepsWerkJaarDao, Chiro.Gap.Data"/>
          <type type="Chiro.Gap.Orm.DataInterfaces.ILedenDao, Chiro.Gap.Orm" mapTo="Chiro.Gap.Data.Ef.LedenDao, Chiro.Gap.Data"/>
          <type type="Chiro.Gap.Orm.DataInterfaces.IKindDao, Chiro.Gap.Orm" mapTo="Chiro.Gap.Data.Ef.KindDao, Chiro.Gap.Data"/>
          <type type="Chiro.Gap.Orm.DataInterfaces.ILeidingDao, Chiro.Gap.Orm" mapTo="Chiro.Gap.Data.Ef.LeidingDao, Chiro.Gap.Data"/>
          <type type="Chiro.Gap.Orm.DataInterfaces.IAfdelingsJarenDao, Chiro.Gap.Orm" mapTo="Chiro.Gap.Data.Ef.AfdelingsJarenDao, Chiro.Gap.Data"/>
          <type type="Chiro.Gap.Orm.DataInterfaces.ICommunicatieVormDao, Chiro.Gap.Orm" mapTo="Chiro.Gap.Data.Ef.CommunicatieVormDao, Chiro.Gap.Data"/>
          <type type="Chiro.Gap.Orm.DataInterfaces.IAbonnementenDao, Chiro.Gap.Orm" mapTo="Chiro.Gap.Data.Ef.AbonnementenDao, Chiro.Gap.Data"/>
          <type type="Chiro.Gap.Orm.SyncInterfaces.ILedenSync, Chiro.Gap.Orm" mapTo="Chiro.Gap.Sync.LedenSync, Chiro.Gap.Sync"/>
          <type type="Chiro.Gap.Orm.SyncInterfaces.IDubbelpuntSync, Chiro.Gap.Orm" mapTo="Chiro.Gap.Sync.DubbelpuntSync, Chiro.Gap.Sync"/>

          <!-- om te developen: geen berichten posten voor KipSync. -->
          <type type="Chiro.Kip.ServiceContracts.ISyncPersoonService, Chiro.Kip.ServiceContracts" mapTo="Chiro.Kip.ServiceContracts.KipSyncMock, Chiro.Kip.ServiceContracts" />

        </types>
      </container>
    </containers>
  </unity>
<startup><supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0"/></startup></configuration>
