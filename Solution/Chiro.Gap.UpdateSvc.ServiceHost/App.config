<?xml version="1.0" encoding="utf-8"?>
<configuration>

  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
  </configSections>

  <connectionStrings>
    <add name="ChiroGroepEntities" connectionString="metadata=res://*/ChiroGroepModel.csdl|res://*/ChiroGroepModel.ssdl|res://*/ChiroGroepModel.msl;provider=System.Data.SqlClient;provider connection string=&quot;Data Source=.\SQLEXPRESS;Initial Catalog=gap_local;Integrated Security=SSPI;MultipleActiveResultSets=True;Application Name=gap_local&quot;" providerName="System.Data.EntityClient" />
  </connectionStrings>

  <system.serviceModel>

    <extensions>
      <behaviorExtensions>
        <!--<add name="DIServiceBehaviorExtension" type="Chiro.Cdf.DependencyInjection.DIServiceBehaviorSection, Chiro.Cdf.DependencyInjectionBehavior, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />-->
        <add name="unity" type="Chiro.Cdf.UnityWcfExtensions.UnityBehaviorExtensionElement, Chiro.Cdf.UnityWcfExtensions, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
      </behaviorExtensions>
    </extensions>

    <bindings>
      <netMsmqBinding>
        <!-- binding zonder security voor gapupdate -->
        <binding name="NoMsmqSecurity" receiveTimeout="2.00:00:00" receiveErrorHandling="Fault" timeToLive="14.00:00:00">
          <security mode="None" />
        </binding>

        <!-- binding met security (denk ik) voor kipsync -->
        <binding name="WindowsSecurity" closeTimeout="00:01:00" openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00" deadLetterQueue="System" durable="true" exactlyOnce="true" maxReceivedMessageSize="65536" maxRetryCycles="2" receiveErrorHandling="Reject" receiveRetryCount="5" retryCycleDelay="00:30:00" timeToLive="1.00:00:00" useSourceJournal="false" useMsmqTracing="false" queueTransferProtocol="Native" maxBufferPoolSize="524288" useActiveDirectory="false">
          <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384" maxBytesPerRead="4096" maxNameTableCharCount="16384" />
          <security mode="None">
            <transport msmqAuthenticationMode="WindowsDomain" msmqEncryptionAlgorithm="RC4Stream" msmqProtectionLevel="Sign" msmqSecureHashAlgorithm="Sha1" />
            <message clientCredentialType="Windows" />
          </security>
        </binding>

      </netMsmqBinding>
    </bindings>

    <!-- definitie van deze service (eigen msmq) -->
    <services>
      <service behaviorConfiguration="Chiro.Gap.UpdateSvc.Service.UpdateServiceBehavior" name="Chiro.Gap.UpdateSvc.Service.UpdateService">
        <endpoint address="net.msmq://localhost/private/gapupdatetest" binding="netMsmqBinding" bindingConfiguration="NoMsmqSecurity" contract="Chiro.Gap.UpdateSvc.Contracts.IUpdateService">
          <!-- Let op dat je in het contract hierboven geen tikfouten maakt, want er is hiervoor geen autocomplete,
          en je ziet heel gemakkelijk over de fouten over. -->
          <identity>
            <dns value="localhost" />
          </identity>
        </endpoint>
        <host>
          <baseAddresses>
            <!-- Base address voor msmq.  Zelfde als gedefinieerd in endpoint.  Misschien mag dit dan wel weg. -->
            <add baseAddress="net.msmq://localhost/private/gapupdatetest" />
          </baseAddresses>
        </host>
      </service>
    </services>

    <behaviors>
      <serviceBehaviors>
        <behavior name="Chiro.Gap.UpdateSvc.Service.UpdateServiceBehavior">
          <unity operationContextEnabled="true" instanceContextEnabled="false" />
          <serviceMetadata httpGetEnabled="false" />
          <serviceDebug includeExceptionDetailInFaults="false" />
          <serviceThrottling maxConcurrentCalls="1" />
          <!-- anders heb ik precies altijd deadlocks... -->
        </behavior>
      </serviceBehaviors>
    </behaviors>
  </system.serviceModel>

  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
    <alias alias="PerThread" type="Microsoft.Practices.Unity.PerThreadLifetimeManager, Microsoft.Practices.Unity" />
    <alias alias="PerOperationContext" type="Chiro.Cdf.UnityWcfExtensions.UnityOperationContextLifetimeManager, Chiro.Cdf.UnityWcfExtensions" />
    <alias alias="PerInstanceContext" type="Chiro.Cdf.UnityWcfExtensions.UnityInstanceContextLifetimeManager, Chiro.Cdf.UnityWcfExtensions" />
    <alias alias="PerContextChannel" type="Chiro.Cdf.UnityWcfExtensions.UnityContextChannelLifetimeManager, Chiro.Cdf.UnityWcfExtensions" />
    <alias alias="PerServiceHostBase" type="Chiro.Cdf.UnityWcfExtensions.UnityServiceHostBaseLifetimeManager, Chiro.Cdf.UnityWcfExtensions" />

    <container>

      <!-- repositoryprovider -->
      <register type="Chiro.Cdf.Poco.IContext, Chiro.Cdf.Poco" mapTo="Chiro.Gap.Poco.Context.ChiroGroepEntities, Chiro.Gap.Poco.Context">
        <lifetime type="PerOperationContext" />
      </register>
      <register type="Chiro.Cdf.Poco.IRepositoryProvider, Chiro.Cdf.Poco" mapTo="Chiro.Cdf.Poco.RepositoryProvider, Chiro.Cdf.Poco">
        <lifetime type="PerOperationContext" />
      </register>
      <register type="Chiro.Cdf.Poco.IRepository`1, Chiro.Cdf.Poco" mapTo="Chiro.Cdf.Poco.Repository`1, Chiro.Cdf.Poco">
        <lifetime type="PerOperationContext" />
      </register>

      <!-- Let op: we bepalen dat dit proces superGAV is in onderstaande lijn. -->
      <register type="Chiro.Gap.WorkerInterfaces.IAutorisatieManager, Chiro.Gap.WorkerInterfaces" mapTo="Chiro.Gap.UpdateSvc.Service.SuperGavAutorisatieManager, Chiro.Gap.UpdateSvc.Service">
        <lifetime type="PerOperationContext" />
      </register>
      <register type="Chiro.Gap.WorkerInterfaces.IAuthenticatieManager, Chiro.Gap.WorkerInterfaces" mapTo="Chiro.Gap.Workers.AuthenticatieManager, Chiro.Gap.Workers">
        <lifetime type="PerOperationContext" />
      </register>

      <!-- Manager interfaces (Da's iets van 1.4) -->
      <register type="Chiro.Gap.WorkerInterfaces.IVeelGebruikt, Chiro.Gap.WorkerInterfaces" mapTo="Chiro.Gap.Workers.VeelGebruikt, Chiro.Gap.Workers">
        <lifetime type="PerOperationContext" />
      </register>
      <register type="Chiro.Gap.WorkerInterfaces.IGroepenManager, Chiro.Gap.WorkerInterfaces" mapTo="Chiro.Gap.Workers.GroepenManager, Chiro.Gap.Workers">
        <lifetime type="PerOperationContext" />
      </register>
      <register type="Chiro.Gap.WorkerInterfaces.ILedenManager, Chiro.Gap.WorkerInterfaces" mapTo="Chiro.Gap.Workers.LedenManager, Chiro.Gap.Workers">
        <lifetime type="PerOperationContext" />
      </register>

    </container>
  </unity>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />
  </startup>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Practices.Unity" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.2.0.0" newVersion="1.2.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Practices.ServiceLocation" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.0.0.0" newVersion="1.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>
