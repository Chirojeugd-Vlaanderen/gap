<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration"/>
  </configSections>

  <connectionStrings>
    <add name="ChiroGroepEntities" connectionString="metadata=res://*/ChiroGroepModel.csdl|res://*/ChiroGroepModel.ssdl|res://*/ChiroGroepModel.msl;provider=System.Data.SqlClient;provider connection string=&quot;Data Source=devsrv1\sql2k5;Initial Catalog=gap;User ID=CgApp;Password=doemaariets;MultipleActiveResultSets=True;Application Name=Gap.UpdateSvc&quot;" providerName="System.Data.EntityClient"/>
  </connectionStrings>

  <system.serviceModel>

    <extensions>
      <behaviorExtensions>
        <add name="DIServiceBehaviorExtension" type="Chiro.Cdf.DependencyInjection.DIServiceBehaviorSection, Chiro.Cdf.DependencyInjectionBehavior, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
      </behaviorExtensions>
    </extensions>

    <bindings>
      <netMsmqBinding>
        <binding name="NoMsmqSecurity" receiveTimeout="2.00:00:00" receiveErrorHandling="Fault" timeToLive="14.00:00:00">
          <security mode="None"/>
        </binding>
      </netMsmqBinding>
    </bindings>
    <services>
      <service behaviorConfiguration="Chiro.Gap.UpdateSvc.Service.UpdateServiceBehavior" name="Chiro.Gap.UpdateSvc.Service.UpdateService">
        <endpoint address="net.msmq://localhost/gapupdate" binding="netMsmqBinding" bindingConfiguration="NoMsmqSecurity" contract="Chiro.Gap.UpdateSvc.Contracts.IUpdateService">
          <!-- Let op dat je in het contract hierboven geen tikfouten maakt, want er is hiervoor geen autocomplete,
          en je ziet heel gemakkelijk over de fouten over. -->
          <identity>
            <dns value="localhost"/>
          </identity>
        </endpoint>
        <host>
          <baseAddresses>
            <!-- Base address voor msmq.  Zelfde als gedefinieerd in endpoint.  Misschien mag dit dan wel weg. -->
            <add baseAddress="net.msmq://localhost/gapupdate"/>
          </baseAddresses>
        </host>
      </service>
    </services>



    <behaviors>
      <serviceBehaviors>
        <behavior name="Chiro.Gap.UpdateSvc.Service.UpdateServiceBehavior">
          <DIServiceBehaviorExtension />
          <serviceDebug includeExceptionDetailInFaults="false" />
          <serviceThrottling maxConcurrentCalls="1" />
          <!-- anders heb ik precies altijd deadlocks... -->
        </behavior>
      </serviceBehaviors>
    </behaviors>
  </system.serviceModel>

  <unity>
    <containers>
      <container name="container">
        <types>
          <!-- Deze mappings zijn zo goed als altijd nodig -->
          <type type="Chiro.Gap.Orm.DataInterfaces.IPersonenDao, Chiro.Gap.Orm" mapTo="Chiro.Gap.Data.Ef.PersonenDao, Chiro.Gap.Data"/>
          <type type="Chiro.Gap.Orm.DataInterfaces.IAutorisatieDao, Chiro.Gap.Orm" mapTo="Chiro.Gap.Data.Ef.AutorisatieDao, Chiro.Gap.Data"/>
          <type type="Chiro.Gap.Orm.DataInterfaces.IGavDao, Chiro.Gap.Orm" mapTo="Chiro.Gap.Data.Ef.GavDao, Chiro.Gap.Data"/>
          <type type="Chiro.Gap.Orm.DataInterfaces.IGroepenDao, Chiro.Gap.Orm" mapTo="Chiro.Gap.Data.Ef.GroepenDao, Chiro.Gap.Data"/>
          <type type="Chiro.Gap.Orm.DataInterfaces.IFunctiesDao, Chiro.Gap.Orm" mapTo="Chiro.Gap.Data.Ef.FunctiesDao, Chiro.Gap.Data"/>
          <type type="Chiro.Cdf.Data.IDao`1, Chiro.Cdf.Data" mapTo="Chiro.Gap.Data.Ef.AbstractChiroGroepDao`1, Chiro.Gap.Data"/>

          <!-- Let op: we bepalen dat dit proces superGAV is in onderstaande lijn. -->
          <type type="Chiro.Gap.Workers.IAutorisatieManager, Chiro.Gap.Workers" mapTo="Chiro.Gap.UpdateSvc.Service.SuperGavAutorisatieManager, Chiro.Gap.UpdateSvc.Service"/>
          <type type="Chiro.Gap.Workers.IAuthenticatieManager, Chiro.Gap.Workers" mapTo="Chiro.Gap.Workers.AuthenticatieManager, Chiro.Gap.Workers"/>
          <!-- Einde van de zo goed als altijd nodige mappings -->
        </types>
      </container>
    </containers>
  </unity>
</configuration>