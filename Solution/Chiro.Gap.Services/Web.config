<?xml version="1.0"?>
<!--
    Note: As an alternative to hand editing this file you can use the 
    web admin tool to configure settings for your application. Use
    the Website->Asp.Net Configuration option in Visual Studio.
    A full list of settings and comments can be found in 
    machine.config.comments usually located in 
    \Windows\Microsoft.Net\Framework\v2.x\Config 
-->
<configuration>
	<configSections>
    <section name="serviceHelper" type="Chiro.Adf.Configuration.AdfConfigurationSection, Chiro.Adf"/> 
		<section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration"/>
		<sectionGroup name="applicationSettings" type="System.Configuration.ApplicationSettingsGroup, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
			<section name="Chiro.Gap.Services.Properties.Settings" type="System.Configuration.ClientSettingsSection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false"/>
		</sectionGroup>
	</configSections>

  <serviceHelper>
    <serviceProviders>
      <!-- gebruik onderstaande om de service interfaces te resolven als WCF-service -->
      <!--<add name="wcf" type="Chiro.Adf.ChannelFactoryServiceProvider, Chiro.Adf"/>-->
      <!-- of onderstaande om IOC te gebruiken -->
      <add name="ioc" type="Chiro.Adf.IocServiceProvider, Chiro.Adf" />

      <!-- Als je bijv. kipsync wel via een service call wilt aanroepen, en de loginservice
           niet, dan kan dat door beide serviceproviders te declareren, en ervoor te zorgen
           dat de ene kipsync resolvet, en de andere de loginservice.
           
           De servicehelpers worden in praktijk in volgorde afgelopen, en de eerste die een
           instantie oplevert, wordt gebruikt -->
    </serviceProviders>
  </serviceHelper>  
  
	<unity>
		<containers>
			<container>
				<types>
					<type type="Chiro.Gap.Orm.DataInterfaces.IAutorisatieDao, Chiro.Gap.Orm" mapTo="Chiro.Gap.Data.Ef.AutorisatieDao, Chiro.Gap.Data, Version=1.0.0.0, Culture=neutral"/>
          <type type="Chiro.Gap.Orm.DataInterfaces.IAdressenDao, Chiro.Gap.Orm" mapTo="Chiro.Gap.Data.Ef.AdressenDao, Chiro.Gap.Data" />
          <type type="Chiro.Gap.Orm.DataInterfaces.IStratenDao, Chiro.Gap.Orm" mapTo="Chiro.Gap.Data.Ef.StratenDao, Chiro.Gap.Data"/>
					<type type="Chiro.Gap.Orm.DataInterfaces.ISubgemeenteDao, Chiro.Gap.Orm" mapTo="Chiro.Gap.Data.Ef.SubgemeenteDao, Chiro.Gap.Data"/>
          <type type="Chiro.Gap.Orm.DataInterfaces.ILandenDao, Chiro.Gap.Orm" mapTo="Chiro.Gap.Data.Ef.LandenDao, Chiro.Gap.Data" />
          <type type="Chiro.Gap.Orm.DataInterfaces.IGelieerdePersonenDao, Chiro.Gap.Orm" mapTo="Chiro.Gap.Data.Ef.GelieerdePersonenDao, Chiro.Gap.Data"/>
					<type type="Chiro.Gap.Orm.DataInterfaces.IPersonenDao, Chiro.Gap.Orm" mapTo="Chiro.Gap.Data.Ef.PersonenDao, Chiro.Gap.Data"/>
					<type type="Chiro.Gap.Orm.DataInterfaces.ILedenDao, Chiro.Gap.Orm" mapTo="Chiro.Gap.Data.Ef.LedenDao, Chiro.Gap.Data"/>
					<type type="Chiro.Gap.Orm.DataInterfaces.IKindDao, Chiro.Gap.Orm" mapTo="Chiro.Gap.Data.Ef.KindDao, Chiro.Gap.Data"/>
					<type type="Chiro.Gap.Orm.DataInterfaces.ILeidingDao, Chiro.Gap.Orm" mapTo="Chiro.Gap.Data.Ef.LeidingDao, Chiro.Gap.Data"/>
					<type type="Chiro.Gap.Orm.DataInterfaces.IGroepenDao, Chiro.Gap.Orm" mapTo="Chiro.Gap.Data.Ef.GroepenDao, Chiro.Gap.Data"/>
					<type type="Chiro.Gap.Orm.DataInterfaces.IAfdelingsJarenDao, Chiro.Gap.Orm" mapTo="Chiro.Gap.Data.Ef.AfdelingsJarenDao, Chiro.Gap.Data"/>
					<type type="Chiro.Gap.Orm.DataInterfaces.ICategorieenDao, Chiro.Gap.Orm" mapTo="Chiro.Gap.Data.Ef.CategorieenDao, Chiro.Gap.Data"/>
					<type type="Chiro.Gap.Orm.DataInterfaces.IGroepsWerkJaarDao, Chiro.Gap.Orm" mapTo="Chiro.Gap.Data.Ef.GroepsWerkJaarDao, Chiro.Gap.Data"/>
					<type type="Chiro.Gap.Orm.DataInterfaces.IAfdelingenDao, Chiro.Gap.Orm" mapTo="Chiro.Gap.Data.Ef.AfdelingenDao, Chiro.Gap.Data"/>
					<type type="Chiro.Gap.Orm.DataInterfaces.IGavDao, Chiro.Gap.Orm" mapTo="Chiro.Gap.Data.Ef.GavDao, Chiro.Gap.Data"/>
					<type type="Chiro.Gap.Orm.DataInterfaces.IFunctiesDao, Chiro.Gap.Orm" mapTo="Chiro.Gap.Data.Ef.FunctiesDao, Chiro.Gap.Data"/>
					<type type="Chiro.Gap.Orm.DataInterfaces.ICommunicatieVormDao, Chiro.Gap.Orm" mapTo="Chiro.Gap.Data.Ef.CommunicatieVormDao, Chiro.Gap.Data"/>
          <type type="Chiro.Gap.Orm.DataInterfaces.IUitstappenDao, Chiro.Gap.Orm" mapTo="Chiro.Gap.Data.Ef.UitstappenDao, Chiro.Gap.Data"/>
          <type type="Chiro.Gap.Orm.DataInterfaces.IPlaatsenDao, Chiro.Gap.Orm" mapTo="Chiro.Gap.Data.Ef.PlaatsenDao, Chiro.Gap.Data"/>
          <type type="Chiro.Gap.Orm.DataInterfaces.IDeelnemersDao, Chiro.Gap.Orm" mapTo="Chiro.Gap.Data.Ef.DeelnemersDao, Chiro.Gap.Data"/>
          <type type="Chiro.Gap.Orm.DataInterfaces.IAbonnementenDao, Chiro.Gap.Orm" mapTo="Chiro.Gap.Data.Ef.AbonnementenDao, Chiro.Gap.Data"/>
          <type type="Chiro.Gap.Orm.DataInterfaces.IChiroGroepenDao, Chiro.Gap.Orm" mapTo="Chiro.Gap.Data.Ef.ChiroGroepenDao, Chiro.Gap.Data"/>
          <type type="Chiro.Cdf.Data.IDao`1, Chiro.Cdf.Data" mapTo="Chiro.Gap.Data.Ef.AbstractChiroGroepDao`1, Chiro.Gap.Data"/>
					<type type="Chiro.Gap.Workers.IVeelGebruikt, Chiro.Gap.Workers" mapTo="Chiro.Gap.Workers.VeelGebruikt, Chiro.Gap.Workers"/>
					<type type="Chiro.Gap.Workers.IAuthenticatieManager, Chiro.Gap.Workers" mapTo="Chiro.Gap.Workers.AuthenticatieManager, Chiro.Gap.Workers"/>
					<type type="Chiro.Gap.Workers.IAutorisatieManager, Chiro.Gap.Workers" mapTo="Chiro.Gap.Workers.AutorisatieManager, Chiro.Gap.Workers"/>
					<type type="Chiro.Gap.Orm.SyncInterfaces.IAdressenSync, Chiro.Gap.Orm" mapTo="Chiro.Gap.Sync.AdressenSync, Chiro.Gap.Sync"/>
					<type type="Chiro.Gap.Orm.SyncInterfaces.ICommunicatieSync, Chiro.Gap.Orm" mapTo="Chiro.Gap.Sync.CommunicatieSync, Chiro.Gap.Sync"/>
					<type type="Chiro.Gap.Orm.SyncInterfaces.IPersonenSync, Chiro.Gap.Orm" mapTo="Chiro.Gap.Sync.PersonenSync, Chiro.Gap.Sync"/>
					<type type="Chiro.Gap.Orm.SyncInterfaces.ILedenSync, Chiro.Gap.Orm" mapTo="Chiro.Gap.Sync.LedenSync, Chiro.Gap.Sync"/>
					<type type="Chiro.Gap.Orm.SyncInterfaces.IDubbelpuntSync, Chiro.Gap.Orm" mapTo="Chiro.Gap.Sync.DubbelpuntSync, Chiro.Gap.Sync"/>
					<type type="Chiro.Gap.Orm.SyncInterfaces.IVerzekeringenSync, Chiro.Gap.Orm" mapTo="Chiro.Gap.Sync.VerzekeringenSync, Chiro.Gap.Sync"/>
          <type type="Chiro.Gap.Orm.SyncInterfaces.IBivakSync, Chiro.Gap.Orm" mapTo="Chiro.Gap.Sync.BivakSync, Chiro.Gap.Sync"/>
          <type type="Chiro.Gap.Orm.SyncInterfaces.IGroepenSync, Chiro.Gap.Orm" mapTo="Chiro.Gap.Sync.GroepenSync, Chiro.Gap.Sync"/>
          <!-- om te developen/testen: geen accounts aanmaken in AD, noch berichten posten voor KipSync. -->
          <type type="Chiro.Ad.ServiceContracts.IAdService, Chiro.Ad.ServiceContracts" mapTo="Chiro.Ad.ServiceContracts.AdServiceMock, Chiro.Ad.ServiceContracts" />
          <type type="Chiro.Kip.ServiceContracts.ISyncPersoonService, Chiro.Kip.ServiceContracts" mapTo="Chiro.Kip.ServiceContracts.KipSyncMock, Chiro.Kip.ServiceContracts" />

          <!-- LET OP! Als er ook maar 1 typedefinitie fout is, dan krijg je bij het resolven van de eerste interface een
          foutmelding over een type dat niet geresolved kan worden.  Let erop dat 'mapTo' case sensitive is, en met een hoofdletter T -->

          <!-- mailen.  In praktijk doen we dat (nog) niet vanuit de web service.  Maar dit is een dependency die nodig is
               voor de GroepenManager, die we natuurlijk wel gebruiken. -->
          <type type="Chiro.Cdf.Mailer.IMailer, Chiro.Cdf.Mailer" mapTo="Chiro.Cdf.Mailer.Mailer, Chiro.Cdf.Mailer" />
               
        </types>
			</container>
		</containers>
	</unity>
	<appSettings/>
	<connectionStrings>
		<add name="ChiroGroepEntities" connectionString="metadata=res://*/ChiroGroepModel.csdl|res://*/ChiroGroepModel.ssdl|res://*/ChiroGroepModel.msl;provider=System.Data.SqlClient;provider connection string=&quot;Data Source=devsrv1.chiro.wereld\sql2k8;Initial Catalog=gap_dev;User ID=CgApp;Password=doemaariets;MultipleActiveResultSets=True;Application Name=gap&quot;" providerName="System.Data.EntityClient"/>
	</connectionStrings>
	<system.web>
		<!--
			Set compilation debug="true" to insert debugging 
			symbols into the compiled page. Because this 
			affects performance, set this value to true only 
			during development.
		-->
		<!--<compilation debug="true" targetFramework="4.0">
		</compilation>-->
		<globalization culture="nl-BE" uiCulture="nl-BE"/>
		<!--
			The <authentication> section enables configuration 
			of the security authentication mode used by 
			ASP.NET to identify an incoming user. 
		-->
		<authentication mode="Windows"/>
		<!--
			The <customErrors> section enables configuration 
			of what to do if/when an unhandled error occurs 
			during the execution of a request. Specifically, 
			it enables developers to configure html error pages 
			to be displayed in place of a error stack trace.
		-->
		<customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
			<error statusCode="403" redirect="NoAccess.htm"/>
			<error statusCode="404" redirect="FileNotFound.htm"/>
		</customErrors>
		<pages controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID"/>
		<compilation debug="true"/></system.web>
	<!--
		The system.webServer section is required for running ASP.NET AJAX under Internet
		Information Services 7.0.  It is not necessary for previous version of IIS.
	-->
	<system.serviceModel>
		<serviceHostingEnvironment multipleSiteBindingsEnabled="true" />

    <bindings>
       <basicHttpBinding>
          <binding name="BasicHttpBinding_IAdService" closeTimeout="00:01:00"
             openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00"
             allowCookies="false" bypassProxyOnLocal="false" hostNameComparisonMode="StrongWildcard"
             maxBufferSize="65536" maxBufferPoolSize="524288" maxReceivedMessageSize="65536"
             messageEncoding="Text" textEncoding="utf-8" transferMode="Buffered"
             useDefaultWebProxy="true">
             <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384"
                maxBytesPerRead="4096" maxNameTableCharCount="16384" />
             <security mode="None">
                <transport clientCredentialType="None" proxyCredentialType="None"
                   realm="" />
                <message clientCredentialType="UserName" algorithmSuite="Default" />
             </security>
          </binding>
       </basicHttpBinding>
       <netMsmqBinding>
          <binding name="NetMsmqBinding_ISyncPersoonService" closeTimeout="00:01:00"
             openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00"
             deadLetterQueue="System" durable="true" exactlyOnce="true"
             maxReceivedMessageSize="65536" maxRetryCycles="2" receiveErrorHandling="Reject"
             receiveRetryCount="5" retryCycleDelay="00:30:00" timeToLive="1.00:00:00"
             useSourceJournal="false" useMsmqTracing="false" queueTransferProtocol="Native"
             maxBufferPoolSize="524288" useActiveDirectory="false">
             <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384"
                maxBytesPerRead="4096" maxNameTableCharCount="16384" />
             <security mode="None">
                <transport msmqAuthenticationMode="WindowsDomain" msmqEncryptionAlgorithm="RC4Stream"
                   msmqProtectionLevel="Sign" msmqSecureHashAlgorithm="Sha1" />
                <message clientCredentialType="Windows" />
             </security>
          </binding>
       </netMsmqBinding>
       <wsHttpBinding>
          <binding name="ChiroWshttpBinding" closeTimeout="00:00:30" openTimeout="00:00:30"
             receiveTimeout="00:05:00" sendTimeout="00:05:00" maxReceivedMessageSize="130000" />
       </wsHttpBinding>
    </bindings>

    <client>
      <!-- endpoint voor kipsync -->
      <endpoint address="net.msmq://localhost/private/kipsyncpersoonservicequeue"
        binding="netMsmqBinding" bindingConfiguration="NetMsmqBinding_ISyncPersoonService"
        contract="SyncService.ISyncPersoonService" name="NetMsmqBinding_ISyncPersoonService" />
      <!-- endpoint voor AdService-->
      <endpoint address="http://localhost:50024/AdService.svc"
        binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_IAdService"
        contract="Chiro.Ad.ServiceContracts.IAdService" />
    </client>
        
		<diagnostics performanceCounters="All">
			<messageLogging logMalformedMessages="false" logMessagesAtServiceLevel="false" logMessagesAtTransportLevel="false"/>
		</diagnostics>

    <extensions>
      <behaviorExtensions>
        <add name="DIServiceBehaviorExtension" type="Chiro.Cdf.DependencyInjection.DIServiceBehaviorSection, Chiro.Cdf.DependencyInjectionBehavior, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
      </behaviorExtensions>
    </extensions>
		<behaviors>
      
   <serviceBehaviors>
    <behavior name="Chiro.Gap.Services.Behavior">
     <DIServiceBehaviorExtension />
     <serviceMetadata httpGetEnabled="true" httpsGetEnabled="false" />
     <serviceDebug httpsHelpPageEnabled="false" includeExceptionDetailInFaults="true" />
     <serviceThrottling />
    </behavior>
   </serviceBehaviors>
  </behaviors>
		<services>
   <service behaviorConfiguration="Chiro.Gap.Services.Behavior"
    name="Chiro.Gap.Services.GroepenService">
    <endpoint address="" binding="wsHttpBinding" bindingConfiguration="ChiroWshttpBinding"
     contract="Chiro.Gap.ServiceContracts.IGroepenService">
     <identity>
      <dns value="localhost" />
     </identity>
    </endpoint>
    <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
   </service>
   <service behaviorConfiguration="Chiro.Gap.Services.Behavior"
    name="Chiro.Gap.Services.GelieerdePersonenService">
    <endpoint address="" binding="wsHttpBinding" bindingConfiguration="ChiroWshttpBinding"
     contract="Chiro.Gap.ServiceContracts.IGelieerdePersonenService">
     <identity>
      <dns value="localhost" />
     </identity>
    </endpoint>
    <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
    <host>
     <timeouts closeTimeout="00:00:10" openTimeout="00:01:00" />
    </host>
   </service>
   <service behaviorConfiguration="Chiro.Gap.Services.Behavior"
    name="Chiro.Gap.Services.LedenService">
    <endpoint address="" binding="wsHttpBinding" bindingConfiguration="ChiroWshttpBinding"
     contract="Chiro.Gap.ServiceContracts.ILedenService">
     <identity>
      <dns value="localhost" />
     </identity>
    </endpoint>
    <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
   </service>
   <service behaviorConfiguration="Chiro.Gap.Services.Behavior"
    name="Chiro.Gap.Services.UitstappenService">
    <endpoint binding="wsHttpBinding" bindingConfiguration="ChiroWshttpBinding"
     contract="Chiro.Gap.ServiceContracts.IUitstappenService">
     <identity>
      <dns value="localhost" />
     </identity>
    </endpoint>
   </service>
  </services>
	</system.serviceModel>
	<applicationSettings>
		<Chiro.Gap.Services.Properties.Settings>
   <setting name="KleinAantal" serializeAs="String">
    <value>5</value>
   </setting>
   <setting name="LiveConnSubstring" serializeAs="String">
    <value>gaplive</value>
   </setting>
   <setting name="LeidingVanafLeeftijd" serializeAs="String">
    <value>15</value>
   </setting>
  </Chiro.Gap.Services.Properties.Settings>
	</applicationSettings>
	<system.diagnostics>
		<sources>
			<source name="System.ServiceModel.MessageLogging" switchValue="Warning, ActivityTracing">
				<listeners>
					<add type="System.Diagnostics.DefaultTraceListener" name="Default"/>
					<add name="ServiceModelMessageLoggingListener"/>
				</listeners>
			</source>
			<source name="System.ServiceModel" switchValue="Off, ActivityTracing" propagateActivity="true">
				<listeners>
					<add type="System.Diagnostics.DefaultTraceListener" name="Default"/>
					<add name="ServiceModelTraceListener"/>
				</listeners>
			</source>
		</sources>
		<sharedListeners>
			<add initializeData="c:\wcflogs\Web_messages.svclog" type="System.Diagnostics.XmlWriterTraceListener, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="ServiceModelMessageLoggingListener" traceOutputOptions="Timestamp"/>
			<add initializeData="c:\wcflogs\Web_tracelog.svclog" type="System.Diagnostics.XmlWriterTraceListener, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="ServiceModelTraceListener" traceOutputOptions="Timestamp"/>
		</sharedListeners>
		<trace autoflush="false"/>
	</system.diagnostics>
</configuration>
