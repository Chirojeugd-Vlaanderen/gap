<?xml version="1.0"?>
<!--
    Note: As an alternative to hand editing this file you can use the 
    web admin tool to configure settings for your application. Use
    the Website->Asp.Net Configuration option in Visual Studio.
    A full list of settings and comments can be found in 
    machine.config.comments usually located in 
    \Windows\Microsoft.Net\Framework\v2.x\Config 
-->
<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration"/>
    <sectionGroup name="applicationSettings" type="System.Configuration.ApplicationSettingsGroup, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
      <section name="Chiro.Gap.Services.Properties.Settings" type="System.Configuration.ClientSettingsSection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false"/>
    </sectionGroup>
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false"/>
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
  </configSections>
  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
    <alias alias="PerThread" type="Microsoft.Practices.Unity.PerThreadLifetimeManager, Microsoft.Practices.Unity"/>
    <alias alias="PerOperationContext" type="Chiro.Cdf.UnityWcfExtensions.UnityOperationContextLifetimeManager, Chiro.Cdf.UnityWcfExtensions"/>
    <alias alias="PerInstanceContext" type="Chiro.Cdf.UnityWcfExtensions.UnityInstanceContextLifetimeManager, Chiro.Cdf.UnityWcfExtensions"/>
    <alias alias="PerContextChannel" type="Chiro.Cdf.UnityWcfExtensions.UnityContextChannelLifetimeManager, Chiro.Cdf.UnityWcfExtensions"/>
    <alias alias="PerServiceHostBase" type="Chiro.Cdf.UnityWcfExtensions.UnityServiceHostBaseLifetimeManager, Chiro.Cdf.UnityWcfExtensions"/>
    <container>
      <!-- channelProvider -->
      <!-- De DevChannelProvider spreekt geen webservices aan. Dat is meestal goed voor dev :-) -->
      <!--<register type="Chiro.Cdf.ServiceHelper.IChannelProvider, Chiro.Cdf.ServiceHelper" mapTo="Chiro.Gap.Services.Dev.DevChannelProvider, Chiro.Gap.Services.Dev">
        <lifetime type="PerOperationContext"/>
      </register>-->
      <!-- Maar nu willen we messages naar de queue voor CiviSync. Dus: ChannelFactoryChannelProvider. Om te vermijden dat active-directory
           wordt aangesproken, configureren we de AD-Service niet. -->
      <register type="Chiro.Cdf.ServiceHelper.IChannelProvider, Chiro.Cdf.ServiceHelper" mapTo="Chiro.Cdf.ServiceHelper.ChannelFactoryChannelProvider, Chiro.Cdf.Servicehelper">
        <lifetime type="PerOperationContext" />
      </register>
      <!-- repositoryprovider -->
      <register type="Chiro.Cdf.Poco.IContext, Chiro.Cdf.Poco" mapTo="Chiro.Gap.Poco.Context.ChiroGroepEntities, Chiro.Gap.Poco.Context">
        <lifetime type="PerOperationContext"/>
      </register>
      <register type="Chiro.Cdf.Poco.IRepositoryProvider, Chiro.Cdf.Poco" mapTo="Chiro.Cdf.Poco.RepositoryProvider, Chiro.Cdf.Poco">
        <lifetime type="PerOperationContext"/>
      </register>
      <register type="Chiro.Cdf.Poco.IRepository`1, Chiro.Cdf.Poco" mapTo="Chiro.Cdf.Poco.Repository`1, Chiro.Cdf.Poco">
        <lifetime type="PerOperationContext"/>
      </register>
      <!-- de workerinterfaces -->
      <register type="Chiro.Gap.WorkerInterfaces.IVeelGebruikt, Chiro.Gap.WorkerInterfaces" mapTo="Chiro.Gap.Workers.VeelGebruikt, Chiro.Gap.Workers">
        <lifetime type="PerOperationContext"/>
      </register>
      <register type="Chiro.Gap.WorkerInterfaces.IAuthenticatieManager, Chiro.Gap.WorkerInterfaces" mapTo="Chiro.Gap.Workers.AuthenticatieManager, Chiro.Gap.Workers">
        <lifetime type="PerOperationContext"/>
      </register>
      <register type="Chiro.Gap.WorkerInterfaces.IAutorisatieManager, Chiro.Gap.WorkerInterfaces" mapTo="Chiro.Gap.Workers.AutorisatieManager, Chiro.Gap.Workers">
        <lifetime type="PerOperationContext"/>
      </register>
      <register type="Chiro.Gap.WorkerInterfaces.IChiroGroepenManager, Chiro.Gap.WorkerInterfaces" mapTo="Chiro.Gap.Workers.ChiroGroepenManager, Chiro.Gap.Workers">
        <lifetime type="PerOperationContext"/>
      </register>
      <register type="Chiro.Gap.WorkerInterfaces.IAfdelingsJaarManager, Chiro.Gap.WorkerInterfaces" mapTo="Chiro.Gap.Workers.AfdelingsJaarManager, Chiro.Gap.Workers">
        <lifetime type="PerOperationContext"/>
      </register>
      <register type="Chiro.Gap.WorkerInterfaces.IGroepsWerkJarenManager, Chiro.Gap.WorkerInterfaces" mapTo="Chiro.Gap.Workers.GroepsWerkJarenManager, Chiro.Gap.Workers">
        <lifetime type="PerOperationContext"/>
      </register>
      <register type="Chiro.Gap.WorkerInterfaces.IGelieerdePersonenManager, Chiro.Gap.WorkerInterfaces" mapTo="Chiro.Gap.Workers.GelieerdePersonenManager, Chiro.Gap.Workers">
        <lifetime type="PerOperationContext"/>
      </register>
      <register type="Chiro.Gap.WorkerInterfaces.ILedenManager, Chiro.Gap.WorkerInterfaces" mapTo="Chiro.Gap.Workers.LedenManager, Chiro.Gap.Workers">
        <lifetime type="PerOperationContext"/>
      </register>
      <register type="Chiro.Gap.WorkerInterfaces.IGebruikersRechtenManager, Chiro.Gap.WorkerInterfaces" mapTo="Chiro.Gap.Workers.GebruikersRechtenManager, Chiro.Gap.Workers">
        <lifetime type="PerOperationContext"/>
      </register>
      <register type="Chiro.Gap.WorkerInterfaces.IGroepenManager, Chiro.Gap.WorkerInterfaces" mapTo="Chiro.Gap.Workers.GroepenManager, Chiro.Gap.Workers">
        <lifetime type="PerOperationContext"/>
      </register>
      <register type="Chiro.Gap.WorkerInterfaces.IUitstappenManager, Chiro.Gap.WorkerInterfaces" mapTo="Chiro.Gap.Workers.UitstappenManager, Chiro.Gap.Workers">
        <lifetime type="PerOperationContext"/>
      </register>
      <register type="Chiro.Gap.WorkerInterfaces.IFunctiesManager, Chiro.Gap.WorkerInterfaces" mapTo="Chiro.Gap.Workers.FunctiesManager, Chiro.Gap.Workers">
        <lifetime type="PerOperationContext"/>
      </register>
      <register type="Chiro.Gap.WorkerInterfaces.ICommunicatieVormenManager, Chiro.Gap.WorkerInterfaces" mapTo="Chiro.Gap.Workers.CommunicatieVormenManager, Chiro.Gap.Workers">
        <lifetime type="PerOperationContext"/>
      </register>
      <register type="Chiro.Gap.WorkerInterfaces.IVerzekeringenManager, Chiro.Gap.WorkerInterfaces" mapTo="Chiro.Gap.Workers.VerzekeringenManager, Chiro.Gap.Workers">
        <lifetime type="PerOperationContext"/>
      </register>
      <register type="Chiro.Gap.WorkerInterfaces.IJaarOvergangManager, Chiro.Gap.WorkerInterfaces" mapTo="Chiro.Gap.Workers.JaarOvergangManager, Chiro.Gap.Workers">
        <lifetime type="PerOperationContext"/>
      </register>
      <register type="Chiro.Gap.WorkerInterfaces.IAdressenManager, Chiro.Gap.WorkerInterfaces" mapTo="Chiro.Gap.Workers.AdressenManager, Chiro.Gap.Workers">
        <lifetime type="PerOperationContext"/>
      </register>
      <register type="Chiro.Gap.WorkerInterfaces.IPersonenManager, Chiro.Gap.WorkerInterfaces" mapTo="Chiro.Gap.Workers.PersonenManager, Chiro.Gap.Workers">
        <lifetime type="PerOperationContext"/>
      </register>
      <register type="Chiro.Gap.WorkerInterfaces.IAbonnementenManager, Chiro.Gap.WorkerInterfaces" mapTo="Chiro.Gap.Workers.AbonnementenManager, Chiro.Gap.Workers">
        <lifetime type="PerOperationContext"/>
      </register>
      <!-- de syncinterfaces -->
      <register type="Chiro.Gap.SyncInterfaces.IAdressenSync, Chiro.Gap.SyncInterfaces" mapTo="Chiro.Gap.Sync.AdressenSync, Chiro.Gap.Sync">
        <lifetime type="PerOperationContext"/>
      </register>
      <register type="Chiro.Gap.SyncInterfaces.ICommunicatieSync, Chiro.Gap.SyncInterfaces" mapTo="Chiro.Gap.Sync.CommunicatieSync, Chiro.Gap.Sync">
        <lifetime type="PerOperationContext"/>
      </register>
      <register type="Chiro.Gap.SyncInterfaces.IPersonenSync, Chiro.Gap.SyncInterfaces" mapTo="Chiro.Gap.Sync.PersonenSync, Chiro.Gap.Sync">
        <lifetime type="PerOperationContext"/>
      </register>
      <register type="Chiro.Gap.SyncInterfaces.ILedenSync, Chiro.Gap.SyncInterfaces" mapTo="Chiro.Gap.Sync.LedenSync, Chiro.Gap.Sync">
        <lifetime type="PerOperationContext"/>
      </register>
      <register type="Chiro.Gap.SyncInterfaces.IVerzekeringenSync, Chiro.Gap.SyncInterfaces" mapTo="Chiro.Gap.Sync.VerzekeringenSync, Chiro.Gap.Sync">
        <lifetime type="PerOperationContext"/>
      </register>
      <register type="Chiro.Gap.SyncInterfaces.IBivakSync, Chiro.Gap.SyncInterfaces" mapTo="Chiro.Gap.Sync.BivakSync, Chiro.Gap.Sync">
        <lifetime type="PerOperationContext"/>
      </register>
      <register type="Chiro.Gap.SyncInterfaces.IGroepenSync, Chiro.Gap.SyncInterfaces" mapTo="Chiro.Gap.Sync.GroepenSync, Chiro.Gap.Sync">
        <lifetime type="PerOperationContext"/>
      </register>
      <register type="Chiro.Gap.SyncInterfaces.IAbonnementenSync, Chiro.Gap.SyncInterfaces" mapTo="Chiro.Gap.Sync.AbonnementenSync, Chiro.Gap.Sync">
        <lifetime type="PerOperationContext"/>
      </register>
      <!-- LET OP! Als er ook maar 1 typedefinitie fout is, dan krijg je bij het resolven van de eerste interface een
          foutmelding over een type dat niet geresolved kan worden.  Let erop dat 'mapTo' case sensitive is, en met een hoofdletter T -->
    </container>
  </unity>
  <connectionStrings>
    <add name="ChiroGroepEntities" connectionString="metadata=res://*/ChiroGroepModel.csdl|res://*/ChiroGroepModel.ssdl|res://*/ChiroGroepModel.msl;provider=System.Data.SqlClient;provider connection string=&quot;Data Source=.\SQLEXPRESS;Initial Catalog=gap_local;Integrated Security=SSPI;MultipleActiveResultSets=True;Application Name=gap_local&quot;" providerName="System.Data.EntityClient"/>
  </connectionStrings>
  <!--
    For a description of web.config changes see http://go.microsoft.com/fwlink/?LinkId=235367.

    The following attributes can be set on the <httpRuntime> tag.
      <system.Web>
        <httpRuntime targetFramework="4.5" />
      </system.Web>
  -->
  <system.web>
    <!--
      Set compilation debug="true" to insert debugging 
      symbols into the compiled page. Because this 
      affects performance, set this value to true only 
      during development.
    -->
    <!--<compilation debug="true" targetFramework="4.0">
    </compilation>-->
    <globalization culture="nl-BE" uiCulture="nl-BE"/>
    <!--
      The <authentication> section enables configuration 
      of the security authentication mode used by 
      ASP.NET to identify an incoming user. 
    -->
    <authentication mode="Windows"/>
    <!--
      The <customErrors> section enables configuration 
      of what to do if/when an unhandled error occurs 
      during the execution of a request. Specifically, 
      it enables developers to configure html error pages 
      to be displayed in place of a error stack trace.
    -->
    <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
      <error statusCode="403" redirect="NoAccess.htm"/>
      <error statusCode="404" redirect="FileNotFound.htm"/>
    </customErrors>
    <pages controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID"/>
    <compilation debug="true" targetFramework="4.5.2"/>
  </system.web>
  <!--
    The system.webServer section is required for running ASP.NET AJAX under Internet
    Information Services 7.0.  It is not necessary for previous version of IIS.
  -->
  <system.serviceModel>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="false" multipleSiteBindingsEnabled="true"/>
    <bindings>
      <!-- De msmq-binding voor de CiviSync. -->
      <netMsmqBinding>
        <binding name="NetMsmqBinding_ISyncPersoonService" closeTimeout="00:01:00" openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00" deadLetterQueue="System" durable="true" exactlyOnce="true" maxReceivedMessageSize="65536" maxRetryCycles="2" receiveErrorHandling="Reject" receiveRetryCount="5" retryCycleDelay="00:30:00" timeToLive="1.00:00:00" useSourceJournal="false" useMsmqTracing="false" queueTransferProtocol="Native" maxBufferPoolSize="524288" useActiveDirectory="false">
          <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384" maxBytesPerRead="4096" maxNameTableCharCount="16384"/>
          <security mode="None">
            <transport msmqAuthenticationMode="WindowsDomain" msmqEncryptionAlgorithm="RC4Stream" msmqProtectionLevel="Sign" msmqSecureHashAlgorithm="Sha1"/>
            <message clientCredentialType="Windows"/>
          </security>
        </binding>
      </netMsmqBinding>
      <!-- Onderstaande binding wordt gebruikt door de services van de backend. Deze services dus :-) -->
      <wsHttpBinding>
        <!-- maxReceivedMessageSize groot genoeg, opdat Chiro Schelle ook alle lidvoorstellen
        tegelijk kan krijgen bij de jaarovergang. -->
        <binding name="ChiroWshttpBinding" closeTimeout="00:00:30" openTimeout="00:00:30" receiveTimeout="00:05:00" sendTimeout="00:05:00" maxReceivedMessageSize="260000"/>
      </wsHttpBinding>
    </bindings>
    <!-- Clientdefinities hieronder zijn enkel relevant als je kipsync of de 
         loginservice wilt gebruiken. Meestal niet nodig voor dev. -->
    <client>
      <endpoint address="net.msmq://localhost/private/civisyncdev" binding="netMsmqBinding" bindingConfiguration="NetMsmqBinding_ISyncPersoonService" contract="Chiro.Kip.ServiceContracts.ISyncPersoonService"/>
    </client>
    <diagnostics performanceCounters="All">
      <messageLogging logMalformedMessages="false" logMessagesAtServiceLevel="false" logMessagesAtTransportLevel="false"/>
    </diagnostics>
    <extensions>
      <behaviorExtensions>
        <add name="unity" type="Chiro.Cdf.UnityWcfExtensions.UnityBehaviorExtensionElement, Chiro.Cdf.UnityWcfExtensions, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
      </behaviorExtensions>
    </extensions>
    <behaviors>
      <serviceBehaviors>
        <behavior name="GapServiceBehavior">
          <serviceMetadata httpGetEnabled="false" httpsGetEnabled="false"/>
          <serviceDebug httpsHelpPageEnabled="false" includeExceptionDetailInFaults="true"/>
          <serviceThrottling/>
          <unity operationContextEnabled="true" instanceContextEnabled="false"/>
        </behavior>
        <behavior name="">
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true"/>
          <serviceDebug includeExceptionDetailInFaults="false"/>
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <services>
      <service behaviorConfiguration="GapServiceBehavior" name="Chiro.Gap.Services.GroepenService">
        <endpoint address="" binding="wsHttpBinding" bindingConfiguration="ChiroWshttpBinding" contract="Chiro.Gap.ServiceContracts.IGroepenService">
          <identity>
            <dns value="localhost"/>
          </identity>
        </endpoint>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
      </service>
      <service behaviorConfiguration="GapServiceBehavior" name="Chiro.Gap.Services.DbHacksService">
        <endpoint address="" binding="wsHttpBinding" bindingConfiguration="ChiroWshttpBinding" contract="Chiro.Gap.ServiceContracts.IDbHacksService">
          <identity>
            <dns value="localhost"/>
          </identity>
        </endpoint>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
      </service>      
      <service behaviorConfiguration="GapServiceBehavior" name="Chiro.Gap.Services.GelieerdePersonenService">
        <endpoint address="" binding="wsHttpBinding" bindingConfiguration="ChiroWshttpBinding" contract="Chiro.Gap.ServiceContracts.IGelieerdePersonenService">
          <identity>
            <dns value="localhost"/>
          </identity>
        </endpoint>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
        <host>
          <timeouts closeTimeout="00:00:10" openTimeout="00:01:00"/>
        </host>
      </service>
      <service behaviorConfiguration="GapServiceBehavior" name="Chiro.Gap.Services.LedenService">
        <endpoint address="" binding="wsHttpBinding" bindingConfiguration="ChiroWshttpBinding" contract="Chiro.Gap.ServiceContracts.ILedenService">
          <identity>
            <dns value="localhost"/>
          </identity>
        </endpoint>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
      </service>
      <service behaviorConfiguration="GapServiceBehavior" name="Chiro.Gap.Services.UitstappenService">
        <endpoint binding="wsHttpBinding" bindingConfiguration="ChiroWshttpBinding" contract="Chiro.Gap.ServiceContracts.IUitstappenService">
          <identity>
            <dns value="localhost"/>
          </identity>
        </endpoint>
        <endpoint address="mex" binding="mexHttpBinding" bindingConfiguration="" contract="IMetadataExchange"/>
      </service>
      <service behaviorConfiguration="GapServiceBehavior" name="Chiro.Gap.Services.GebruikersService">
        <endpoint binding="wsHttpBinding" bindingConfiguration="ChiroWshttpBinding" contract="Chiro.Gap.ServiceContracts.IGebruikersService">
          <identity>
            <dns value="localhost"/>
          </identity>
        </endpoint>
        <endpoint address="mex" binding="mexHttpBinding" bindingConfiguration="" contract="IMetadataExchange"/>
      </service>
    </services>
  </system.serviceModel>
  <applicationSettings>
    <Chiro.Gap.Services.Properties.Settings>
      <setting name="LiveConnSubstring" serializeAs="String">
        <value>gaplive</value>
      </setting>
      <setting name="LeidingVanafLeeftijd" serializeAs="String">
        <value>15</value>
      </setting>
      <setting name="EncryptieSleutel" serializeAs="String">
        <value>bSzTnlw7aalstnLytquah4jAMbVrMK3lgViEqXT2WB0=</value>
      </setting>
      <setting name="HashSleutel" serializeAs="String">
        <value>FA/NSFrNPj3IPOsqsDLJgc2wVeeTHaktE0wkXtN5n3Q=</value>
      </setting>
      <setting name="UrlVerzekeraar" serializeAs="String">
        <value>http://test.ic-verzekeringen.be/chiro/logon.asp?user={0}&amp;hash={1}</value>
      </setting>
      <setting name="AantalStraatSuggesties" serializeAs="String">
        <value>20</value>
      </setting>
    </Chiro.Gap.Services.Properties.Settings>
  </applicationSettings>
  <system.diagnostics>
    <trace autoflush="false"/>
  </system.diagnostics>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework"/>
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer"/>
    </providers>
  </entityFramework>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35"/>
        <bindingRedirect oldVersion="1.0.0.0-5.2.2.0" newVersion="5.2.2.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Practices.Unity" publicKeyToken="31bf3856ad364e35" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-3.5.0.0" newVersion="3.5.0.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Practices.ServiceLocation" publicKeyToken="31bf3856ad364e35" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-1.2.0.0" newVersion="1.2.0.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Helpers" publicKeyToken="31bf3856ad364e35"/>
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages" publicKeyToken="31bf3856ad364e35"/>
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0"/>
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>
