//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3615
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Chiro.Kip.ResubmitDeadMessages.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ISyncPersoonService")]
    public interface ISyncPersoonService {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISyncPersoonService/PersoonUpdaten")]
        void PersoonUpdaten(Chiro.Kip.ServiceContracts.DataContracts.Persoon persoon);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISyncPersoonService/StandaardAdresBewaren")]
        void StandaardAdresBewaren(Chiro.Kip.ServiceContracts.DataContracts.Adres adres, Chiro.Kip.ServiceContracts.DataContracts.Bewoner[] bewoners);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISyncPersoonService/CommunicatieToevoegen")]
        void CommunicatieToevoegen(Chiro.Kip.ServiceContracts.DataContracts.Persoon persoon, Chiro.Kip.ServiceContracts.DataContracts.CommunicatieMiddel communicatieMiddel);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISyncPersoonService/AlleCommunicatieBewaren")]
        void AlleCommunicatieBewaren(Chiro.Kip.ServiceContracts.DataContracts.Persoon persoon, Chiro.Kip.ServiceContracts.DataContracts.CommunicatieMiddel[] communicatieMiddelen);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISyncPersoonService/CommunicatieVerwijderen")]
        void CommunicatieVerwijderen(Chiro.Kip.ServiceContracts.DataContracts.Persoon pers, Chiro.Kip.ServiceContracts.DataContracts.CommunicatieMiddel communicatie);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISyncPersoonService/LidBewaren")]
        void LidBewaren(int adNummer, Chiro.Kip.ServiceContracts.DataContracts.LidGedoe gedoe);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISyncPersoonService/NieuwLidBewaren")]
        void NieuwLidBewaren(Chiro.Kip.ServiceContracts.DataContracts.PersoonDetails details, Chiro.Kip.ServiceContracts.DataContracts.LidGedoe lidGedoe);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISyncPersoonService/FunctiesUpdaten")]
        void FunctiesUpdaten(Chiro.Kip.ServiceContracts.DataContracts.Persoon persoon, string stamNummer, int werkJaar, Chiro.Kip.ServiceContracts.DataContracts.FunctieEnum[] functies);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISyncPersoonService/LidTypeUpdaten")]
        void LidTypeUpdaten(Chiro.Kip.ServiceContracts.DataContracts.Persoon persoon, string stamNummer, int werkJaar, Chiro.Kip.ServiceContracts.DataContracts.LidTypeEnum lidType);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISyncPersoonService/AfdelingenUpdaten")]
        void AfdelingenUpdaten(Chiro.Kip.ServiceContracts.DataContracts.Persoon persoon, string stamNummer, int werkJaar, Chiro.Kip.ServiceContracts.DataContracts.AfdelingEnum[] afdelingen);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISyncPersoonService/DubbelpuntBestellen")]
        void DubbelpuntBestellen(int adNummer, string stamNummer, int werkJaar);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISyncPersoonService/DubbelpuntBestellenNieuwePersoon")]
        void DubbelpuntBestellenNieuwePersoon(Chiro.Kip.ServiceContracts.DataContracts.PersoonDetails details, string stamNummer, int werkJaar);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISyncPersoonService/LoonVerliesVerzekeren")]
        void LoonVerliesVerzekeren(int adNummer, string stamNummer, int werkJaar);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISyncPersoonService/LoonVerliesVerzekerenAdOnbekend")]
        void LoonVerliesVerzekerenAdOnbekend(Chiro.Kip.ServiceContracts.DataContracts.PersoonDetails details, string stamNummer, int werkJaar);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface ISyncPersoonServiceChannel : Chiro.Kip.ResubmitDeadMessages.ServiceReference1.ISyncPersoonService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class SyncPersoonServiceClient : System.ServiceModel.ClientBase<Chiro.Kip.ResubmitDeadMessages.ServiceReference1.ISyncPersoonService>, Chiro.Kip.ResubmitDeadMessages.ServiceReference1.ISyncPersoonService {
        
        public SyncPersoonServiceClient() {
        }
        
        public SyncPersoonServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SyncPersoonServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SyncPersoonServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SyncPersoonServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void PersoonUpdaten(Chiro.Kip.ServiceContracts.DataContracts.Persoon persoon) {
            base.Channel.PersoonUpdaten(persoon);
        }
        
        public void StandaardAdresBewaren(Chiro.Kip.ServiceContracts.DataContracts.Adres adres, Chiro.Kip.ServiceContracts.DataContracts.Bewoner[] bewoners) {
            base.Channel.StandaardAdresBewaren(adres, bewoners);
        }
        
        public void CommunicatieToevoegen(Chiro.Kip.ServiceContracts.DataContracts.Persoon persoon, Chiro.Kip.ServiceContracts.DataContracts.CommunicatieMiddel communicatieMiddel) {
            base.Channel.CommunicatieToevoegen(persoon, communicatieMiddel);
        }
        
        public void AlleCommunicatieBewaren(Chiro.Kip.ServiceContracts.DataContracts.Persoon persoon, Chiro.Kip.ServiceContracts.DataContracts.CommunicatieMiddel[] communicatieMiddelen) {
            base.Channel.AlleCommunicatieBewaren(persoon, communicatieMiddelen);
        }
        
        public void CommunicatieVerwijderen(Chiro.Kip.ServiceContracts.DataContracts.Persoon pers, Chiro.Kip.ServiceContracts.DataContracts.CommunicatieMiddel communicatie) {
            base.Channel.CommunicatieVerwijderen(pers, communicatie);
        }
        
        public void LidBewaren(int adNummer, Chiro.Kip.ServiceContracts.DataContracts.LidGedoe gedoe) {
            base.Channel.LidBewaren(adNummer, gedoe);
        }
        
        public void NieuwLidBewaren(Chiro.Kip.ServiceContracts.DataContracts.PersoonDetails details, Chiro.Kip.ServiceContracts.DataContracts.LidGedoe lidGedoe) {
            base.Channel.NieuwLidBewaren(details, lidGedoe);
        }
        
        public void FunctiesUpdaten(Chiro.Kip.ServiceContracts.DataContracts.Persoon persoon, string stamNummer, int werkJaar, Chiro.Kip.ServiceContracts.DataContracts.FunctieEnum[] functies) {
            base.Channel.FunctiesUpdaten(persoon, stamNummer, werkJaar, functies);
        }
        
        public void LidTypeUpdaten(Chiro.Kip.ServiceContracts.DataContracts.Persoon persoon, string stamNummer, int werkJaar, Chiro.Kip.ServiceContracts.DataContracts.LidTypeEnum lidType) {
            base.Channel.LidTypeUpdaten(persoon, stamNummer, werkJaar, lidType);
        }
        
        public void AfdelingenUpdaten(Chiro.Kip.ServiceContracts.DataContracts.Persoon persoon, string stamNummer, int werkJaar, Chiro.Kip.ServiceContracts.DataContracts.AfdelingEnum[] afdelingen) {
            base.Channel.AfdelingenUpdaten(persoon, stamNummer, werkJaar, afdelingen);
        }
        
        public void DubbelpuntBestellen(int adNummer, string stamNummer, int werkJaar) {
            base.Channel.DubbelpuntBestellen(adNummer, stamNummer, werkJaar);
        }
        
        public void DubbelpuntBestellenNieuwePersoon(Chiro.Kip.ServiceContracts.DataContracts.PersoonDetails details, string stamNummer, int werkJaar) {
            base.Channel.DubbelpuntBestellenNieuwePersoon(details, stamNummer, werkJaar);
        }
        
        public void LoonVerliesVerzekeren(int adNummer, string stamNummer, int werkJaar) {
            base.Channel.LoonVerliesVerzekeren(adNummer, stamNummer, werkJaar);
        }
        
        public void LoonVerliesVerzekerenAdOnbekend(Chiro.Kip.ServiceContracts.DataContracts.PersoonDetails details, string stamNummer, int werkJaar) {
            base.Channel.LoonVerliesVerzekerenAdOnbekend(details, stamNummer, werkJaar);
        }
    }
}
